digraph "" {

	256 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000100</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000100: push   {r3,r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[100:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000102: ldr    r5,[0x160]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[102:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[ram[160:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000104: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[104:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000106: bl     0x4096
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[106:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x10a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4096:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=256,
		block_size=10,
		insn_addrs="[256, 258, 260, 262]"
	];
	256 -> { 16534, 266 };


	266 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000010a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000010a: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000010c: cbz    r0,0x15c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[15c:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=266,
		block_size=4,
		insn_addrs="[266, 268]"
	];
	266 -> { 348, 270 };


	270 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000010e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000010e: ldr    r2,[r5,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000110: ldr    r1,[r5,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[110:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000112: ldr    r3,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[112:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000114: orr    r3,r3,#0x2000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[114:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x2000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000118: str    r3,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[118:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000011a: ldr    r3,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000011c: ldr    r2,[0x164]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[164:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000011e: movs   r1,#0xd
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0xd])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000120: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[120:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000122: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[122:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x124, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=270,
		block_size=22,
		insn_addrs="[270, 272, 274, 276, 280, 282, 284, 286, 288, 290]"
	];
	270 -> { 4676, 292 };


	292 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000124</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000124: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[124:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000126: blt    0x15c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[126:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[15c:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=292,
		block_size=4,
		insn_addrs="[292, 294]"
	];
	292 -> { 348, 296 };


	296 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000128</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000128: ldr    r7,[0x168]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[128:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[ram[168:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000012a: ldr    r6,[0x16c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[ram[16c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=296,
		block_size=4,
		insn_addrs="[296, 298]"
	];
	296 -> { 300 };


	300 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000012c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000012c: ldr    r3,[r5,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000012e: mov.w  r1,#0x2000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x2000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000132: ldr    r3,[r3,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[132:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000134: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[134:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000136: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[136:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x138, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=300,
		block_size=12,
		insn_addrs="[300, 302, 306, 308, 310]"
	];
	300 -> { 15858, 312 };


	312 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000138</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000138: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[138:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000013a: blt    0x15c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[15c:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=312,
		block_size=4,
		insn_addrs="[312, 314]"
	];
	312 -> { 348, 316 };


	316 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000013c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000013c: eor    r4,r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_XOR(out=r4, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000140: ands   r4,r4,#0xff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[140:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r4, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000144: ite    ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[144:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000146: mov    r1,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[146:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[148:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000148: mov    r1,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[148:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[14a:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000014a: ldr    r0,[0x170]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[170:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000014c: bl     0x34a4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x150, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[34a4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=316,
		block_size=20,
		insn_addrs="[316, 320, 324, 326, 328, 330, 332]"
	];
	316 -> { 13476, 336 };


	336 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000150</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000150: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[150:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000152: mov.w  r0,#0x8000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[152:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x8000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000156: bl     0x3090
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[156:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x15a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3090:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=336,
		block_size=10,
		insn_addrs="[336, 338, 342]"
	];
	336 -> { 12432, 346 };


	346 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000015a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000015a: b      0x12c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[12c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=346,
		block_size=2,
		insn_addrs="[346]"
	];
	346 -> { 300 };


	348 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000015c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000015c: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000015e: pop    {r3,r4,r5,r6,r7,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15e:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=348,
		block_size=4,
		insn_addrs="[348, 350]"
	];



	384 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000180</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000180: ldr    r3,[0x188]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[180:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[188:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000182: str    r0,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[182:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000184: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[184:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=384,
		block_size=6,
		insn_addrs="[384, 386, 388]"
	];



	396 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000018c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000018c: push   {r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000018e: sub    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18e:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000190: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[190:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000192: mov    r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[192:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000194: movs   r2,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[194:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000196: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[196:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000198: mov    r0,sp
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[198:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[sp])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000019a: bl     0x43c0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[19a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x19e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[43c0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=396,
		block_size=18,
		insn_addrs="[396, 398, 400, 402, 404, 406, 408, 410]"
	];
	396 -> { 17344, 414 };


	414 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000019e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000019e: movs   r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[19e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001a0: strb.w r3,[sp,#0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1a0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x2])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001a4: mov    r2,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1a4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001a6: ldr    r3,[0x1b8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1a6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1b8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001a8: str    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1a8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001aa: mov    r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1aa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001ac: mov    r0,sp
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ac:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[sp])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001ae: bl     0x34c8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ae:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1b2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[34c8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=414,
		block_size=20,
		insn_addrs="[414, 416, 420, 422, 424, 426, 428, 430]"
	];
	414 -> { 13512, 434 };


	434 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000001b2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000001b2: add    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b2:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001b4: pop    {r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b4:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=434,
		block_size=4,
		insn_addrs="[434, 436]"
	];



	444 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000001bc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000001bc: push   {r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001be: mov    r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1be:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001c0: mov    r6,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001c2: mov    r7,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001c4: mov    r8,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001c6: bl     0x30cc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c6:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1ca, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[30cc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=444,
		block_size=14,
		insn_addrs="[444, 446, 448, 450, 452, 454]"
	];
	444 -> { 12492, 458 };


	458 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000001ca</b></td></tr>
			<tr><td align="left" balign="left">
			0x000001ca: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ca:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001cc: bl     0x43d0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cc:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1d0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[43d0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=458,
		block_size=6,
		insn_addrs="[458, 460]"
	];
	458 -> { 17360, 464 };


	464 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000001d0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000001d0: ldr.w  r9,[0x1ec]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d0:4]])<br/>
			&nbsp;&nbsp;COPY(out=r9, in=[ram[1ec:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001d4: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001d6: str.w  r3,[r9,r0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3180:4], in=[r9, r0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3180:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001da: mov    r2,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1da:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001dc: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001de: mov    r1,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1de:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001e0: blx    r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e0:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r5, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1e2, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=464,
		block_size=18,
		insn_addrs="[464, 468, 470, 474, 476, 478, 480]"
	];
	464 -> { 482 };


	482 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000001e2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000001e2: ldr.w  r0,[r4,r9]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e2:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98900:4], in=[r4, r9])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[98900:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001e6: bl     0x76c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e6:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1ea, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[76c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=482,
		block_size=8,
		insn_addrs="[482, 486]"
	];
	482 -> { 1900, 490 };


	490 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000001ea</b></td></tr>
			<tr><td align="left" balign="left">
			0x000001ea: nop    
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ea:2]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=490,
		block_size=2,
		insn_addrs="[490]"
	];
	490 -> { 492 };


	492 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000001ec</b></td></tr>
			<tr><td align="left" balign="left">
			0x000001ec: movs   r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ec:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001ee: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ee:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=492,
		block_size=4,
		insn_addrs="[492, 494]"
	];
	492 -> { 496 };


	496 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000001f0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000001f0: push   {r4,r5,r6,r7,r8,r9,r10,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f0:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r10])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r9])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001f4: ldrh   r5,[r0,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r0, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001f6: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001f8: lsls   r0,r5,#0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f8:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1c, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r5, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1c, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1c, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r5, 0x1c])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001fa: mov    r8,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1fa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000001fc: bmi    0x222
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1fc:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83d80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[222:4], unique[83d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=496,
		block_size=14,
		insn_addrs="[496, 500, 502, 504, 506, 508]"
	];
	496 -> { 546, 510 };


	510 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000001fe</b></td></tr>
			<tr><td align="left" balign="left">
			0x000001fe: cmp    r1,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1fe:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x2, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000200: and    r5,r5,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[200:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000204: bne.w  0x3a0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[204:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84b00:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3a0:4], unique[84b00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=510,
		block_size=10,
		insn_addrs="[510, 512, 516]"
	];
	510 -> { 928, 520 };


	520 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000208</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000208: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[208:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000020a: bl     0x3a72
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x20e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3a72:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=520,
		block_size=6,
		insn_addrs="[520, 522]"
	];
	520 -> { 14962, 526 };


	526 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000020e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000020e: cbz    r0,0x230
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[230:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=526,
		block_size=2,
		insn_addrs="[526]"
	];
	526 -> { 560, 528 };


	528 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000210</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000210: subs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[210:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000212: ldrh   r1,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[212:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000214: cmp    r0,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[214:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x4, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000216: bhi    0x23c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[216:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[23c:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=528,
		block_size=8,
		insn_addrs="[528, 530, 532, 534]"
	];
	528 -> { 572, 536 };


	536 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000218</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000218: tbb    [pc,r0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[218:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[c9980:4], in=[r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c9980:4], in=[0x21c, unique[c9980:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[c9b00:1], in=[0x600000f0c300, unique[c9980:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[c9980:4], in=[unique[c9b00:1]])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[c9f00:4], in=[unique[c9980:4], 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=pc, in=[0x21c, unique[c9f00:4]])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=536,
		block_size=4,
		insn_addrs="[536]"
	];



	546 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000222</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000222: cmp    r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[222:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000224: ite    eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[224:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000226: orr    r5,r5,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[226:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[22a:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_OR(out=r5, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000022a: orr    r5,r5,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[22e:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;INT_OR(out=r5, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000022e: strh   r5,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=546,
		block_size=14,
		insn_addrs="[546, 548, 550, 554, 558]"
	];
	546 -> { 560 };


	560 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000230</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000230: msr    basepri,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[230:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[234:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000234: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[234:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000238: pop.w  {r4,r5,r6,r7,r8,r9,r10,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[238:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r9, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r10, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=560,
		block_size=12,
		insn_addrs="[560, 564, 568]"
	];



	572 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000023c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000023c: and    r10,r1,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r10, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r10, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r10, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000240: cmp    r10,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[240:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r10])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r10, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r10, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000242: beq.w  0x390
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[242:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84a00:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[390:4], unique[84a00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=572,
		block_size=10,
		insn_addrs="[572, 576, 578]"
	];
	572 -> { 912, 582 };


	582 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000246</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000246: movs   r7,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[246:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000248: mov    r9,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[248:2]])<br/>
			&nbsp;&nbsp;COPY(out=r9, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000024a: mov    r6,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r7])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=582,
		block_size=6,
		insn_addrs="[582, 584, 586]"
	];
	582 -> { 588 };


	588 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000024c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000024c: ldr    r3,[r4,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000024e: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000250: beq.w  0x3cc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[250:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84a00:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3cc:4], unique[84a00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=588,
		block_size=8,
		insn_addrs="[588, 590, 592]"
	];
	588 -> { 972, 596 };


	596 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000254</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000254: orr    r1,r1,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[254:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000258: strh   r1,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[258:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000025a: msr    basepri,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[25e:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000025e: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000262: ldr    r1,[r4,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[262:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000264: cmp    r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[264:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000266: beq.w  0x3de
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[266:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84a00:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3de:4], unique[84a00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=596,
		block_size=22,
		insn_addrs="[596, 600, 602, 606, 610, 612, 614]"
	];
	596 -> { 990, 618 };


	618 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000026a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000026a: ldr    r5,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=618,
		block_size=2,
		insn_addrs="[618]"
	];
	618 -> { 620 };


	620 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000026c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000026c: cmp    r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000026e: beq.w  0x3de
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26e:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84a00:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3de:4], unique[84a00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=620,
		block_size=6,
		insn_addrs="[620, 622]"
	];
	620 -> { 990, 626 };


	626 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000272</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000272: ldr.w  r8,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[272:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000276: mov    r3,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[276:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000278: mov    r2,r10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[278:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r10])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000027a: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000027c: blx    r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27c:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r8, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r8, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x27e, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=626,
		block_size=12,
		insn_addrs="[626, 630, 632, 634, 636]"
	];
	626 -> { 638 };


	638 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000027e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000027e: cmp    r5,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000280: beq    0x370
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[280:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[370:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=638,
		block_size=4,
		insn_addrs="[638, 640]"
	];
	638 -> { 880, 642 };


	642 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000282</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000282: ldr    r3,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[282:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=642,
		block_size=2,
		insn_addrs="[642]"
	];
	642 -> { 644 };


	644 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000284</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000284: mov    r1,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[284:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000286: mov    r5,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[286:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000288: b      0x26c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[288:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[26c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=644,
		block_size=6,
		insn_addrs="[644, 646, 648]"
	];
	644 -> { 620 };


	650 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000028a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000028a: and    r3,r1,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000028e: subs   r2,r3,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x5, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=r2, in=[r3, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000290: cmp    r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[290:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000292: bhi    0x2cc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[292:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2cc:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=650,
		block_size=10,
		insn_addrs="[650, 654, 656, 658]"
	];
	650 -> { 716, 660 };


	660 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000294</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000294: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[294:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000296: bic    r1,r1,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[296:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r1, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000029a: cmp    r3,#0x6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x6, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x6])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000029c: ldr    r7,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000029e: uxth   r1, r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29e:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8800:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[d8800:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002a0: strd   r2,r2,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002a4: bne    0x2ba
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2ba:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=660,
		block_size=18,
		insn_addrs="[660, 662, 666, 668, 670, 672, 676]"
	];
	660 -> { 698, 678 };


	678 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000002a6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000002a6: mov    r3,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002a8: b      0x2b2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a8:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2b2:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=678,
		block_size=4,
		insn_addrs="[678, 680]"
	];
	678 -> { 690 };


	682 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000002aa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000002aa: ldrh   r2,[r4,#0x1a]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2aa:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x1a])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002ac: adds   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ac:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002ae: strh   r2,[r4,#0x1a]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ae:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x1a])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002b0: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=682,
		block_size=8,
		insn_addrs="[682, 684, 686, 688]"
	];
	682 -> { 690 };


	690 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000002b2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000002b2: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002b4: bne    0x2aa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2aa:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=690,
		block_size=4,
		insn_addrs="[690, 692]"
	];
	690 -> { 682, 694 };


	694 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000002b6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000002b6: orr    r1,r1,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=694,
		block_size=4,
		insn_addrs="[694]"
	];
	694 -> { 698 };


	698 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000002ba</b></td></tr>
			<tr><td align="left" balign="left">
			0x000002ba: strh   r1,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ba:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002bc: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002be: bl     0x3a72
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2be:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2c2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3a72:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=698,
		block_size=8,
		insn_addrs="[698, 700, 702]"
	];
	698 -> { 14962, 706 };


	706 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000002c2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000002c2: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002c4: beq    0x3bc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3bc:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=706,
		block_size=4,
		insn_addrs="[706, 708]"
	];
	706 -> { 956, 710 };


	710 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000002c6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000002c6: orr    r1,r1,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002ca: b      0x3ba
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ca:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3ba:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=710,
		block_size=6,
		insn_addrs="[710, 714]"
	];
	710 -> { 954 };


	716 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000002cc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000002cc: cmp    r3,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cc:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x4, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002ce: bne    0x2e6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ce:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2e6:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=716,
		block_size=4,
		insn_addrs="[716, 718]"
	];
	716 -> { 742, 720 };


	720 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000002d0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000002d0: bic    r1,r1,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r1, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002d4: uxth   r1, r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d4:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8800:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[d8800:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002d6: strh   r1,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002d8: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002da: bl     0x3a72
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2da:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2de, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3a72:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=720,
		block_size=14,
		insn_addrs="[720, 724, 726, 728, 730]"
	];
	720 -> { 14962, 734 };


	734 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000002de</b></td></tr>
			<tr><td align="left" balign="left">
			0x000002de: cbz    r0,0x2e6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2de:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2e6:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=734,
		block_size=2,
		insn_addrs="[734]"
	];
	734 -> { 742, 736 };


	736 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000002e0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000002e0: orr    r1,r1,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002e4: strh   r1,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=736,
		block_size=6,
		insn_addrs="[736, 740]"
	];
	736 -> { 742 };


	742 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000002e6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000002e6: ldrh   r1,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002e8: and    r10,r1,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r10, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r10, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r10, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002ec: cmp    r10,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ec:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r10])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r10, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r10, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002ee: beq    0x390
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ee:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[390:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=742,
		block_size=10,
		insn_addrs="[742, 744, 748, 750]"
	];
	742 -> { 912, 752 };


	752 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000002f0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000002f0: movs   r7,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002f2: mov    r9,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r9, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000002f4: b      0x24c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f4:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[24c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=752,
		block_size=6,
		insn_addrs="[752, 754, 756]"
	];
	752 -> { 588 };


	778 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000030a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000030a: cmp.w  r9,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r9])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r9, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r9, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000030e: beq    0x390
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[390:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=778,
		block_size=6,
		insn_addrs="[778, 782]"
	];
	778 -> { 912, 784 };


	784 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000310</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000310: orr    r1,r1,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[310:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000314: strh   r1,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[314:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000316: msr    basepri,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[316:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[31a:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000031a: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=784,
		block_size=14,
		insn_addrs="[784, 788, 790, 794]"
	];
	784 -> { 798 };


	798 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000031e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000031e: ldr    r1,[0x408]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[408:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000320: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[320:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000322: blx    r9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[322:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r9, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r9, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x324, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=798,
		block_size=6,
		insn_addrs="[798, 800, 802]"
	];
	798 -> { 804 };


	804 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000324</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000324: b      0x37a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[324:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[37a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=804,
		block_size=2,
		insn_addrs="[804]"
	];
	804 -> { 890 };


	880 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000370</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000370: mov    r3,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[370:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000372: b      0x284
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[372:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[284:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=880,
		block_size=4,
		insn_addrs="[880, 882]"
	];
	880 -> { 644 };


	884 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000374</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000374: cmp.w  r9,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[374:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r9])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r9, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r9, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000378: bne    0x31e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[378:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[31e:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=884,
		block_size=6,
		insn_addrs="[884, 888]"
	];
	884 -> { 798, 890 };


	890 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000037a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000037a: mrs    r8,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37a:4]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[37e:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r8, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000037e: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000380: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[380:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[384:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[384:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[384:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000384: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[384:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000388: ldrh   r3,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[388:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000038a: bic    r3,r3,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000038e: strh   r3,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=890,
		block_size=22,
		insn_addrs="[890, 894, 896, 900, 904, 906, 910]"
	];
	890 -> { 912 };


	912 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000390</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000390: ldrh   r5,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[390:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000392: lsls   r2,r5,#0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[392:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1b, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r5, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r5, 0x1b])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000394: bpl    0x3f4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[394:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3f4:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=912,
		block_size=6,
		insn_addrs="[912, 914, 916]"
	];
	912 -> { 1012, 918 };


	918 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000396</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000396: bic    r3,r5,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[396:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r5, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000039a: strh   r3,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000039c: and    r5,r5,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=918,
		block_size=10,
		insn_addrs="[918, 922, 924]"
	];
	918 -> { 928 };


	928 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000003a0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000003a0: ldr    r6,[r4,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003a2: ldrh   r1,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003a4: cmp    r6,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003a6: bge.w  0x28a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a6:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[85500:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[28a:4], unique[85500:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=928,
		block_size=10,
		insn_addrs="[928, 930, 932, 934]"
	];
	928 -> { 650, 938 };


	938 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000003aa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000003aa: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3aa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003ac: ldr    r7,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ac:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003ae: strd   r3,r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ae:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003b2: bic    r1,r1,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r1, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003b6: orr    r1,r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=938,
		block_size=16,
		insn_addrs="[938, 940, 942, 946, 950]"
	];
	938 -> { 954 };


	954 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000003ba</b></td></tr>
			<tr><td align="left" balign="left">
			0x000003ba: strh   r1,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ba:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=954,
		block_size=2,
		insn_addrs="[954]"
	];
	954 -> { 956 };


	956 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000003bc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000003bc: ldrh   r1,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003be: and    r10,r1,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3be:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r10, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r10, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r10, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003c2: cmp    r10,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r10])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r10, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r10, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003c4: mov.w  r9,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r9, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r9, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r9, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003c8: bne.w  0x24c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c8:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84b00:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[24c:4], unique[84b00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=956,
		block_size=16,
		insn_addrs="[956, 958, 962, 964, 968]"
	];
	956 -> { 588, 972 };


	972 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000003cc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000003cc: cmp    r7,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cc:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003ce: beq    0x30a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ce:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[30a:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=972,
		block_size=4,
		insn_addrs="[972, 974]"
	];
	972 -> { 778, 976 };


	976 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000003d0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000003d0: orr    r1,r1,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003d4: strh   r1,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003d6: msr    basepri,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d6:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3da:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003da: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3da:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=976,
		block_size=14,
		insn_addrs="[976, 980, 982, 986]"
	];
	976 -> { 990 };


	990 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000003de</b></td></tr>
			<tr><td align="left" balign="left">
			0x000003de: cmp    r7,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3de:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003e0: beq    0x374
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[374:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=990,
		block_size=4,
		insn_addrs="[990, 992]"
	];
	990 -> { 884, 994 };


	994 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000003e2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000003e2: ldr    r5,[r7,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003e4: mov    r1,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003e6: mov    r3,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003e8: mov    r2,r10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r10])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003ea: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ea:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003ec: bl     0x3aca
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ec:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3f0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3aca:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=994,
		block_size=14,
		insn_addrs="[994, 996, 998, 1000, 1002, 1004]"
	];
	994 -> { 15050, 1008 };


	1008 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000003f0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000003f0: mov    r7,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003f2: b      0x3de
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f2:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3de:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1008,
		block_size=4,
		insn_addrs="[1008, 1010]"
	];
	1008 -> { 990 };


	1012 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000003f4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000003f4: lsls   r3,r5,#0x1a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f4:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1a, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r5, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1a, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1a, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r5, 0x1a])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003f6: bpl.w  0x230
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f6:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84f00:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[230:4], unique[84f00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1012,
		block_size=6,
		insn_addrs="[1012, 1014]"
	];
	1012 -> { 560, 1018 };


	1018 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000003fa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000003fa: bic    r3,r5,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fa:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r5, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000003fe: strh   r3,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fe:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1018,
		block_size=6,
		insn_addrs="[1018, 1022]"
	];
	1018 -> { 1024 };


	1024 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000400</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000400: and    r5,r5,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[400:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000404: b      0x208
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[404:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[208:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1024,
		block_size=6,
		insn_addrs="[1024, 1028]"
	];
	1024 -> { 520 };


	1036 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000040c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000040c: ldr    r3,[0x414]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[414:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000040e: str    r3,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000410: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[410:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000412: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[412:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1036,
		block_size=8,
		insn_addrs="[1036, 1038, 1040, 1042]"
	];



	1048 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000418</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000418: wfi    
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[418:2]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x30])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000041a: b.w    0x418
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41a:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[418:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1048,
		block_size=6,
		insn_addrs="[1048, 1050]"
	];
	1048 -> { 1048 };


	1056 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000420</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000420: push   {r4,r5,r6,r7,r8,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[420:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000424: ldr    r6,[0x454]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[424:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[ram[454:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000426: ldr.w  r8,[0x458]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[426:4]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[ram[458:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000042a: add.w  r7,r6,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42a:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[r8])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r6, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r6, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r7, in=[r6, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000042e: subs   r4,r1,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r7, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=r4, in=[r1, r7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000430: mov    r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[430:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000432: mov    r2,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[432:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000434: ldr    r1,[0x45c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[434:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[45c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000436: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[436:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000438: bl     0x43a4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[438:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x43c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[43a4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1056,
		block_size=28,
		insn_addrs="[1056, 1060, 1062, 1066, 1070, 1072, 1074, 1076, 1078, 1080]"
	];
	1056 -> { 17316, 1084 };


	1084 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000043c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000043c: adds   r0,r4,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43c:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, r6])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, r6])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r4, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000043e: mov    r2,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000440: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[440:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000442: subs   r4,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[442:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x8, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, 0x8])<br/>
			&nbsp;&nbsp;INT_SUB(out=r4, in=[r4, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000444: bl     0x43c0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[444:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x448, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[43c0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1084,
		block_size=12,
		insn_addrs="[1084, 1086, 1088, 1090, 1092]"
	];
	1084 -> { 17344, 1096 };


	1096 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000448</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000448: str    r4,[r5,#0x70]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[448:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x70])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000044a: add.w  r0,r7,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[44a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r7, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r7, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r7, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000044e: pop.w  {r4,r5,r6,r7,r8,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[44e:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1096,
		block_size=10,
		insn_addrs="[1096, 1098, 1102]"
	];



	1120 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000460</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000460: ldr    r2,[0x480]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[460:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000462: ldr    r3,[r2,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[462:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000464: ldrsb.w r1,[r3,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[464:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0xe])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9ad00:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r1, in=[unique[9ad00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000468: cmp    r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[468:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000046a: blt    0x47c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[46a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[47c:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1120,
		block_size=12,
		insn_addrs="[1120, 1122, 1124, 1128, 1130]"
	];
	1120 -> { 1148, 1132 };


	1132 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000046c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000046c: ldr    r2,[r2,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[46c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000046e: cmp    r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[46e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000470: itttt  ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[470:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000472: ldr    r2,[0x484]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[472:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[474:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[484:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000474: ldr    r3,[r2,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[474:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[476:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000476: orr    r3,r3,#0x10000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[476:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x10000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[47a:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000047a: str    r3,[r2,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[47a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x4])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[47c:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1132,
		block_size=16,
		insn_addrs="[1132, 1134, 1136, 1138, 1140, 1142, 1146]"
	];
	1132 -> { 1148 };


	1148 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000047c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000047c: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[47c:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1148,
		block_size=2,
		insn_addrs="[1148]"
	];



	1160 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000488</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000488: push   {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[488:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000048a: ldr    r3,[0x524]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[48a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[524:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000048c: mov    r5,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[48c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000048e: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[48e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000490: tst    r2,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[490:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000494: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[494:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000496: ite    ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[496:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000498: movs   r4,#0x11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[498:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[49a:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x11])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000049a: movs   r4,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[49a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[49c:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000049c: tst    r2,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[49c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004a0: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4a0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004a2: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4a2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004a4: movs   r4,#0x12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4a4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4a6:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x12])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004a6: lsls   r2,r2,#0x1e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4a6:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1e, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, 0x1e])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004a8: mov    r6,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4a8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004aa: bpl    0x4c2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4aa:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4c2:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1160,
		block_size=36,
		insn_addrs="[1160, 1162, 1164, 1166, 1168, 1172, 1174, 1176, 1178, 1180, 1184, 1186, 1188, 1190, 1192, 1194]"
	];
	1160 -> { 1218, 1196 };


	1196 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000004ac</b></td></tr>
			<tr><td align="left" balign="left">
			0x000004ac: ldr    r0,[r3,#0x34]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4ac:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x34])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004ae: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4ae:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004b0: lsls   r4,r2,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4b0:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x18, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x18, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x18, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r4, in=[r2, 0x18])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004b2: bpl    0x51e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4b2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[51e:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1196,
		block_size=8,
		insn_addrs="[1196, 1198, 1200, 1202]"
	];
	1196 -> { 1310, 1204 };


	1204 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000004b4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000004b4: cbz    r1,0x4be
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4b4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4be:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1204,
		block_size=2,
		insn_addrs="[1204]"
	];
	1204 -> { 1214, 1206 };


	1206 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000004b6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000004b6: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4b6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004b8: bic    r2,r2,#0x80
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4b8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x80])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004bc: str    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4bc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1206,
		block_size=8,
		insn_addrs="[1206, 1208, 1212]"
	];
	1206 -> { 1214 };


	1214 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000004be</b></td></tr>
			<tr><td align="left" balign="left">
			0x000004be: movs   r4,#0x13
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4be:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x13])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004c0: b      0x4c6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4c0:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[4c6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1214,
		block_size=4,
		insn_addrs="[1214, 1216]"
	];
	1214 -> { 1222 };


	1218 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000004c2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000004c2: mvn    r0,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4c2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x15])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1218,
		block_size=4,
		insn_addrs="[1218]"
	];
	1218 -> { 1222 };


	1222 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000004c6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000004c6: ldr    r3,[0x524]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4c6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[524:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004c8: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4c8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004ca: tst    r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4ca:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004ce: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4ce:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004d0: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4d0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004d2: movs   r4,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4d2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4d4:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x14])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004d4: tst    r2,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4d4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004d8: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4d8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004da: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4da:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004dc: movs   r4,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4dc:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4de:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x15])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004de: lsls   r2,r2,#0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4de:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1b, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, 0x1b])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004e0: bmi    0x4e8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4e0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83d80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4e8:4], unique[83d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1222,
		block_size=28,
		insn_addrs="[1222, 1224, 1226, 1230, 1232, 1234, 1236, 1240, 1242, 1244, 1246, 1248]"
	];
	1222 -> { 1256, 1250 };


	1250 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000004e2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000004e2: ldr    r3,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4e2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004e4: lsls   r3,r3,#0x1e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4e4:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1e, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x1e])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004e6: bpl    0x4fe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4e6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4fe:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1250,
		block_size=6,
		insn_addrs="[1250, 1252, 1254]"
	];
	1250 -> { 1278, 1256 };


	1256 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000004e8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000004e8: ldr    r3,[0x524]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4e8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[524:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004ea: ldr    r3,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4ea:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004ec: lsls   r1,r3,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4ec:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x14, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x14, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x14, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r3, 0x14])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004ee: bpl    0x4fe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4ee:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4fe:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1256,
		block_size=8,
		insn_addrs="[1256, 1258, 1260, 1262]"
	];
	1256 -> { 1278, 1264 };


	1264 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000004f0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000004f0: mov    r1,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4f0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004f2: bl     0x94c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4f2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x4f6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[94c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1264,
		block_size=6,
		insn_addrs="[1264, 1266]"
	];
	1264 -> { 2380, 1270 };


	1270 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000004f6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000004f6: cbz    r0,0x4fe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4f6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4fe:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1270,
		block_size=2,
		insn_addrs="[1270]"
	];
	1270 -> { 1278, 1272 };


	1272 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000004f8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000004f8: msr    psp,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4f8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9fe00:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9fe80:1], in=[unique[9fe00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4fc:4], unique[9fe80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x136, r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000004fc: movs   r4,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4fc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1272,
		block_size=6,
		insn_addrs="[1272, 1276]"
	];
	1272 -> { 1278 };


	1278 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000004fe</b></td></tr>
			<tr><td align="left" balign="left">
			0x000004fe: ldr    r3,[0x524]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4fe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[524:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000500: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[500:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000502: lsls   r2,r2,#0x1a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[502:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1a, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1a, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1a, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, 0x1a])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000504: ittt   mi
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[504:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85e80:1], in=[NG, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000506: ldr    r2,[r3,#0x24]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[506:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[508:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x24])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000508: bic    r2,r2,#0x2000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[508:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[50c:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x2000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000050c: str    r2,[r3,#0x24]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[50c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x24])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[50e:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000050e: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[50e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000510: orr    r2,r2,#0xff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[510:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r2, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000514: str    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[514:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000516: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[516:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000518: strb   r3,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[518:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000051a: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[51a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000051c: pop    {r4,r5,r6,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[51c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1278,
		block_size=32,
		insn_addrs="[1278, 1280, 1282, 1284, 1286, 1288, 1292, 1294, 1296, 1300, 1302, 1304, 1306, 1308]"
	];



	1310 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000051e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000051e: mvn    r0,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[51e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x15])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000522: b      0x4be
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[522:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[4be:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1310,
		block_size=6,
		insn_addrs="[1310, 1314]"
	];
	1310 -> { 1214 };


	1320 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000528</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000528: ldr    r3,[0x578]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[528:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[578:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000052a: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[52a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000052c: tst    r2,#0x2000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[52c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x2000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r2, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000530: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[530:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000532: ite    ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[532:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000534: movs   r0,#0x1e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[534:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[536:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1e])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000536: movs   r0,#0x1d
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[536:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[538:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1d])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000538: tst    r2,#0x1000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[538:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x1000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r2, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000053c: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[53c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000053e: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[53e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000540: movs   r0,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[540:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[542:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000542: tst    r2,#0x80000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[542:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x80000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000546: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[546:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000548: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[548:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000054a: movs   r0,#0x21
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[54a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[54c:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x21])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000054c: tst    r2,#0x40000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[54c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x40000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000550: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[550:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000552: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[552:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000554: movs   r0,#0x22
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[554:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[556:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x22])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000556: tst    r2,#0x20000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[556:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x20000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000055a: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[55a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000055c: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[55c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000055e: movs   r0,#0x23
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[55e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[560:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x23])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000560: tst    r2,#0x10000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[560:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x10000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000564: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[564:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000566: mvn.w  r2,r2, lsl #0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[566:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x10])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r2, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r2, 0x10])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r2, in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000056a: mvn.w  r2,r2, lsr #0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[56a:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[88480:4], in=[0x10, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88500:4], in=[r2, unique[88480:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88600:4], in=[unique[88500:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88600:4], 0x0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88780:4], in=[r2, 0x10])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r2, in=[unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000056e: str    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[56e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000570: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[570:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000572: movs   r0,#0x24
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[572:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[574:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x24])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000574: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[574:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1320,
		block_size=78,
		insn_addrs="[1320, 1322, 1324, 1328, 1330, 1332, 1334, 1336, 1340, 1342, 1344, 1346, 1350, 1352, 1354, 1356, 1360, 1362, 1364, 1366, 1370, 1372, 1374, 1376, 1380, 1382, 1386, 1390, 1392, 1394, 1396]"
	];



	1404 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000057c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000057c: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[57c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000057e: ldr    r3,[0x5e4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[57e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[5e4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000580: mov    r2,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[580:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000582: ldr    r0,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[582:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000584: ldr    r4,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[584:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000586: tst    r0,#0x1000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[586:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x1000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000058a: ite    ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[58a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000058c: movs   r0,#0x17
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[58c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[58e:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x17])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000058e: movs   r0,#0x16
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[58e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[590:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x16])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000590: tst    r4,#0x800
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[590:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x800])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000594: ldr    r4,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[594:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000596: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[596:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000598: movs   r0,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[598:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[59a:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x18])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000059a: lsls   r4,r4,#0x16
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[59a:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x16, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r4, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x16, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x16, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r4, in=[r4, 0x16])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000059c: bpl    0x5b2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[59c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[5b2:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1404,
		block_size=34,
		insn_addrs="[1404, 1406, 1408, 1410, 1412, 1414, 1418, 1420, 1422, 1424, 1428, 1430, 1432, 1434, 1436]"
	];
	1404 -> { 1458, 1438 };


	1438 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000059e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000059e: ldr    r0,[r3,#0x38]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[59e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x38])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005a0: ldr    r0,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5a0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005a2: lsls   r0,r0,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5a2:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x10, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r0, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x10, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x10, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r0, 0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005a4: bpl    0x5b0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5a4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[5b0:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1438,
		block_size=8,
		insn_addrs="[1438, 1440, 1442, 1444]"
	];
	1438 -> { 1456, 1446 };


	1446 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000005a6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000005a6: cbz    r2,0x5b0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5a6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[5b0:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1446,
		block_size=2,
		insn_addrs="[1446]"
	];
	1446 -> { 1456, 1448 };


	1448 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000005a8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000005a8: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5a8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005aa: bic    r2,r2,#0x8000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5aa:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x8000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005ae: str    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5ae:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1448,
		block_size=8,
		insn_addrs="[1448, 1450, 1454]"
	];
	1448 -> { 1456 };


	1456 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000005b0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000005b0: movs   r0,#0x19
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5b0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x19])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1456,
		block_size=2,
		insn_addrs="[1456]"
	];
	1456 -> { 1458 };


	1458 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000005b2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000005b2: ldr    r3,[0x5e4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5b2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[5e4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005b4: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5b4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005b6: tst    r2,#0x400
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5b6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x400])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005ba: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5ba:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005bc: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5bc:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005be: movs   r0,#0x1a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5be:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[5c0:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1a])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005c0: lsls   r2,r2,#0x17
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5c0:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x17, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x17, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x17, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, 0x17])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005c2: bmi    0x5de
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5c2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83d80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[5de:4], unique[83d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1458,
		block_size=18,
		insn_addrs="[1458, 1460, 1462, 1466, 1468, 1470, 1472, 1474]"
	];
	1458 -> { 1502, 1476 };


	1476 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000005c4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000005c4: ldr    r3,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5c4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005c6: tst    r3,#0x2000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5c6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x2000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005ca: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5ca:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005cc: movs   r0,#0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5cc:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[5ce:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1c])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1476,
		block_size=10,
		insn_addrs="[1476, 1478, 1482, 1484]"
	];
	1476 -> { 1486 };


	1486 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000005ce</b></td></tr>
			<tr><td align="left" balign="left">
			0x000005ce: ldr    r2,[0x5e4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5ce:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[5e4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005d0: ldr    r3,[r2,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5d0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005d2: orr    r3,r3,#0xff00
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5d2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0xff00])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005d6: str    r3,[r2,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5d6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x28])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005d8: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5d8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005da: strb   r3,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5da:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005dc: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5dc:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1486,
		block_size=16,
		insn_addrs="[1486, 1488, 1490, 1494, 1496, 1498, 1500]"
	];



	1502 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000005de</b></td></tr>
			<tr><td align="left" balign="left">
			0x000005de: movs   r0,#0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5de:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1b])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005e0: b      0x5ce
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5e0:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[5ce:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1502,
		block_size=4,
		insn_addrs="[1502, 1504]"
	];
	1502 -> { 1486 };


	1512 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000005e8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000005e8: push   {r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5e8:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005ea: ldr    r3,[0x70c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5ea:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[70c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005ec: ldr    r3,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5ec:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005ee: sub    sp,#0x2c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5ee:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x2c])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005f0: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5f0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005f2: ubfx   r3,r3,#0x0,#0x9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5f2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005f6: movs   r5,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5f6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005f8: msr    basepri,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5f8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[5fc:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000005fc: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[5fc:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000600: and    r0,r2,#0xff000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[600:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0xff000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r2, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000604: cmp.w  r0,#0xff000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[604:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0xff000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87900:4], r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000608: bne    0x62e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[608:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[62e:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1512,
		block_size=34,
		insn_addrs="[1512, 1514, 1516, 1518, 1520, 1522, 1526, 1528, 1532, 1536, 1540, 1544]"
	];
	1512 -> { 1582, 1546 };


	1546 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000060a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000060a: and    r0,r2,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[60a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xc])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000060e: cmp    r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[60e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x8, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000610: beq    0x62e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[610:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[62e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1546,
		block_size=8,
		insn_addrs="[1546, 1550, 1552]"
	];
	1546 -> { 1582, 1554 };


	1554 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000612</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000612: lsls   r0,r2,#0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[612:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1c, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1c, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1c, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r2, 0x1c])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000614: ite    mi
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[614:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85e80:1], in=[NG, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000616: mov    r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[616:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[618:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000618: movs   r5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[618:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[780:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[780:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[61a:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1554,
		block_size=8,
		insn_addrs="[1554, 1556, 1558, 1560]"
	];
	1554 -> { 1562 };


	1562 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000061a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000061a: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[61a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000061c: subs   r3,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[61c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x3, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r3, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000061e: strb.w r2,[sp,#0x7]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[61e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x7])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000622: cmp    r3,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[622:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x3, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000624: bhi    0x632
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[624:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[632:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1562,
		block_size=12,
		insn_addrs="[1562, 1564, 1566, 1570, 1572]"
	];
	1562 -> { 1586, 1574 };


	1574 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000626</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000626: tbb    [pc,r3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[626:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[c9980:4], in=[r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c9980:4], in=[0x62a, unique[c9980:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[c9b00:1], in=[0x600000f0c300, unique[c9980:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[c9980:4], in=[unique[c9b00:1]])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[c9f00:4], in=[unique[c9980:4], 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=pc, in=[0x62a, unique[c9f00:4]])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1574,
		block_size=4,
		insn_addrs="[1574]"
	];
	1574 -> { 1650, 1776, 1784, 1770, 1586 };


	1582 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000062e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000062e: mov    r4,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[62e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000630: b      0x61a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[630:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[61a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1582,
		block_size=4,
		insn_addrs="[1582, 1584]"
	];
	1582 -> { 1562 };


	1586 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000632</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000632: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[632:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1586,
		block_size=2,
		insn_addrs="[1586]"
	];
	1586 -> { 1588 };


	1588 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000634</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000634: ldrb.w r2,[sp,#0x7]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[634:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x7])<br/>
			&nbsp;&nbsp;LOAD(out=unique[98e80:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[98e80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000638: cbnz   r2,0x66e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[638:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[66e:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1588,
		block_size=6,
		insn_addrs="[1588, 1592]"
	];
	1588 -> { 1646, 1594 };


	1594 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000063a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000063a: add    r6,sp,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[63a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000063c: add.w  r7,r4,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[63c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r7, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1594,
		block_size=6,
		insn_addrs="[1594, 1596]"
	];
	1594 -> { 1600 };


	1600 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000640</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000640: ldr    r0,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[640:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000642: ldr    r1,[r4,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[642:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000644: mov    r2,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[644:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000646: stmia  r2!,{r0,r1}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[646:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[r2])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000648: adds   r4,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[648:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x8])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000064a: cmp    r4,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[64a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r7, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000064c: mov    r6,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[64c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000064e: bne    0x640
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[64e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[640:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1600,
		block_size=16,
		insn_addrs="[1600, 1602, 1604, 1606, 1608, 1610, 1612, 1614]"
	];
	1600 -> { 1600, 1616 };


	1616 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000650</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000650: ldr    r2,[sp,#0x24]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[650:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x24])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000652: cmp    r5,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[652:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000654: beq    0x700
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[654:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[700:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1616,
		block_size=6,
		insn_addrs="[1616, 1618, 1620]"
	];
	1616 -> { 1792, 1622 };


	1622 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000656</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000656: ubfx   r1,r2,#0x0,#0x9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[656:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r2, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r1, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000065a: cbnz   r1,0x666
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[65a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[666:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1622,
		block_size=6,
		insn_addrs="[1622, 1626]"
	];
	1622 -> { 1638, 1628 };


	1628 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000065c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000065c: mvn.w  r2,r2, lsr #0x9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[65c:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[88480:4], in=[0x9, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88500:4], in=[r2, unique[88480:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88600:4], in=[unique[88500:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88600:4], 0x0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88780:4], in=[r2, 0x9])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r2, in=[unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000660: mvn.w  r2,r2, lsl #0x9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[660:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x9])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r2, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r2, 0x9])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r2, in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1628,
		block_size=8,
		insn_addrs="[1628, 1632]"
	];
	1628 -> { 1636 };


	1636 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000664</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000664: str    r2,[sp,#0x24]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[664:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x24])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r2])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1636,
		block_size=2,
		insn_addrs="[1636]"
	];
	1636 -> { 1638 };


	1638 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000666</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000666: add    r1,sp,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[666:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000668: mov    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[668:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000066a: bl     0x3c22
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[66a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x66e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3c22:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1638,
		block_size=8,
		insn_addrs="[1638, 1640, 1642]"
	];
	1638 -> { 15394, 1646 };


	1646 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000066e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000066e: add    sp,#0x2c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[66e:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x2c])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000670: pop    {r4,r5,r6,r7,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[670:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1646,
		block_size=4,
		insn_addrs="[1646, 1648]"
	];



	1650 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000672</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000672: ldr    r3,[0x70c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[672:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[70c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000674: ldr    r2,[r3,#0x2c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[674:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x2c])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000676: lsls   r1,r2,#0x1e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[676:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1e, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r2, 0x1e])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000678: bmi    0x632
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[678:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83d80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[632:4], unique[83d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1650,
		block_size=8,
		insn_addrs="[1650, 1652, 1654, 1656]"
	];
	1650 -> { 1586, 1658 };


	1658 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000067a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000067a: ldr    r2,[r3,#0x2c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[67a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x2c])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000067c: cmp    r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[67c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000067e: blt    0x632
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[67e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[632:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1658,
		block_size=6,
		insn_addrs="[1658, 1660, 1662]"
	];
	1658 -> { 1586, 1664 };


	1664 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000680</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000680: ldr    r2,[r3,#0x2c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[680:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x2c])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000682: lsls   r2,r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[682:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000684: bpl    0x632
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[684:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[632:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1664,
		block_size=6,
		insn_addrs="[1664, 1666, 1668]"
	];
	1664 -> { 1586, 1670 };


	1670 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000686</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000686: ldr    r2,[r3,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[686:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000688: ldr    r1,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[688:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000068a: orr    r2,r2,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[68a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r2, in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000068e: str    r2,[r3,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[68e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000690: dsb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[690:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2d, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000694: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[694:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000698: ldr    r2,[r3,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[698:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000069a: ldrh.w r1,[r1,#-0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[69a:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r1, 0x2])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a100:2], in=[0x600000f0c300, unique[91d00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[9a100:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000069e: bic    r2,r2,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[69e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006a2: str    r2,[r3,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6a2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006a4: dsb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6a4:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2d, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006a8: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6a8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006ac: movw   r2,#0xdf02
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6ac:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[0xdf02])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006b0: cmp    r1,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6b0:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r1, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006b2: beq    0x6ca
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6b2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[6ca:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1670,
		block_size=46,
		insn_addrs="[1670, 1672, 1674, 1678, 1680, 1684, 1688, 1690, 1694, 1698, 1700, 1704, 1708, 1712, 1714]"
	];
	1670 -> { 1738, 1716 };


	1716 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006b4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006b4: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6b4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006b6: uxtb   r2, r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6b6:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006b8: cbz    r2,0x6ce
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6b8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[6ce:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1716,
		block_size=6,
		insn_addrs="[1716, 1718, 1720]"
	];
	1716 -> { 1742, 1722 };


	1722 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006ba</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006ba: add.w  r2,sp,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6ba:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006be: movs   r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6be:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1722,
		block_size=6,
		insn_addrs="[1722, 1726]"
	];
	1722 -> { 1728 };


	1728 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006c0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006c0: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6c0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006c2: bl     0x488
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6c2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x6c6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[488:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1728,
		block_size=6,
		insn_addrs="[1728, 1730]"
	];
	1728 -> { 1160, 1734 };


	1734 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006c6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006c6: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6c6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006c8: b      0x634
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6c8:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[634:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1734,
		block_size=4,
		insn_addrs="[1734, 1736]"
	];
	1734 -> { 1588 };


	1738 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006ca</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006ca: ldr    r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6ca:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006cc: b      0x634
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6cc:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[634:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1738,
		block_size=4,
		insn_addrs="[1738, 1740]"
	];
	1738 -> { 1588 };


	1742 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006ce</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006ce: ldr    r2,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6ce:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006d0: tst    r2,#0xff00
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6d0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0xff00])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006d4: beq    0x6e2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6d4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[6e2:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1742,
		block_size=8,
		insn_addrs="[1742, 1744, 1748]"
	];
	1742 -> { 1762, 1750 };


	1750 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006d6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006d6: add.w  r1,sp,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6d6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006da: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6da:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1750,
		block_size=6,
		insn_addrs="[1750, 1754]"
	];
	1750 -> { 1756 };


	1756 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006dc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006dc: bl     0x57c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6dc:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x6e0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[57c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1756,
		block_size=4,
		insn_addrs="[1756]"
	];
	1756 -> { 1404, 1760 };


	1760 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006e0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006e0: b      0x6c6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6e0:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[6c6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1760,
		block_size=2,
		insn_addrs="[1760]"
	];
	1760 -> { 1734 };


	1762 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006e2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006e2: ldr    r3,[r3,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6e2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006e4: cmp.w  r3,#0x10000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6e4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x10000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006e8: bcc    0x632
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6e8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83c80:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[632:4], unique[83c80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1762,
		block_size=8,
		insn_addrs="[1762, 1764, 1768]"
	];
	1762 -> { 1586, 1770 };


	1770 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006ea</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006ea: bl     0x528
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6ea:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x6ee, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[528:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1770,
		block_size=4,
		insn_addrs="[1770]"
	];
	1770 -> { 1320, 1774 };


	1774 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006ee</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006ee: b      0x6c6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6ee:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[6c6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1774,
		block_size=2,
		insn_addrs="[1774]"
	];
	1774 -> { 1734 };


	1776 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006f0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006f0: add.w  r2,sp,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6f0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006f4: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6f4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006f6: b      0x6c0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6f6:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[6c0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1776,
		block_size=8,
		insn_addrs="[1776, 1780, 1782]"
	];
	1776 -> { 1728 };


	1784 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000006f8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000006f8: add.w  r1,sp,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6f8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006fc: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6fc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000006fe: b      0x6dc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[6fe:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[6dc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1784,
		block_size=8,
		insn_addrs="[1784, 1788, 1790]"
	];
	1784 -> { 1756 };


	1792 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000700</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000700: bic    r2,r2,#0x1fe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[700:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x1fe])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000704: bic    r2,r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[704:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000708: b      0x664
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[708:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[664:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1792,
		block_size=10,
		insn_addrs="[1792, 1796, 1800]"
	];
	1792 -> { 1636 };


	1808 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000710</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000710: ldr    r3,[0x724]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[710:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[724:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000712: ldr    r2,[r3,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[712:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000714: orr    r2,r2,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[714:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r2, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000718: str    r2,[r3,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[718:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000071a: ldr    r2,[r3,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[71a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000071c: bic    r2,r2,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[71c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000720: str    r2,[r3,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[720:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000722: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[722:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1808,
		block_size=20,
		insn_addrs="[1808, 1810, 1812, 1816, 1818, 1820, 1824, 1826]"
	];



	1832 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000728</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000728: mrs    r0,msp
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[728:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r0, in=[0x12f])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000072c: mrs    r1,psp
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[72c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r1, in=[0x130])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000730: push   {r0,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[730:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000732: mov    r2,lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[732:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[lr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000734: bl     0x5e8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[734:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x738, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[5e8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1832,
		block_size=16,
		insn_addrs="[1832, 1836, 1840, 1842, 1844]"
	];
	1832 -> { 1512, 1848 };


	1848 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000738</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000738: pop    {r0,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[738:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1848,
		block_size=2,
		insn_addrs="[1848]"
	];



	1852 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000073c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000073c: bl     0x1ba4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[73c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x740, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1ba4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1852,
		block_size=4,
		insn_addrs="[1852]"
	];
	1852 -> { 7076, 1856 };


	1856 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000740</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000740: movs   r0,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[740:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000742: msr    basepri,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[742:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[746:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000746: ldr    r0,[0x768]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[746:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[768:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000748: mov.w  r1,#0x840
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[748:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x840])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000074c: adds   r0,r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[74c:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000074e: msr    psp,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[74e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9fe00:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9fe80:1], in=[unique[9fe00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[752:4], unique[9fe80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x136, r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000752: mrs    r0,control
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[752:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f600:1], in=[0x133])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9f700:1], in=[unique[9f600:1], 0x1])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f780:1], in=[0x134])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9f880:1], in=[unique[9f780:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9f900:1], in=[unique[9f880:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[9f980:1], in=[unique[9f900:1], unique[9f700:1]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[9f980:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000756: movs   r1,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[756:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000758: orrs   r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[758:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000075a: msr    control,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[75a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0a80:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0b00:1], in=[unique[a0a80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[75e:4], unique[a0b00:1]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[a0b80:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0c80:1], in=[unique[a0b80:4], 0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x27, unique[a0c80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0a80:1], in=[0x28])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0d80:1], in=[unique[a0a80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[75e:4], unique[a0d80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0e00:1], in=[0x134])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0f00:1], in=[unique[a0e00:1], 0x1])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x138, unique[a0f00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000075e: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[75e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000762: bl     0x8cc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[762:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x766, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[8cc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1856,
		block_size=38,
		insn_addrs="[1856, 1858, 1862, 1864, 1868, 1870, 1874, 1878, 1880, 1882, 1886, 1890]"
	];
	1856 -> { 2252, 1894 };


	1894 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000766</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000766: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[766:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1894,
		block_size=2,
		insn_addrs="[1894]"
	];
	1894 -> { 1896 };


	1896 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000768</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000768: lsrs   r0,r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[768:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r0, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r0, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000076a: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[76a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1896,
		block_size=4,
		insn_addrs="[1896, 1898]"
	];
	1896 -> { 1900 };


	1900 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000076c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000076c: ldr    r3,[0x790]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[76c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[790:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000076e: ldr    r3,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[76e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000770: cmp    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[770:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000772: bne    0x78c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[772:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[78c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1900,
		block_size=8,
		insn_addrs="[1900, 1902, 1904, 1906]"
	];
	1900 -> { 1932, 1908 };


	1908 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000774</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000774: mrs    r3,ipsr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[774:4]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9ea00:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9ea80:1], in=[unique[9ea00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[0x4, unique[9ea80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9eb80:4], in=[0x132])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9ec00:4], in=[unique[9eb80:4], 0x1f])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[9ec00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000778: cbz    r3,0x78c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[778:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[78c:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1908,
		block_size=6,
		insn_addrs="[1908, 1912]"
	];
	1908 -> { 1932, 1914 };


	1914 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000077a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000077a: ldr    r3,[0x794]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[77a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[794:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000077c: ldr    r2,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[77c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000077e: orr    r2,r2,#0x10000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[77e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x10000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r2, in=[r2, unique[87900:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000782: str    r2,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[782:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000784: ldr    r2,[r3,#0x24]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[784:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x24])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000786: bic    r2,r2,#0x8000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[786:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x8000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000078a: str    r2,[r3,#0x24]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[78a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x24])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1914,
		block_size=18,
		insn_addrs="[1914, 1916, 1918, 1922, 1924, 1926, 1930]"
	];
	1914 -> { 1932 };


	1932 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000078c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000078c: b.w    0x4268
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[78c:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[4268:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1932,
		block_size=4,
		insn_addrs="[1932]"
	];
	1932 -> { 17000 };


	1944 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000798</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000798: ldr    r2,[0x7c0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[798:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[7c0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000079a: ldr    r3,[r2,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[79a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000079c: mvn    r1,#0xa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[79c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xa])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r1, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007a0: str    r1,[r3,#0x78]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7a0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x78])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007a2: ldr    r1,[0x7c4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7a2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[7c4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007a4: str    r0,[r3,#0x74]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7a4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x74])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007a6: ldr    r3,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7a6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007a8: orr    r3,r3,#0x10000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7a8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x10000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007ac: str    r3,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7ac:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007ae: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7ae:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007b0: msr    basepri,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7b0:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[7b4:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007b4: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7b4:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007b8: ldr    r3,[r2,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7b8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007ba: ldr    r0,[r3,#0x78]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7ba:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x78])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007bc: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7bc:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1944,
		block_size=38,
		insn_addrs="[1944, 1946, 1948, 1952, 1954, 1956, 1958, 1960, 1964, 1966, 1968, 1972, 1976, 1978, 1980]"
	];



	1992 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000007c8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000007c8: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7c8:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007ca: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7ca:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007cc: mrs    r3,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7cc:4]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[7d0:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r3, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007d0: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7d0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007d2: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7d2:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[7d6:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[7d6:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[7d6:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007d6: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7d6:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007da: ldr    r3,[0x804]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7da:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[804:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007dc: ldr    r0,[r3,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7dc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007de: str    r0,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7de:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007e0: ldr    r3,[0x808]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7e0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[808:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007e2: mov.w  r2,#0x8000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7e2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x8000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007e6: str    r2,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7e6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007e8: ldr    r3,[0x80c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7e8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[80c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007ea: ldr    r2,[r0,#0x70]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7ea:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x70])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007ec: str    r2,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7ec:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007ee: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7ee:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007f0: ldr    r3,[r0,#0x74]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7f0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x74])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007f2: str    r2,[r0,#0x74]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7f2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x74])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007f4: msr    basepri,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7f4:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[7f8:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007f8: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7f8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000007fc: bl     0xa1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[7fc:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x800, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[a1c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=1992,
		block_size=56,
		insn_addrs="[1992, 1994, 1996, 2000, 2002, 2006, 2010, 2012, 2014, 2016, 2018, 2022, 2024, 2026, 2028, 2030, 2032, 2034, 2036, 2040, 2044]"
	];
	1992 -> { 2588, 2048 };


	2048 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000800</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000800: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[800:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000802: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[802:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2048,
		block_size=4,
		insn_addrs="[2048, 2050]"
	];



	2064 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000810</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000810: ldr    r1,[0x840]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[810:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[840:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000812: ldr    r2,[r1,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[812:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000814: mov.w  r0,#0x30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[814:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x30])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000818: add    r0,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[818:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000081a: mrs    r12,psp
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[81a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r12, in=[0x130])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000081e: stm    r0,{r4,r5,r6,r7,r8,r9,r10,r11,r12}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[81e:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[r0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r9])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r10])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r11])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r12])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000822: mov    r4,lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[822:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[lr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000824: mov    r0,lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[824:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[lr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000826: bl     0x7c8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[826:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x82a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[7c8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2064,
		block_size=26,
		insn_addrs="[2064, 2066, 2068, 2072, 2074, 2078, 2082, 2084, 2086]"
	];
	2064 -> { 1992, 2090 };


	2090 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000082a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000082a: mov    lr,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[82a:2]])<br/>
			&nbsp;&nbsp;COPY(out=lr, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000082c: ldr    r1,[0x840]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[82c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[840:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000082e: ldr    r2,[r1,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[82e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000830: add.w  r0,r2,#0x30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[830:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x30])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000834: ldm.w  r0,{r4,r5,r6,r7,r8,r9,r10,r11,r12}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[834:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[r0])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r9, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r10, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r11, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r12, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000838: msr    psp,r12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[838:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9fe00:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9fe80:1], in=[unique[9fe00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[83c:4], unique[9fe80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x136, r12])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000083c: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[83c:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2090,
		block_size=20,
		insn_addrs="[2090, 2092, 2094, 2096, 2100, 2104, 2108]"
	];



	2116 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000844</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000844: tst    lr,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[844:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x4])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[lr, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000848: ite    eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[848:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000084a: mrs    r0,msp
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[84a:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[84e:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r0, in=[0x12f])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000084e: mrs    r0,psp
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[84e:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[852:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r0, in=[0x130])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000852: ldr    r1,[r0,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[852:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000854: ldrb.w r1,[r1,#-0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[854:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r1, 0x2])<br/>
			&nbsp;&nbsp;LOAD(out=unique[99000:1], in=[0x600000f0c300, unique[91d00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[99000:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000858: cmp    r1,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[858:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x2, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000085a: beq    0x85c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[85a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[85c:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2116,
		block_size=24,
		insn_addrs="[2116, 2120, 2122, 2126, 2130, 2132, 2136, 2138]"
	];
	2116 -> { 2140, 2140 };


	2140 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000085c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000085c: push   {r0,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[85c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000085e: bl     0x3c2e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[85e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x862, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3c2e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2140,
		block_size=6,
		insn_addrs="[2140, 2142]"
	];
	2140 -> { 15406, 2146 };


	2146 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000862</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000862: pop    {r0,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[862:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2146,
		block_size=2,
		insn_addrs="[2146]"
	];



	2148 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000864</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000864: sxtb   r0, r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[864:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c7700:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r0, in=[unique[c7700:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000866: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[866:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000868: blt    0x87a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[868:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[87a:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2148,
		block_size=6,
		insn_addrs="[2148, 2150, 2152]"
	];
	2148 -> { 2170, 2154 };


	2154 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000086a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000086a: ldr    r2,[0x87c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[86a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[87c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000086c: lsrs   r1,r0,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[86c:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r0, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r0, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000086e: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[86e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000870: and    r0,r0,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[870:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000874: lsls   r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[874:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c680:4], in=[r0, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9c680:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[9c680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000876: str.w  r3,[r2,r1,lsl #0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[876:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3200:4], in=[r1, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3300:4], in=[r2, unique[c3200:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3300:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2154,
		block_size=16,
		insn_addrs="[2154, 2156, 2158, 2160, 2164, 2166]"
	];
	2154 -> { 2170 };


	2170 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000087a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000087a: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[87a:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2170,
		block_size=2,
		insn_addrs="[2170]"
	];



	2176 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000880</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000880: ldr    r3,[0x898]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[880:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[898:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000882: lsrs   r2,r0,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[882:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r0, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r2, in=[r0, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000884: and    r0,r0,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[884:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000888: ldr.w  r2,[r3,r2,lsl #0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[888:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[98a00:4], in=[r2, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98b00:4], in=[r3, unique[98a00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[98b00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000088c: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[88c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000088e: lsl.w  r0,r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[88e:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9d100:4], in=[r0, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9d100:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r3, unique[9d100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000892: ands   r0,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[892:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r0, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000894: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[894:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2176,
		block_size=22,
		insn_addrs="[2176, 2178, 2180, 2184, 2188, 2190, 2194, 2196]"
	];



	2204 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000089c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000089c: sxtb   r0, r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[89c:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c7700:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r0, in=[unique[c7700:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000089e: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[89e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008a0: it     ge
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8a0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86580:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008a2: add.w  r0,r0,#0xe0000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8a2:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[d80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[d80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[8a6:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0xe0000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008a6: add.w  r1,r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8a6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008aa: it     lt
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8aa:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86680:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008ac: ldr    r3,[0x8c8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8ac:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[e80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[e80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[8ae:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[8c8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008ae: lsl.w  r1,r1,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8ae:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[87d00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r1, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[87d00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[87d00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r1, unique[87d00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008b2: ite    ge
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8b2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86580:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008b4: add.w  r0,r0,#0xe100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8b4:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[d80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[d80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[8b8:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0xe100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008b8: and    r0,r0,#0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8b8:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[e80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[e80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[8bc:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xf])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008bc: uxtb   r1, r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8bc:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008be: ite    lt
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8be:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86680:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008c0: strb   r1,[r3,r0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8c0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[e80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[e80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[8c2:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2e80:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92900:4], unique[c2e80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008c2: strb.w r1,[r0,#0x300]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8c2:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[d80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[d80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[8c6:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x300])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008c6: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8c6:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2204,
		block_size=44,
		insn_addrs="[2204, 2206, 2208, 2210, 2214, 2218, 2220, 2222, 2226, 2228, 2232, 2236, 2238, 2240, 2242, 2246]"
	];



	2252 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000008cc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000008cc: ldr    r2,[0x90c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8cc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[90c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008ce: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8ce:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008d0: ldr    r3,[0x910]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8d0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[910:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008d2: bic    r2,r2,#0x7f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8d2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008d6: str    r2,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8d6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008d8: dsb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8d8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2d, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008dc: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8dc:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008e0: ldr.w  r2,[r3,#0x88]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8e0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x88])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008e4: bic    r2,r2,#0xf00000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8e4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0xf00000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008e8: str.w  r2,[r3,#0x88]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8e8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x88])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008ec: mrs    r3,control
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8ec:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f600:1], in=[0x133])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9f700:1], in=[unique[9f600:1], 0x1])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f780:1], in=[0x134])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9f880:1], in=[unique[9f780:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9f900:1], in=[unique[9f880:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[9f980:1], in=[unique[9f900:1], unique[9f700:1]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[9f980:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008f0: bic    r3,r3,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8f0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x4])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008f4: msr    control,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8f4:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0a80:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0b00:1], in=[unique[a0a80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[8f8:4], unique[a0b00:1]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[a0b80:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0c80:1], in=[unique[a0b80:4], 0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x27, unique[a0c80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0a80:1], in=[0x28])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0d80:1], in=[unique[a0a80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[8f8:4], unique[a0d80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0e00:1], in=[0x134])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0f00:1], in=[unique[a0e00:1], 0x1])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x138, unique[a0f00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008f8: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8f8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000008fc: bl     0x2980
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[8fc:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x900, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2980:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2252,
		block_size=52,
		insn_addrs="[2252, 2254, 2256, 2258, 2262, 2264, 2268, 2272, 2276, 2280, 2284, 2288, 2292, 2296, 2300]"
	];
	2252 -> { 10624, 2304 };


	2304 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000900</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000900: bl     0x31e4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[900:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x904, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[31e4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2304,
		block_size=4,
		insn_addrs="[2304]"
	];
	2304 -> { 12772, 2308 };


	2308 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000904</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000904: bl     0x9c8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[904:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x908, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[9c8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2308,
		block_size=4,
		insn_addrs="[2308]"
	];
	2308 -> { 2504, 2312 };


	2312 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000908</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000908: bl     0x2a08
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[908:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x90c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2a08:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2312,
		block_size=4,
		insn_addrs="[2312]"
	];
	2312 -> { 10760, 2316 };


	2316 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000090c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000090c: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[90c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000090e: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[90e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2316,
		block_size=4,
		insn_addrs="[2316, 2318]"
	];
	2316 -> { 2320 };


	2320 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000910</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000910: stc    p0,cr14,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[910:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0xb, 0x0, cr14, unique[92c80:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2320,
		block_size=4,
		insn_addrs="[2320]"
	];
	2320 -> { 2324 };


	2324 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000914</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000914: str.w  r3,[r2,#-0x20]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[914:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r2, 0x20])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91d00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000918: ldr    r3,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[918:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000091a: str.w  r3,[r2,#-0x1c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[91a:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r2, 0x1c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91d00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000091e: ldr    r1,[0x948]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[91e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[948:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000920: ldr    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[920:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000922: str.w  r3,[r2,#-0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[922:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r2, 0x18])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91d00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000926: ldr    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[926:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000928: str.w  r3,[r2,#-0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[928:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r2, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91d00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000092c: bic    r1,r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[92c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r1, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000930: mov.w  r3,#0x1000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[930:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x1000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000934: str.w  r3,[r2,#-0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[934:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r2, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91d00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000938: str.w  r1,[r2,#-0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[938:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91d00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000093c: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[93c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000093e: subs   r2,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[93e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x20, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x20])<br/>
			&nbsp;&nbsp;INT_SUB(out=r2, in=[r2, 0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000940: str    r2,[r0,#0x50]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[940:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x50])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000942: str    r3,[r0,#0x74]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[942:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x74])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000944: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[944:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2324,
		block_size=50,
		insn_addrs="[2324, 2328, 2330, 2334, 2336, 2338, 2342, 2344, 2348, 2352, 2356, 2360, 2364, 2366, 2368, 2370, 2372]"
	];



	2380 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000094c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000094c: ldr    r2,[0x974]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[94c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[974:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000094e: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[94e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000950: ldr    r0,[r2,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[950:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000952: cbz    r0,0x972
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[952:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[972:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2380,
		block_size=8,
		insn_addrs="[2380, 2382, 2384, 2386]"
	];
	2380 -> { 2418, 2388 };


	2388 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000954</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000954: cmn    r3,#0x16
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[954:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x16])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[96980:4], in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96980:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96980:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000958: ldr    r0,[r0,#0x60]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[958:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x60])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000095a: beq    0x968
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[95a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[968:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2388,
		block_size=8,
		insn_addrs="[2388, 2392, 2394]"
	];
	2388 -> { 2408, 2396 };


	2396 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000095c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000095c: sub.w  r2,r0,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[95c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x40])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r2, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000960: cmp    r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[960:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000962: bhi    0x970
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[962:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[970:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2396,
		block_size=8,
		insn_addrs="[2396, 2400, 2402]"
	];
	2396 -> { 2416, 2404 };


	2404 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000964</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000964: cmp    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[964:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000966: bcs    0x970
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[966:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83b80:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[970:4], unique[83b80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2404,
		block_size=4,
		insn_addrs="[2404, 2406]"
	];
	2404 -> { 2416, 2408 };


	2408 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000968</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000968: cmp    r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[968:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000096a: it     cs
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[96a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85c80:1], in=[CY, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000096c: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[96c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[480:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[480:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[96e:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000096e: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[96e:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2408,
		block_size=8,
		insn_addrs="[2408, 2410, 2412, 2414]"
	];



	2416 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000970</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000970: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[970:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2416,
		block_size=2,
		insn_addrs="[2416]"
	];
	2416 -> { 2418 };


	2418 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000972</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000972: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[972:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2418,
		block_size=2,
		insn_addrs="[2418]"
	];



	2424 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000978</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000978: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[978:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000097a: mov    r5,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[97a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000097c: ldr    r2,[0x9ac]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[97c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[9ac:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000097e: ldr    r3,[0x9b0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[97e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[9b0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000980: str    r0,[r2,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[980:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000982: ldr    r2,[r0,#0x70]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[982:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x70])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000984: str    r2,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[984:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000986: mov    r6,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[986:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000988: bl     0xa1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[988:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x98c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[a1c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2424,
		block_size=20,
		insn_addrs="[2424, 2426, 2428, 2430, 2432, 2434, 2436, 2438, 2440]"
	];
	2424 -> { 2588, 2444 };


	2444 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000098c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000098c: mov    r4,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[98c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000098e: msr    psp,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[98e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9fe00:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9fe80:1], in=[unique[9fe00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[992:4], unique[9fe80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x136, r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000992: mov.w  r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[992:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000996: ldr    r3,[0x9b4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[996:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[9b4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000998: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[998:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x99a, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2444,
		block_size=14,
		insn_addrs="[2444, 2446, 2450, 2454, 2456]"
	];
	2444 -> { 15436, 2458 };


	2458 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000099a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000099a: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[99a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000099c: mov.w  r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[99c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009a0: mov.w  r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9a0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009a4: mov.w  r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9a4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009a8: ldr    r4,[0x9b8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9a8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[ram[9b8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009aa: bx     r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9aa:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r4, 0xfffffffe])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2458,
		block_size=18,
		insn_addrs="[2458, 2460, 2464, 2468, 2472, 2474]"
	];
	2458 -> { 444 };


	2492 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000009bc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000009bc: ldr    r3,[0x9c4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[9c4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009be: movs   r2,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9be:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009c0: str    r2,[r3,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9c0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x10])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009c2: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9c2:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2492,
		block_size=8,
		insn_addrs="[2492, 2494, 2496, 2498]"
	];



	2504 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000009c8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000009c8: ldr    r0,[0x9dc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9c8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[9dc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009ca: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9ca:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009cc: movs   r1,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9cc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2504,
		block_size=6,
		insn_addrs="[2504, 2506, 2508]"
	];
	2504 -> { 2510 };


	2510 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000009ce</b></td></tr>
			<tr><td align="left" balign="left">
			0x000009ce: adds   r2,r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9ce:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009d0: adds   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9d0:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009d2: cmp    r3,#0x30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9d2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x30, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x30])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x30])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009d4: strb.w r1,[r2,#0x300]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9d4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x300])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009d8: bne    0x9ce
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9d8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[9ce:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2510,
		block_size=12,
		insn_addrs="[2510, 2512, 2514, 2516, 2520]"
	];
	2510 -> { 2510, 2522 };


	2522 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000009da</b></td></tr>
			<tr><td align="left" balign="left">
			0x000009da: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9da:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2522,
		block_size=2,
		insn_addrs="[2522]"
	];



	2528 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000009e0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000009e0: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9e0:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009e2: mrs    r3,ipsr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9e2:4]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9ea00:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9ea80:1], in=[unique[9ea00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[0x4, unique[9ea80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9eb80:4], in=[0x132])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9ec00:4], in=[unique[9eb80:4], 0x1f])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[9ec00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009e6: ldr    r2,[0xa00]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9e6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009e8: subs   r3,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9e8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x10, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x10])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r3, 0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009ea: add.w  r1,r2,r3, lsl #0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9ea:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x3])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r3, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r3, 0x3])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r2, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009ee: ldr.w  r0,[r2,r3,lsl #0x3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9ee:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[98a00:4], in=[r3, 0x3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98b00:4], in=[r2, unique[98a00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[98b00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009f2: ldr    r1,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9f2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009f4: blx    r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9f4:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r1, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x9f6, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2528,
		block_size=22,
		insn_addrs="[2528, 2530, 2534, 2536, 2538, 2542, 2546, 2548]"
	];
	2528 -> { 2550 };


	2550 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000009f6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000009f6: pop.w  {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9f6:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000009fa: b.w    0x460
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[9fa:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[460:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2550,
		block_size=8,
		insn_addrs="[2550, 2554]"
	];
	2550 -> { 1120 };


	2564 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000a04</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000a04: ldr    r3,[0xa10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a04:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[a10:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a06: ldr    r2,[0xa14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a06:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[a14:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a08: ldr    r0,[0xa18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a08:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[a18:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a0a: movs   r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a0a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a0c: b.w    0xafc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a0c:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[afc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2564,
		block_size=12,
		insn_addrs="[2564, 2566, 2568, 2570, 2572]"
	];
	2564 -> { 2812 };


	2588 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000a1c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000a1c: ldr    r2,[r0,#0x60]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a1c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x60])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a1e: ldr    r3,[0xa34]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a1e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[a34:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a20: subs   r2,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a20:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x40, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x40])<br/>
			&nbsp;&nbsp;INT_SUB(out=r2, in=[r2, 0x40])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a22: str    r2,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a22:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a24: ldr    r2,[0xa38]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a24:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[a38:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a26: movs   r1,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a26:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x40])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a28: strd   r1,r2,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a28:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a2c: mov    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a2c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a2e: movs   r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a2e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a30: b.w    0xb10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a30:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[b10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2588,
		block_size=24,
		insn_addrs="[2588, 2590, 2592, 2594, 2596, 2598, 2600, 2604, 2606, 2608]"
	];
	2588 -> { 2832 };


	2620 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000a3c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000a3c: ldr    r2,[0xa60]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a3c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[a60:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a3e: str.w  r0,[r2,#0x98]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a3e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x98])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a42: ldr    r3,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a42:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a44: bic    r3,r3,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a44:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a48: orrs   r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a48:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a4a: orr    r3,r3,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a4a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a4e: str.w  r3,[r2,#0x9c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a4e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x9c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a52: ldr    r3,[r1,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a52:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a54: orr    r3,r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a54:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a58: str.w  r3,[r2,#0xa0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a58:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0xa0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a5c: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a5c:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2620,
		block_size=34,
		insn_addrs="[2620, 2622, 2626, 2628, 2632, 2634, 2638, 2642, 2644, 2648, 2652]"
	];



	2660 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000a64</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000a64: push   {r4,r5,r6,r7,r8,r9,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a64:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r9])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a68: ldr.w  r8,[0xacc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a68:4]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[ram[acc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a6c: sub    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a6c:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a6e: mov    r6,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a6e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a70: mov    r7,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a70:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a72: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a72:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a74: mov.w  r9,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a74:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r9, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r9, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r9, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2660,
		block_size=20,
		insn_addrs="[2660, 2664, 2668, 2670, 2672, 2674, 2676]"
	];
	2660 -> { 2680 };


	2680 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000a78</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000a78: cmp    r9,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a78:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r6, r9])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r9, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r9, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a7a: bge    0xac4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a7a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ac4:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2680,
		block_size=4,
		insn_addrs="[2680, 2682]"
	];
	2680 -> { 2756, 2684 };


	2684 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000a7c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000a7c: ldr    r0,[r4,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a7c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a7e: cbz    r0,0xab8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a7e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ab8:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2684,
		block_size=4,
		insn_addrs="[2684, 2686]"
	];
	2684 -> { 2744, 2688 };


	2688 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000a80</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000a80: cbz    r7,0xa92
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a80:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[a92:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2688,
		block_size=2,
		insn_addrs="[2688]"
	];
	2688 -> { 2706, 2690 };


	2690 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000a82</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000a82: subs   r1,r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a82:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r1, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a84: tst    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a84:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca180:4], in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca180:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca180:4], 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a86: bne    0xac0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a86:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ac0:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2690,
		block_size=6,
		insn_addrs="[2690, 2692, 2694]"
	];
	2690 -> { 2752, 2696 };


	2696 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000a88</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000a88: cmp    r0,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a88:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1f, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x1f])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a8a: bls    0xac0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a8a:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84280:1], in=[CY])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84380:1], in=[unique[84280:1], ZR])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ac0:4], unique[84380:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2696,
		block_size=4,
		insn_addrs="[2696, 2698]"
	];
	2696 -> { 2752, 2700 };


	2700 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000a8c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000a8c: ldr    r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a8c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a8e: tst    r1,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a8e:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca180:4], in=[r1, r3])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca180:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca180:4], 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a90: bne    0xac0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a90:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ac0:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2700,
		block_size=6,
		insn_addrs="[2700, 2702, 2704]"
	];
	2700 -> { 2752, 2706 };


	2706 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000a92</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000a92: ldr    r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a92:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a94: str    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a94:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a96: bl     0x3c92
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a96:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xa9a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3c92:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2706,
		block_size=8,
		insn_addrs="[2706, 2708, 2710]"
	];
	2706 -> { 15506, 2714 };


	2714 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000a9a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000a9a: ldr    r3,[r4,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a9a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a9c: orrs   r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a9c:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000a9e: str    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[a9e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000aa0: ldr.w  r5,[r8,#0x90]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[aa0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r8, 0x90])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000aa4: ubfx   r5,r5,#0x8,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[aa4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x7])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r5, in=[r5, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r5, in=[r5, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000aa8: uxtb   r0, r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[aa8:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000aaa: subs   r5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[aaa:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r5, in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000aac: cmp    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[aac:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000aae: bhi    0xac0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[aae:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ac0:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2714,
		block_size=22,
		insn_addrs="[2714, 2716, 2718, 2720, 2724, 2728, 2730, 2732, 2734]"
	];
	2714 -> { 2752, 2736 };


	2736 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ab0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ab0: add    r1,sp,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ab0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ab2: bl     0xa3c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ab2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xab6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[a3c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2736,
		block_size=6,
		insn_addrs="[2736, 2738]"
	];
	2736 -> { 2620, 2742 };


	2742 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ab6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ab6: adds   r2,r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ab6:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2742,
		block_size=2,
		insn_addrs="[2742]"
	];
	2742 -> { 2744 };


	2744 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ab8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ab8: add.w  r9,r9,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ab8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r9, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r9, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r9, in=[r9, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r9, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r9, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000abc: adds   r4,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[abc:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0xc])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0xc])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, 0xc])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000abe: b      0xa78
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[abe:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[a78:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2744,
		block_size=8,
		insn_addrs="[2744, 2748, 2750]"
	];
	2744 -> { 2680 };


	2752 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ac0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ac0: mvn    r2,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ac0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x15])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r2, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2752,
		block_size=4,
		insn_addrs="[2752]"
	];
	2752 -> { 2756 };


	2756 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ac4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ac4: mov    r0,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ac4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ac6: add    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ac6:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ac8: pop.w  {r4,r5,r6,r7,r8,r9,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ac8:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r9, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2756,
		block_size=8,
		insn_addrs="[2756, 2758, 2760]"
	];



	2768 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ad0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ad0: ldr    r3,[0xae4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ad0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[ae4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ad2: movs   r2,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ad2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ad4: str.w  r2,[r3,#0x94]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ad4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x94])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ad8: dsb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ad8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2d, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000adc: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[adc:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ae0: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ae0:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2768,
		block_size=18,
		insn_addrs="[2768, 2770, 2772, 2776, 2780, 2784]"
	];



	2792 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ae8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ae8: dmb    #0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ae8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1f])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000aec: ldr    r3,[0xaf8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[aec:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[af8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000aee: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[aee:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000af0: str.w  r2,[r3,#0x94]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[af0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x94])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000af4: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[af4:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2792,
		block_size=14,
		insn_addrs="[2792, 2796, 2798, 2800, 2804]"
	];



	2812 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000afc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000afc: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[afc:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000afe: ldr    r4,[0xb0c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[afe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[ram[b0c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b00: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b00:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b02: ldrb   r2,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b02:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b04: bl     0xa64
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b04:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xb08, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[a64:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2812,
		block_size=12,
		insn_addrs="[2812, 2814, 2816, 2818, 2820]"
	];
	2812 -> { 2660, 2824 };


	2824 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b08</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b08: strb   r0,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b08:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b0a: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b0a:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2824,
		block_size=4,
		insn_addrs="[2824, 2826]"
	];



	2832 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b10</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b10: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b10:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b12: ldr    r2,[0xb40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b12:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[b40:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b14: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b14:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b16: ldrb   r2,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b16:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b18: bl     0xa64
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b18:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xb1c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[a64:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2832,
		block_size=12,
		insn_addrs="[2832, 2834, 2836, 2838, 2840]"
	];
	2832 -> { 2660, 2844 };


	2844 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b1c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b1c: cmn    r0,#0x16
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b1c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x16])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[96980:4], in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96980:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96980:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b20: beq    0xb32
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b20:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[b32:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2844,
		block_size=6,
		insn_addrs="[2844, 2848]"
	];
	2844 -> { 2866, 2850 };


	2850 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b22</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b22: ldr    r2,[0xb44]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b22:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[b44:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b24: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b24:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2850,
		block_size=4,
		insn_addrs="[2850, 2852]"
	];
	2850 -> { 2854 };


	2854 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b26</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b26: ldr.w  r3,[r2,#0x90]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b26:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x90])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b2a: ubfx   r3,r3,#0x8,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b2a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x7])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b2e: cmp    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b2e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b30: blt    0xb34
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b30:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[b34:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2854,
		block_size=12,
		insn_addrs="[2854, 2858, 2862, 2864]"
	];
	2854 -> { 2868, 2866 };


	2866 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b32</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b32: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b32:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2866,
		block_size=2,
		insn_addrs="[2866]"
	];



	2868 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b34</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b34: str.w  r0,[r2,#0x98]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b34:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x98])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b38: str.w  r1,[r2,#0xa0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b38:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0xa0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b3c: adds   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b3c:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b3e: b      0xb26
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b3e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[b26:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2868,
		block_size=12,
		insn_addrs="[2868, 2872, 2876, 2878]"
	];
	2868 -> { 2854 };


	2888 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b48</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b48: push   {r4,r5,r6,r7,r8,r9,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b48:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r9])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b4c: ldr    r3,[0xc9c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b4c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[c9c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b4e: ldr    r4,[0xca0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b4e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[ram[ca0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b50: ldr.w  r3,[r3,#0x90]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b50:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x90])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b54: ldr    r5,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b54:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b56: ubfx   r3,r3,#0x8,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b56:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x7])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b5a: cmp    r5,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b5a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r5, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b5c: sub    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b5c:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b5e: bhi.w  0xc96
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b5e:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[85180:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[85280:1], in=[CY, unique[85180:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[c96:4], unique[85280:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2888,
		block_size=26,
		insn_addrs="[2888, 2892, 2894, 2896, 2900, 2902, 2906, 2908, 2910]"
	];
	2888 -> { 3222, 2914 };


	2914 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b62</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b62: bl     0xae8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b62:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xb66, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[ae8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2914,
		block_size=4,
		insn_addrs="[2914]"
	];
	2914 -> { 2792, 2918 };


	2918 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b66</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b66: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b66:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b68: movs   r6,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b68:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0xc])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2918,
		block_size=4,
		insn_addrs="[2918, 2920]"
	];
	2918 -> { 2922 };


	2922 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b6a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b6a: cmp    r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b6a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r5, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b6c: bne    0xba4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b6c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ba4:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2922,
		block_size=4,
		insn_addrs="[2922, 2924]"
	];
	2922 -> { 2980, 2926 };


	2926 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b6e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b6e: ldr    r4,[0xca4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b6e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[ram[ca4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b70: ldr    r7,[0xca8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b70:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[ram[ca8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b72: strb   r5,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b72:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b74: mov    r0,sp
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b74:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[sp])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b76: bl     0x40c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b76:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xb7a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[40c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2926,
		block_size=12,
		insn_addrs="[2926, 2928, 2930, 2932, 2934]"
	];
	2926 -> { 1036, 2938 };


	2938 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b7a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b7a: ldr.w  r8,[0xc9c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b7a:4]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[ram[c9c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b7e: ldr.w  r9,[0xcac]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b7e:4]])<br/>
			&nbsp;&nbsp;COPY(out=r9, in=[ram[cac:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b82: mov    r6,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b82:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b84: movs   r5,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b84:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2938,
		block_size=12,
		insn_addrs="[2938, 2942, 2946, 2948]"
	];
	2938 -> { 2950 };


	2950 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b86</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b86: cmp    r6,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b86:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r6, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b88: bne    0xbb2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b88:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[bb2:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2950,
		block_size=4,
		insn_addrs="[2950, 2952]"
	];
	2950 -> { 2994, 2954 };


	2954 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b8a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b8a: ldrb   r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b8a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b8c: ldr    r1,[0xc9c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b8c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[c9c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b8e: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b8e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2954,
		block_size=6,
		insn_addrs="[2954, 2956, 2958]"
	];
	2954 -> { 2960 };


	2960 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b90</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b90: ldr.w  r2,[r1,#0x90]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b90:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x90])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b94: ubfx   r2,r2,#0x8,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b94:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x7])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r2, in=[r2, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b98: cmp    r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b98:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000b9a: blt    0xc8a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b9a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[c8a:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2960,
		block_size=12,
		insn_addrs="[2960, 2964, 2968, 2970]"
	];
	2960 -> { 3210, 2972 };


	2972 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000b9c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000b9c: bl     0xad0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[b9c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xba0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[ad0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2972,
		block_size=4,
		insn_addrs="[2972]"
	];
	2972 -> { 2768, 2976 };


	2976 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ba0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ba0: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ba0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ba2: b      0xc2a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ba2:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[c2a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2976,
		block_size=4,
		insn_addrs="[2976, 2978]"
	];
	2976 -> { 3114 };


	2980 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ba4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ba4: ldr    r1,[r4,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ba4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ba6: mla    r1,r6,r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ba6:4]])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[a1500:4], in=[r6, r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[unique[a1500:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000baa: bl     0xa3c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[baa:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xbae, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[a3c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2980,
		block_size=10,
		insn_addrs="[2980, 2982, 2986]"
	];
	2980 -> { 2620, 2990 };


	2990 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000bae</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000bae: adds   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bae:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bb0: b      0xb6a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bb0:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[b6a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2990,
		block_size=4,
		insn_addrs="[2990, 2992]"
	];
	2990 -> { 2922 };


	2994 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000bb2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000bb2: ldr    r0,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bb2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bb4: add.w  r1,r0,r5, lsl #0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bb4:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x4])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r5, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r5, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bb8: lsl.w  r12,r5,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bb8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[87d00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r5, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[87d00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[87d00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r12, in=[r5, unique[87d00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bbc: ldr    r3,[r1,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bbc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bbe: ands   r3,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bbe:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, r7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bc0: cmp.w  r3,#0x800000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bc0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x800000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bc4: beq    0xc58
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bc4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[c58:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=2994,
		block_size=20,
		insn_addrs="[2994, 2996, 3000, 3004, 3006, 3008, 3012]"
	];
	2994 -> { 3160, 3014 };


	3014 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000bc6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000bc6: bhi    0xbde
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bc6:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[bde:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3014,
		block_size=2,
		insn_addrs="[3014]"
	];
	3014 -> { 3038, 3016 };


	3016 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000bc8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000bc8: cmp.w  r3,#0x200000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bc8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x200000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bcc: beq    0xc30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bcc:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[c30:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3016,
		block_size=6,
		insn_addrs="[3016, 3020]"
	];
	3016 -> { 3120, 3022 };


	3022 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000bce</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000bce: cmp.w  r3,#0x400000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bce:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x400000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bd2: beq    0xc42
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bd2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[c42:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3022,
		block_size=6,
		insn_addrs="[3022, 3026]"
	];
	3022 -> { 3138, 3028 };


	3028 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000bd4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000bd4: cmp.w  r3,#0x100000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bd4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bd8: beq    0xbfc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bd8:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[bfc:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3028,
		block_size=6,
		insn_addrs="[3028, 3032]"
	];
	3028 -> { 3068, 3034 };


	3034 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000bda</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000bda: adds   r5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bda:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bdc: b      0xb86
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bdc:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[b86:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3034,
		block_size=4,
		insn_addrs="[3034, 3036]"
	];
	3034 -> { 2950 };


	3038 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000bde</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000bde: cmp.w  r3,#0x1000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bde:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x1000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87900:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000be2: beq    0xc6a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[be2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[c6a:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3038,
		block_size=6,
		insn_addrs="[3038, 3042]"
	];
	3038 -> { 3178, 3044 };


	3044 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000be4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000be4: cmp.w  r3,#0x2000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[be4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x2000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87900:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000be8: bne    0xbda
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[be8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[bda:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3044,
		block_size=6,
		insn_addrs="[3044, 3048]"
	];
	3044 -> { 3034, 3050 };


	3050 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000bea</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000bea: ldr.w  r3,[r0,r12]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bea:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98900:4], in=[r0, r12])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[98900:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bee: ldr    r0,[r1,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bee:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bf0: ldr    r2,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bf0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bf2: bl     0x3c92
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bf2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xbf6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3c92:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3050,
		block_size=12,
		insn_addrs="[3050, 3054, 3056, 3058]"
	];
	3050 -> { 15506, 3062 };


	3062 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000bf6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000bf6: orr    r0,r0,#0x40000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bf6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x40000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000bfa: b      0xc10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bfa:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[c10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3062,
		block_size=6,
		insn_addrs="[3062, 3066]"
	];
	3062 -> { 3088 };


	3068 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000bfc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000bfc: ldr.w  r3,[r0,r12]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[bfc:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98900:4], in=[r0, r12])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[98900:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c00: ldr    r0,[r1,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c00:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c02: ldr    r2,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c02:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c04: bl     0x3c92
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c04:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xc08, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3c92:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3068,
		block_size=12,
		insn_addrs="[3068, 3072, 3074, 3076]"
	];
	3068 -> { 15506, 3080 };


	3080 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c08</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c08: orr    r0,r0,#0x11000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c08:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x11000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c0c: orr    r0,r0,#0xb0000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c0c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0xb0000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3080,
		block_size=8,
		insn_addrs="[3080, 3084]"
	];
	3080 -> { 3088 };


	3088 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c10</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c10: strd   r2,r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c10:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c14: str    r0,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c14:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c16: ldr.w  r3,[r8,#0x90]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c16:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r8, 0x90])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c1a: ldrb   r0,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c1a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c1c: ubfx   r3,r3,#0x8,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c1c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x7])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c20: subs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c20:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c22: cmp    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c22:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c24: bls    0xc7c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c24:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84280:1], in=[CY])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84380:1], in=[unique[84280:1], ZR])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[c7c:4], unique[84380:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3088,
		block_size=22,
		insn_addrs="[3088, 3092, 3094, 3098, 3100, 3104, 3106, 3108]"
	];
	3088 -> { 3196, 3110 };


	3110 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c26</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c26: mvn    r0,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c26:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x15])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3110,
		block_size=4,
		insn_addrs="[3110]"
	];
	3110 -> { 3114 };


	3114 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c2a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c2a: add    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c2a:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c2c: pop.w  {r4,r5,r6,r7,r8,r9,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c2c:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r9, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3114,
		block_size=6,
		insn_addrs="[3114, 3116]"
	];



	3120 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c30</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c30: ldr.w  r3,[r0,r12]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c30:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98900:4], in=[r0, r12])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[98900:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c34: ldr    r0,[r1,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c34:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c36: ldr    r2,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c36:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c38: bl     0x3c92
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c38:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xc3c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3c92:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3120,
		block_size=12,
		insn_addrs="[3120, 3124, 3126, 3128]"
	];
	3120 -> { 15506, 3132 };


	3132 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c3c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c3c: orr.w  r0,r0,r9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c3c:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, r9])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c40: b      0xc10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c40:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[c10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3132,
		block_size=6,
		insn_addrs="[3132, 3136]"
	];
	3132 -> { 3088 };


	3138 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c42</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c42: ldr.w  r3,[r0,r12]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c42:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98900:4], in=[r0, r12])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[98900:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c46: ldr    r0,[r1,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c46:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c48: ldr    r2,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c48:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c4a: bl     0x3c92
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c4a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xc4e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3c92:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3138,
		block_size=12,
		insn_addrs="[3138, 3142, 3144, 3146]"
	];
	3138 -> { 15506, 3150 };


	3150 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c4e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c4e: orr    r0,r0,#0x7000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c4e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x7000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c52: orr    r0,r0,#0x20000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c52:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x20000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c56: b      0xc10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c56:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[c10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3150,
		block_size=10,
		insn_addrs="[3150, 3154, 3158]"
	];
	3150 -> { 3088 };


	3160 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c58</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c58: ldr.w  r3,[r0,r12]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c58:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98900:4], in=[r0, r12])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[98900:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c5c: ldr    r0,[r1,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c5c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c5e: ldr    r2,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c5e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c60: bl     0x3c92
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c60:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xc64, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3c92:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3160,
		block_size=12,
		insn_addrs="[3160, 3164, 3166, 3168]"
	];
	3160 -> { 15506, 3172 };


	3172 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c64</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c64: orr    r0,r0,#0x1040000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c64:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x1040000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c68: b      0xc10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c68:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[c10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3172,
		block_size=6,
		insn_addrs="[3172, 3176]"
	];
	3172 -> { 3088 };


	3178 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c6a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c6a: ldr.w  r3,[r0,r12]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c6a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98900:4], in=[r0, r12])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[98900:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c6e: ldr    r0,[r1,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c6e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c70: ldr    r2,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c70:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c72: bl     0x3c92
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c72:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xc76, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3c92:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3178,
		block_size=12,
		insn_addrs="[3178, 3182, 3184, 3186]"
	];
	3178 -> { 15506, 3190 };


	3190 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c76</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c76: orr    r0,r0,#0x1100000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c76:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x1100000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c7a: b      0xc10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c7a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[c10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3190,
		block_size=6,
		insn_addrs="[3190, 3194]"
	];
	3190 -> { 3088 };


	3196 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c7c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c7c: add    r1,sp,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c7c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c7e: bl     0xa3c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c7e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xc82, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[a3c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3196,
		block_size=6,
		insn_addrs="[3196, 3198]"
	];
	3196 -> { 2620, 3202 };


	3202 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c82</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c82: ldrb   r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c82:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c84: adds   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c84:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c86: strb   r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c86:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c88: b      0xbda
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c88:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[bda:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3202,
		block_size=8,
		insn_addrs="[3202, 3204, 3206, 3208]"
	];
	3202 -> { 3034 };


	3210 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c8a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c8a: str.w  r3,[r1,#0x98]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c8a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x98])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c8e: str.w  r0,[r1,#0xa0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c8e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0xa0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c92: adds   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c92:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c94: b      0xb90
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c94:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[b90:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3210,
		block_size=12,
		insn_addrs="[3210, 3214, 3218, 3220]"
	];
	3210 -> { 2960 };


	3222 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000c96</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000c96: mov.w  r0,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c96:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000c9a: b      0xc2a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[c9a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[c2a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3222,
		block_size=6,
		insn_addrs="[3222, 3226]"
	];
	3222 -> { 3114 };


	3248 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000cb0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000cb0: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[cb0:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000cb2: ldr    r3,[0xcbc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[cb2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[cbc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000cb4: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[cb4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000cb6: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[cb6:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xcb8, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3248,
		block_size=8,
		insn_addrs="[3248, 3250, 3252, 3254]"
	];
	3248 -> { 3256 };


	3256 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000cb8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000cb8: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[cb8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000cba: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[cba:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3256,
		block_size=4,
		insn_addrs="[3256, 3258]"
	];



	3264 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000cc0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000cc0: ldr    r3,[0xcd0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[cc0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[cd0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000cc2: ldr    r2,[0xcd4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[cc2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[cd4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000cc4: str    r0,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[cc4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000cc6: ldrb   r3,[r2,#0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[cc6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r2, 0x2])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000cc8: orr    r3,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[cc8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ccc: strb   r3,[r2,#0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ccc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r2, 0x2])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000cce: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[cce:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3264,
		block_size=16,
		insn_addrs="[3264, 3266, 3268, 3270, 3272, 3276, 3278]"
	];



	3388 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000d3c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000d3c: cbz    r0,0xd48
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d3c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[d48:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3388,
		block_size=2,
		insn_addrs="[3388]"
	];
	3388 -> { 3400, 3390 };


	3390 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000d3e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000d3e: ldr    r3,[0xd4c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d3e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[d4c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d40: lsls   r0,r0,#0x6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d40:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x6, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r0, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x6, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x6, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r0, 0x6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d42: orr    r3,r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d42:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d46: bx     r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d46:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3390,
		block_size=10,
		insn_addrs="[3390, 3392, 3394, 3398]"
	];
	3390 -> { 17920 };


	3400 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000d48</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000d48: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d48:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3400,
		block_size=2,
		insn_addrs="[3400]"
	];



	3408 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000d50</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000d50: ldr    r3,[0xd74]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d50:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[d74:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d52: push   {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d52:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d54: subs   r3,r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d54:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d56: mov    r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d56:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d58: ldr    r1,[0xd78]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d58:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[d78:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d5a: asrs   r3,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d5a:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[94280:4], in=[0x2, 0x1])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=unique[94300:4], in=[r3, unique[94280:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[94400:4], in=[unique[94300:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[94480:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[94500:1], in=[unique[94480:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[94580:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[94600:1], in=[unique[94400:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[94680:1], in=[unique[94580:1], unique[94600:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[94500:1], unique[94680:1]])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=r3, in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d5c: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d5c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d5e: muls   r1,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d5e:2]])<br/>
			&nbsp;&nbsp;INT_MULT(out=r1, in=[r3, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d60: ldr    r0,[0xd7c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d60:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[d7c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d62: movs   r2,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d62:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x40])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d64: bl     0x3cce
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d64:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xd68, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3cce:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3408,
		block_size=24,
		insn_addrs="[3408, 3410, 3412, 3414, 3416, 3418, 3420, 3422, 3424, 3426, 3428]"
	];
	3408 -> { 15566, 3432 };


	3432 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000d68</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000d68: mov    r3,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d68:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d6a: mov    r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d6a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d6c: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d6c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d6e: pop.w  {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d6e:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d72: bx     r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d72:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3432,
		block_size=12,
		insn_addrs="[3432, 3434, 3436, 3438, 3442]"
	];



	3456 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000d80</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000d80: push   {r0,r1,r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d80:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d82: ldr    r4,[0xdb4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d82:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[ram[db4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d84: ldr    r2,[0xdb8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d84:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[db8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d86: movs   r3,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d86:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x40])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d88: subs   r4,r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d88:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r4, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=r4, in=[r0, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d8a: str    r3,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d8a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d8c: mov    r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d8c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d8e: mov    r3,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d8e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d90: ldr    r1,[0xdbc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d90:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[dbc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d92: asrs   r4,r4,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d92:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[94280:4], in=[0x2, 0x1])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=unique[94300:4], in=[r4, unique[94280:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[94400:4], in=[unique[94300:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[94480:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[94500:1], in=[unique[94480:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[94580:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[94600:1], in=[unique[94400:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[94680:1], in=[unique[94580:1], unique[94600:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[94500:1], unique[94680:1]])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=r4, in=[r4, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d94: muls   r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d94:2]])<br/>
			&nbsp;&nbsp;INT_MULT(out=r1, in=[r4, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d96: mov    r6,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d96:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d98: ldr    r0,[0xdc0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d98:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[dc0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000d9a: bl     0x3d26
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d9a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xd9e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3d26:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3456,
		block_size=30,
		insn_addrs="[3456, 3458, 3460, 3462, 3464, 3466, 3468, 3470, 3472, 3474, 3476, 3478, 3480, 3482]"
	];
	3456 -> { 15654, 3486 };


	3486 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000d9e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000d9e: subs   r1,r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[d9e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r1, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000da0: bge    0xdae
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[da0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[dae:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3486,
		block_size=4,
		insn_addrs="[3486, 3488]"
	];
	3486 -> { 3502, 3490 };


	3490 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000da2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000da2: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[da2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000da4: mov    r3,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[da4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000da6: add    sp,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[da6:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000da8: pop.w  {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[da8:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000dac: bx     r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dac:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3490,
		block_size=12,
		insn_addrs="[3490, 3492, 3494, 3496, 3500]"
	];



	3502 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000dae</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000dae: add    sp,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dae:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000db0: pop    {r4,r5,r6,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[db0:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3502,
		block_size=4,
		insn_addrs="[3502, 3504]"
	];



	3524 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000dc4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000dc4: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dc4:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000dc6: mrs    r4,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dc6:4]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[dca:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r4, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000dca: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dca:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000dcc: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dcc:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[dd0:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[dd0:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[dd0:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000dd0: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dd0:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000dd4: ldr    r2,[0xdf4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dd4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[df4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000dd6: ldr    r3,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dd6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000dd8: bic    r1,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dd8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ddc: lsls   r3,r3,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ddc:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000dde: str    r1,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dde:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000de0: bmi    0xde8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[de0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83d80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[de8:4], unique[83d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3524,
		block_size=30,
		insn_addrs="[3524, 3526, 3530, 3532, 3536, 3540, 3542, 3544, 3548, 3550, 3552]"
	];
	3524 -> { 3560, 3554 };


	3554 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000de2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000de2: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[de2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000de4: bl     0x3f7a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[de4:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xde8, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3f7a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3554,
		block_size=6,
		insn_addrs="[3554, 3556]"
	];
	3554 -> { 16250, 3560 };


	3560 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000de8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000de8: msr    basepri,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[de8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[dec:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000dec: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dec:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000df0: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[df0:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3560,
		block_size=10,
		insn_addrs="[3560, 3564, 3568]"
	];



	3576 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000df8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000df8: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[df8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000dfa: push   {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dfa:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000dfc: movs   r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dfc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000dfe: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[dfe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e00: mov    r0,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e00:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e02: bl     0x89c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e02:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xe06, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[89c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3576,
		block_size=14,
		insn_addrs="[3576, 3578, 3580, 3582, 3584, 3586]"
	];
	3576 -> { 2204, 3590 };


	3590 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e06</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e06: ldr    r0,[0xe44]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e06:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[e44:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e08: bl     0x1eb8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e08:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xe0c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1eb8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3590,
		block_size=6,
		insn_addrs="[3590, 3592]"
	];
	3590 -> { 7864, 3596 };


	3596 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e0c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e0c: ldr    r3,[0xe48]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e0c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[e48:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e0e: cmp    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e0e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e10: bne    0xe3e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e10:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[e3e:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3596,
		block_size=6,
		insn_addrs="[3596, 3598, 3600]"
	];
	3596 -> { 3646, 3602 };


	3602 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e12</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e12: bl     0x1ed8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e12:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xe16, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1ed8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3602,
		block_size=4,
		insn_addrs="[3602]"
	];
	3602 -> { 7896, 3606 };


	3606 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e16</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e16: ldr    r6,[r4,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e16:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e18: ldr    r1,[0xe4c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e18:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[e4c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e1a: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e1a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e1c: bl     0x3b10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e1c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xe20, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3b10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3606,
		block_size=10,
		insn_addrs="[3606, 3608, 3610, 3612]"
	];
	3606 -> { 15120, 3616 };


	3616 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e20</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e20: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e20:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e22: blt    0xe3c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e22:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[e3c:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3616,
		block_size=4,
		insn_addrs="[3616, 3618]"
	];
	3616 -> { 3644, 3620 };


	3620 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e24</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e24: movs   r5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e24:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e26: str    r5,[r6,#0x40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e26:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x40])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e28: ldr    r4,[r4,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e28:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e2a: ldr    r1,[0xe4c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e2a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[e4c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e2c: add.w  r0,r4,#0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e2c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1c])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e30: bl     0x3b10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e30:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xe34, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3b10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3620,
		block_size=16,
		insn_addrs="[3620, 3622, 3624, 3626, 3628, 3632]"
	];
	3620 -> { 15120, 3636 };


	3636 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e34</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e34: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e34:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e36: blt    0xe3c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e36:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[e3c:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3636,
		block_size=4,
		insn_addrs="[3636, 3638]"
	];
	3636 -> { 3644, 3640 };


	3640 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e38</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e38: str    r5,[r4,#0x4c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e38:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x4c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e3a: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e3a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3640,
		block_size=4,
		insn_addrs="[3640, 3642]"
	];
	3640 -> { 3644 };


	3644 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e3c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e3c: pop    {r4,r5,r6,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e3c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3644,
		block_size=2,
		insn_addrs="[3644]"
	];



	3646 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e3e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e3e: mvn    r0,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e3e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x4])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e42: b      0xe3c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e42:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[e3c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3646,
		block_size=6,
		insn_addrs="[3646, 3650]"
	];
	3646 -> { 3644 };


	3664 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e50</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e50: push   {r0,r1,r2,r3,r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e50:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e52: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e52:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e54: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e54:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e56: strd   r2,r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e56:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e5a: ldr    r2,[0xe80]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e5a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[e80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e5c: str.w  sp,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e5c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], sp])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e60: mov    r3,sp
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e60:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[sp])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e62: str.w  sp,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e62:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], sp])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e66: bl     0x3d82
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e66:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xe6a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3d82:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3664,
		block_size=26,
		insn_addrs="[3664, 3666, 3668, 3670, 3674, 3676, 3680, 3682, 3686]"
	];
	3664 -> { 15746, 3690 };


	3690 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e6a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e6a: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e6a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e6c: blt    0xe7a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e6c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[e7a:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3690,
		block_size=4,
		insn_addrs="[3690, 3692]"
	];
	3690 -> { 3706, 3694 };


	3694 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e6e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e6e: mov.w  r2,#0x4000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e6e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x4000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e72: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e72:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e74: mov    r0,sp
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e74:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[sp])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e76: bl     0x2b2c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e76:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xe7a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2b2c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3694,
		block_size=12,
		insn_addrs="[3694, 3698, 3700, 3702]"
	];
	3694 -> { 11052, 3706 };


	3706 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e7a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e7a: add    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e7a:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e7c: pop.w  pc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e7c:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[a2380:4], in=[0x600000f0c300, sp])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[unique[a2380:4], 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[unique[a2380:4], 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3706,
		block_size=6,
		insn_addrs="[3706, 3708]"
	];



	3716 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000e84</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000e84: push   {r4,r5}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e84:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e86: ldr    r3,[0xec8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e86:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[ec8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e88: movs   r2,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e88:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0xc])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e8a: mla    r3,r2,r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e8a:4]])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[a1500:4], in=[r2, r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[unique[a1500:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e8e: mov    r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e8e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e90: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e90:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e92: ldrd   r5,r2,[r3,#0x38]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e92:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x38])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e96: str    r0,[r3,#0x38]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e96:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x38])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e98: mrs    r0,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e98:4]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[e9c:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r0, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e9c: movs   r4,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e9c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000e9e: msr    basepri_max,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[e9e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ea2:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ea2:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r4])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ea2:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ea2: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ea2:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ea6: ldr    r4,[r3,#0x40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ea6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x40])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ea8: and    r4,r4,#0xc0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ea8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xc0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r4, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000eac: orr    r4,r4,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[eac:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r4, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000eb0: str    r4,[r3,#0x40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[eb0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x40])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000eb2: msr    basepri,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[eb2:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[eb6:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000eb6: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[eb6:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000eba: cbz    r5,0xec4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[eba:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ec4:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3716,
		block_size=56,
		insn_addrs="[3716, 3718, 3720, 3722, 3726, 3728, 3730, 3734, 3736, 3740, 3742, 3746, 3750, 3752, 3756, 3760, 3762, 3766, 3770]"
	];
	3716 -> { 3780, 3772 };


	3772 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ebc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ebc: mov    r3,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ebc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ebe: ldr    r0,[0xecc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ebe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[ecc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ec0: pop    {r4,r5}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ec0:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ec2: bx     r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ec2:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3772,
		block_size=8,
		insn_addrs="[3772, 3774, 3776, 3778]"
	];



	3780 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ec4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ec4: pop    {r4,r5}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ec4:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ec6: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ec6:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3780,
		block_size=4,
		insn_addrs="[3780, 3782]"
	];



	3792 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ed0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ed0: push   {r4}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ed0:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ed2: mrs    r2,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ed2:4]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ed6:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r2, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ed6: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ed6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ed8: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ed8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[edc:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[edc:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[edc:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000edc: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[edc:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ee0: ldr    r0,[0xf40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ee0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[f40:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ee2: ldr    r1,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ee2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ee4: orr    r4,r1,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ee4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r4, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ee8: str    r4,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ee8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000eea: lsls   r0,r1,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[eea:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r1, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r1, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000eec: bmi    0xefe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[eec:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83d80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[efe:4], unique[83d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3792,
		block_size=30,
		insn_addrs="[3792, 3794, 3798, 3800, 3804, 3808, 3810, 3812, 3816, 3818, 3820]"
	];
	3792 -> { 3838, 3822 };


	3822 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000eee</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000eee: msr    basepri,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[eee:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ef2:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ef2: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ef2:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ef6: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ef6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ef8: pop    {r4}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ef8:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000efa: b.w    0x1efc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[efa:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1efc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3822,
		block_size=16,
		insn_addrs="[3822, 3826, 3830, 3832, 3834]"
	];
	3822 -> { 7932 };


	3838 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000efe</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000efe: mov.w  r1,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[efe:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f02: ldr.w  r0,[r1,#0x40c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f02:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x40c])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f06: ldr.w  r1,[r1,#0x40c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f06:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x40c])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f0a: lsls   r1,r1,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f0a:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r1, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r1, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f0c: bpl    0xeee
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f0c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[eee:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3838,
		block_size=16,
		insn_addrs="[3838, 3842, 3846, 3850, 3852]"
	];
	3838 -> { 3822, 3854 };


	3854 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f0e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f0e: mrs    r0,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f0e:4]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[f12:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r0, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f12: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f12:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[f16:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[f16:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[f16:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f16: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f16:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f1a: ldr    r1,[0xf44]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f1a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[f44:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f1c: ldr    r3,[r1,#0x40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f1c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x40])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f1e: and    r3,r3,#0xc0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f1e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xc0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f22: orr    r3,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f22:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f26: str    r3,[r1,#0x40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f26:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x40])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f28: msr    basepri,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f28:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[f2c:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f2c: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f2c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f30: msr    basepri,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f30:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[f34:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f34: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f34:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f38: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f38:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f3a: pop    {r4}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f3a:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f3c: b.w    0xe84
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f3c:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[e84:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3854,
		block_size=50,
		insn_addrs="[3854, 3858, 3862, 3866, 3868, 3870, 3874, 3878, 3880, 3884, 3888, 3892, 3896, 3898, 3900]"
	];
	3854 -> { 3716 };


	3912 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f48</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f48: cbz    r0,0xf50
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f48:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[f50:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3912,
		block_size=2,
		insn_addrs="[3912]"
	];
	3912 -> { 3920, 3914 };


	3914 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f4a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f4a: cmp    r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f4a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f4c: beq    0xf58
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f4c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[f58:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3914,
		block_size=4,
		insn_addrs="[3914, 3916]"
	];
	3914 -> { 3928, 3918 };


	3918 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f4e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f4e: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f4e:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3918,
		block_size=2,
		insn_addrs="[3918]"
	];



	3920 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f50</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f50: ldr    r3,[0xf60]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f50:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[f60:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f52: ldr    r3,[r3,#0x40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f52:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x40])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f54: lsls   r3,r3,#0x1d
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f54:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1d, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1d, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1d, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x1d])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f56: bne    0xf5c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f56:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[f5c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3920,
		block_size=8,
		insn_addrs="[3920, 3922, 3924, 3926]"
	];
	3920 -> { 3932, 3928 };


	3928 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f58</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f58: b.w    0xe84
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f58:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[e84:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3928,
		block_size=4,
		insn_addrs="[3928]"
	];
	3928 -> { 3716 };


	3932 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f5c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f5c: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f5c:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3932,
		block_size=2,
		insn_addrs="[3932]"
	];



	3940 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f64</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f64: push   {r4,r5,r6,r7,r8,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f64:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f68: ldr    r1,[0x104c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f68:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[104c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f6a: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f6a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f6e: mov    r7,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f6e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f70: movs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f70:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3940,
		block_size=14,
		insn_addrs="[3940, 3944, 3946, 3950, 3952]"
	];
	3940 -> { 3954 };


	3954 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f72</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f72: ldrex  r3,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f72:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98680:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x12e, unique[98680:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[98680:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f76: strex  r0,r2,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f76:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c4200:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c4280:4], in=[r2])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[c4380:1], in=[0x25, unique[c4200:4]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[c4400:1], in=[unique[c4380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[f7a:4], unique[c4400:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c4200:4], unique[c4280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f7a: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f7a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f7c: bne    0xf72
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f7c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[f72:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3954,
		block_size=12,
		insn_addrs="[3954, 3958, 3962, 3964]"
	];
	3954 -> { 3954, 3966 };


	3966 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f7e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f7e: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f7e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f82: cbnz   r3,0xf92
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f82:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[f92:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3966,
		block_size=6,
		insn_addrs="[3966, 3970]"
	];
	3966 -> { 3986, 3972 };


	3972 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f84</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f84: ldr    r1,[0x1050]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f84:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[1050:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f86: ldr    r0,[0x1054]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f86:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[1054:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f88: str    r3,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f88:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f8a: str    r3,[r1,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f8a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f8c: str    r2,[r1,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f8c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f8e: bl     0x3b36
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f8e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xf92, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3b36:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3972,
		block_size=14,
		insn_addrs="[3972, 3974, 3976, 3978, 3980, 3982]"
	];
	3972 -> { 15158, 3986 };


	3986 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f92</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f92: subs   r3,r7,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f92:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r7, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f94: cmp    r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f94:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f96: bhi    0xff0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f96:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ff0:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3986,
		block_size=6,
		insn_addrs="[3986, 3988, 3990]"
	];
	3986 -> { 4080, 3992 };


	3992 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f98</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f98: cmp    r7,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f98:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r7, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000f9a: bne    0xfac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f9a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[fac:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3992,
		block_size=4,
		insn_addrs="[3992, 3994]"
	];
	3992 -> { 4012, 3996 };


	3996 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000f9c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000f9c: mov.w  r3,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[f9c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fa0: ldr.w  r3,[r3,#0x41c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fa0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x41c])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fa4: and    r3,r3,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fa4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x3])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fa8: cmp    r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fa8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000faa: beq    0xff0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[faa:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ff0:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=3996,
		block_size=16,
		insn_addrs="[3996, 4000, 4004, 4008, 4010]"
	];
	3996 -> { 4080, 4012 };


	4012 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000fac</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000fac: bl     0x4112
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fac:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0xfb0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4112:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4012,
		block_size=4,
		insn_addrs="[4012]"
	];
	4012 -> { 16658, 4016 };


	4016 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000fb0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000fb0: mov    r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fb0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fb2: cbnz   r0,0xff4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fb2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ff4:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4016,
		block_size=4,
		insn_addrs="[4016, 4018]"
	];
	4016 -> { 4084, 4020 };


	4020 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000fb4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000fb4: ldr    r3,[0x1058]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fb4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1058:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fb6: ldrb   r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fb6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fb8: cbz    r3,0xff4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fb8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ff4:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4020,
		block_size=6,
		insn_addrs="[4020, 4022, 4024]"
	];
	4020 -> { 4084, 4026 };


	4026 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000fba</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000fba: mov.w  r3,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fba:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fbe: movs   r2,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fbe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fc0: str.w  r2,[r3,#0x308]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fc0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x308])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fc4: mov    r6,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fc4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4026,
		block_size=12,
		insn_addrs="[4026, 4030, 4032, 4036]"
	];
	4026 -> { 4038 };


	4038 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000fc6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000fc6: ldr.w  r8,[0x105c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fc6:4]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[ram[105c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fca: mov.w  r4,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fca:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4038,
		block_size=8,
		insn_addrs="[4038, 4042]"
	];
	4038 -> { 4046 };


	4046 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000fce</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000fce: ldr.w  r2,[r4,#0x418]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fce:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x418])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fd2: ldr.w  r3,[r4,#0x418]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fd2:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x418])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fd6: lsls   r2,r2,#0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fd6:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0xf, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0xf, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0xf, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, 0xf])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fd8: bpl    0x1006
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fd8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1006:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4046,
		block_size=12,
		insn_addrs="[4046, 4050, 4054, 4056]"
	];
	4046 -> { 4102, 4058 };


	4058 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000fda</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000fda: and    r3,r3,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fda:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x3])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fde: cmp    r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fde:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fe0: beq    0xfe6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fe0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[fe6:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4058,
		block_size=8,
		insn_addrs="[4058, 4062, 4064]"
	];
	4058 -> { 4070, 4066 };


	4066 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000fe2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000fe2: cmp    r7,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fe2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r7, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fe4: bne    0x1006
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fe4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1006:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4066,
		block_size=4,
		insn_addrs="[4066, 4068]"
	];
	4066 -> { 4102, 4070 };


	4070 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000fe6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000fe6: cbz    r5,0x103e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fe6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[103e:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4070,
		block_size=2,
		insn_addrs="[4070]"
	];
	4070 -> { 4158, 4072 };


	4072 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000fe8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000fe8: msr    basepri,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fe8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[fec:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000fec: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[fec:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4072,
		block_size=8,
		insn_addrs="[4072, 4076]"
	];
	4072 -> { 4080 };


	4080 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ff0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ff0: pop.w  {r4,r5,r6,r7,r8,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ff0:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4080,
		block_size=4,
		insn_addrs="[4080]"
	];



	4084 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00000ff4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00000ff4: mrs    r6,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ff4:4]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ff8:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r6, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ff8: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ff8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ffa: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ffa:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ffe:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ffe:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[ffe:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00000ffe: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[ffe:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001002: movs   r5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1002:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001004: b      0xfc6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1004:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[fc6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4084,
		block_size=18,
		insn_addrs="[4084, 4088, 4090, 4094, 4098, 4100]"
	];
	4084 -> { 4038 };


	4102 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001006</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001006: cbz    r5,0x1034
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1006:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1034:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4102,
		block_size=2,
		insn_addrs="[4102]"
	];
	4102 -> { 4148, 4104 };


	4104 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001008</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001008: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1008:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000100a: bl     0x3c74
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[100a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x100e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3c74:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4104,
		block_size=6,
		insn_addrs="[4104, 4106]"
	];
	4104 -> { 15476, 4110 };


	4110 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000100e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000100e: ldr.w  r3,[r4,#0x518]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[100e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x518])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001012: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1012:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001014: bne    0xfce
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1014:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[fce:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4110,
		block_size=8,
		insn_addrs="[4110, 4114, 4116]"
	];
	4110 -> { 4046, 4118 };


	4118 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001016</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001016: ldr.w  r2,[r4,#0x104]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1016:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x104])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000101a: cmp    r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[101a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000101c: beq    0xfce
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[101c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[fce:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4118,
		block_size=8,
		insn_addrs="[4118, 4122, 4124]"
	];
	4118 -> { 4046, 4126 };


	4126 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000101e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000101e: str.w  r3,[r4,#0x104]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[101e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x104])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001022: ldr.w  r3,[r4,#0x104]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1022:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x104])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001026: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1026:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001028: str.w  r3,[r4,#0x518]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1028:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x518])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000102c: str.w  r3,[r8,#0x180]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[102c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r8, 0x180])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001030: str    r3,[r4,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1030:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001032: b      0xfce
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1032:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[fce:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4126,
		block_size=22,
		insn_addrs="[4126, 4130, 4134, 4136, 4140, 4144, 4146]"
	];
	4126 -> { 4046 };


	4148 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001034</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001034: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1034:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001036: movs   r0,#0x21
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1036:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x21])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001038: bl     0x3090
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1038:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x103c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3090:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4148,
		block_size=8,
		insn_addrs="[4148, 4150, 4152]"
	];
	4148 -> { 12432, 4156 };


	4156 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000103c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000103c: b      0x100e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[103c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[100e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4156,
		block_size=2,
		insn_addrs="[4156]"
	];
	4156 -> { 4110 };


	4158 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000103e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000103e: mov.w  r3,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[103e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001042: movs   r2,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1042:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001044: str.w  r2,[r3,#0x304]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1044:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x304])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001048: b      0xff0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1048:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[ff0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4158,
		block_size=12,
		insn_addrs="[4158, 4162, 4164, 4168]"
	];
	4158 -> { 4080 };


	4192 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001060</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001060: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1060:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001062: ldr    r0,[0x1080]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1062:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[1080:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001064: bl     0x4096
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1064:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1068, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4096:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4192,
		block_size=8,
		insn_addrs="[4192, 4194, 4196]"
	];
	4192 -> { 16534, 4200 };


	4200 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001068</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001068: cbz    r0,0x107a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1068:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[107a:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4200,
		block_size=2,
		insn_addrs="[4200]"
	];
	4200 -> { 4218, 4202 };


	4202 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000106a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000106a: ldr    r0,[0x1084]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[106a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[1084:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000106c: bl     0xcc0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[106c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1070, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[cc0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4202,
		block_size=6,
		insn_addrs="[4202, 4204]"
	];
	4202 -> { 3264, 4208 };


	4208 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001070</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001070: ldr    r0,[0x1084]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1070:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[1084:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001072: bl     0x180
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1072:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1076, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[180:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4208,
		block_size=6,
		insn_addrs="[4208, 4210]"
	];
	4208 -> { 384, 4214 };


	4214 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001076</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001076: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1076:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4214,
		block_size=2,
		insn_addrs="[4214]"
	];
	4214 -> { 4216 };


	4216 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001078</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001078: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1078:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4216,
		block_size=2,
		insn_addrs="[4216]"
	];



	4218 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000107a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000107a: mvn    r0,#0x12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[107a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x12])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000107e: b      0x1078
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[107e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1078:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4218,
		block_size=6,
		insn_addrs="[4218, 4222]"
	];
	4218 -> { 4216 };


	4232 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001088</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001088: cmp    r0,#0xa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1088:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0xa, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0xa])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0xa])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000108a: push   {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[108a:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000108c: ldr    r5,[0x10ac]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[108c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[ram[10ac:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000108e: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[108e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001090: bne    0x109c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1090:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[109c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4232,
		block_size=10,
		insn_addrs="[4232, 4234, 4236, 4238, 4240]"
	];
	4232 -> { 4252, 4242 };


	4242 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001092</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001092: ldr    r3,[r5,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1092:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001094: movs   r1,#0xd
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1094:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0xd])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001096: ldr    r3,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1096:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001098: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1098:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000109a: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[109a:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x109c, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4242,
		block_size=10,
		insn_addrs="[4242, 4244, 4246, 4248, 4250]"
	];
	4242 -> { 5744, 4252 };


	4252 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000109c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000109c: ldr    r3,[r5,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[109c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000109e: ldr    r0,[0x10ac]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[109e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[10ac:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010a0: ldr    r3,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10a0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010a2: uxtb   r1, r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10a2:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010a4: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10a4:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x10a6, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4252,
		block_size=10,
		insn_addrs="[4252, 4254, 4256, 4258, 4260]"
	];
	4252 -> { 5744, 4262 };


	4262 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000010a6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000010a6: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10a6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010a8: pop    {r3,r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10a8:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4262,
		block_size=4,
		insn_addrs="[4262, 4264]"
	];



	4272 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000010b0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000010b0: push   {r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10b0:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010b2: ldr    r0,[r0,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10b2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010b4: ldrb   r5,[r0,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10b4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010b6: and    r4,r1,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10b6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r4, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010ba: orr.w  r4,r4,r5, lsl #0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10ba:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x5])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r5, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r5, 0x5])<br/>
			&nbsp;&nbsp;INT_OR(out=r4, in=[r4, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010be: ldr    r5,[r0,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10be:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010c0: sub    sp,#0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10c0:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x1c])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010c2: cmp    r5,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10c2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010c4: beq    0x1190
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10c4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1190:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4272,
		block_size=22,
		insn_addrs="[4272, 4274, 4276, 4278, 4282, 4286, 4288, 4290, 4292]"
	];
	4272 -> { 4496, 4294 };


	4294 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000010c6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000010c6: cmp.w  r2,#0x200000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10c6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x200000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010ca: add.w  r5,r0,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10ca:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010ce: bne    0x10de
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10ce:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[10de:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4294,
		block_size=10,
		insn_addrs="[4294, 4298, 4302]"
	];
	4294 -> { 4318, 4304 };


	4304 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000010d0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000010d0: mov    r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10d0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010d2: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10d2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010d4: bl     0x407a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10d4:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x10d8, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[407a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4304,
		block_size=8,
		insn_addrs="[4304, 4306, 4308]"
	];
	4304 -> { 16506, 4312 };


	4312 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000010d8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000010d8: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10d8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4312,
		block_size=2,
		insn_addrs="[4312]"
	];
	4312 -> { 4314 };


	4314 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000010da</b></td></tr>
			<tr><td align="left" balign="left">
			0x000010da: add    sp,#0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10da:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x1c])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010dc: pop    {r4,r5,r6,r7,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10dc:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4314,
		block_size=4,
		insn_addrs="[4314, 4316]"
	];



	4318 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000010de</b></td></tr>
			<tr><td align="left" balign="left">
			0x000010de: add    r6,sp,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10de:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010e0: movs   r7,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10e0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010e2: cmp.w  r2,#0x400000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10e2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x400000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010e6: str    r7,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10e6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010e8: str    r7,[r6,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10e8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010ea: bne    0x1160
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10ea:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1160:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4318,
		block_size=14,
		insn_addrs="[4318, 4320, 4322, 4326, 4328, 4330]"
	];
	4318 -> { 4448, 4332 };


	4332 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000010ec</b></td></tr>
			<tr><td align="left" balign="left">
			0x000010ec: cmp.w  r3,#0x2000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10ec:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x2000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87900:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010f0: ite    ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10f0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010f2: movs   r3,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10f2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[10f4:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010f4: movs   r3,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10f4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[10f6:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4332,
		block_size=10,
		insn_addrs="[4332, 4336, 4338, 4340]"
	];
	4332 -> { 4342 };


	4342 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000010f6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000010f6: strb.w r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10f6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010fa: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10fa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000010fc: strd   r6,r3,[sp,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[10fc:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r6])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001100: str    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1100:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001102: ldr    r3,[r0,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1102:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001104: lsr.w  r1,r3,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1104:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9d300:4], in=[r1, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9d300:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9d300:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9d300:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r3, unique[9d300:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001108: ands   r1,r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1108:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000110c: bne    0x1144
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[110c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1144:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4342,
		block_size=24,
		insn_addrs="[4342, 4346, 4348, 4352, 4354, 4356, 4360, 4364]"
	];
	4342 -> { 4420, 4366 };


	4366 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000110e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000110e: cmp.w  r2,#0x1400000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[110e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x1400000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87900:4], r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r2, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001112: bne    0x1144
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1112:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1144:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4366,
		block_size=6,
		insn_addrs="[4366, 4370]"
	];
	4366 -> { 4420, 4372 };


	4372 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001114</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001114: and    r3,r4,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1114:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001118: lsrs   r2,r4,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1118:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r4, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r2, in=[r4, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000111a: add.w  r3,r3,#0x1c0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[111a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x1c0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000111e: beq    0x1176
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[111e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1176:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4372,
		block_size=12,
		insn_addrs="[4372, 4376, 4378, 4382]"
	];
	4372 -> { 4470, 4384 };


	4384 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001120</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001120: cmp    r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1120:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001122: bne    0x119c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1122:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[119c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4384,
		block_size=4,
		insn_addrs="[4384, 4386]"
	];
	4384 -> { 4508, 4388 };


	4388 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001124</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001124: ldr    r2,[0x11a4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1124:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[11a4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4388,
		block_size=2,
		insn_addrs="[4388]"
	];
	4388 -> { 4390 };


	4390 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001126</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001126: ldr.w  r3,[r2,r3,lsl #0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1126:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[98a00:4], in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98b00:4], in=[r2, unique[98a00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[98b00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000112a: lsls   r3,r3,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[112a:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000112c: bmi    0x1144
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[112c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83d80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1144:4], unique[83d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4390,
		block_size=8,
		insn_addrs="[4390, 4394, 4396]"
	];
	4390 -> { 4420, 4398 };


	4398 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000112e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000112e: add.w  r6,sp,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[112e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x3])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r6, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001132: mov    r2,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1132:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001134: mov    r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1134:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001136: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1136:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001138: bl     0x24b8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1138:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x113c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[24b8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4398,
		block_size=14,
		insn_addrs="[4398, 4402, 4404, 4406, 4408]"
	];
	4398 -> { 9400, 4412 };


	4412 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000113c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000113c: ldr    r3,[0x11a8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[113c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[11a8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000113e: cmp    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[113e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001140: beq    0x117c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1140:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[117c:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4412,
		block_size=6,
		insn_addrs="[4412, 4414, 4416]"
	];
	4412 -> { 4476, 4418 };


	4418 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001142</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001142: str    r6,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1142:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r6])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4418,
		block_size=2,
		insn_addrs="[4418]"
	];
	4418 -> { 4420 };


	4420 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001144</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001144: add    r2,sp,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1144:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001146: mov    r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1146:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001148: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1148:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000114a: bl     0x223c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[114a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x114e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[223c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4420,
		block_size=10,
		insn_addrs="[4420, 4422, 4424, 4426]"
	];
	4420 -> { 8764, 4430 };


	4430 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000114e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000114e: ldr    r3,[0x11ac]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[114e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[11ac:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001150: cmp    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1150:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001152: bne    0x1196
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1152:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1196:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4430,
		block_size=6,
		insn_addrs="[4430, 4432, 4434]"
	];
	4430 -> { 4502, 4436 };


	4436 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001154</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001154: movs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1154:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001156: mov    r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1156:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001158: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1158:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000115a: bl     0x2580
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[115a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x115e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2580:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4436,
		block_size=10,
		insn_addrs="[4436, 4438, 4440, 4442]"
	];
	4436 -> { 9600, 4446 };


	4446 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000115e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000115e: b      0x10d8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[115e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[10d8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4446,
		block_size=2,
		insn_addrs="[4446]"
	];
	4446 -> { 4312 };


	4448 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001160</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001160: cmp.w  r3,#0x6000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1160:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x6000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87900:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001164: beq    0x1172
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1164:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1172:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4448,
		block_size=6,
		insn_addrs="[4448, 4452]"
	];
	4448 -> { 4466, 4454 };


	4454 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001166</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001166: cmp.w  r3,#0x2000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1166:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x2000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87900:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000116a: ite    ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[116a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000116c: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[116c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[116e:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000116e: movs   r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[116e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1170:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001170: b      0x10f6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1170:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[10f6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4454,
		block_size=12,
		insn_addrs="[4454, 4458, 4460, 4462, 4464]"
	];
	4454 -> { 4342 };


	4466 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001172</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001172: movs   r3,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1172:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001174: b      0x10f6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1174:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[10f6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4466,
		block_size=4,
		insn_addrs="[4466, 4468]"
	];
	4466 -> { 4342 };


	4470 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001176</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001176: mov.w  r2,#0x50000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1176:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x50000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000117a: b      0x1126
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[117a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1126:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4470,
		block_size=6,
		insn_addrs="[4470, 4474]"
	];
	4470 -> { 4390 };


	4476 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000117c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000117c: mov    r1,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[117c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000117e: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[117e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001180: bl     0x2574
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1180:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1184, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2574:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4476,
		block_size=8,
		insn_addrs="[4476, 4478, 4480]"
	];
	4476 -> { 9588, 4484 };


	4484 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001184</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001184: ldr    r3,[0x11ac]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1184:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[11ac:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001186: cmp    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1186:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001188: beq    0x1142
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1188:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1142:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4484,
		block_size=6,
		insn_addrs="[4484, 4486, 4488]"
	];
	4484 -> { 4418, 4490 };


	4490 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000118a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000118a: mvn    r0,#0xb
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[118a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xb])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000118e: b      0x10da
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[118e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[10da:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4490,
		block_size=6,
		insn_addrs="[4490, 4494]"
	];
	4490 -> { 4314 };


	4496 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001190</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001190: mvn    r0,#0x85
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1190:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x85])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001194: b      0x10da
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1194:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[10da:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4496,
		block_size=6,
		insn_addrs="[4496, 4500]"
	];
	4496 -> { 4314 };


	4502 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001196</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001196: mvn    r0,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1196:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x15])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000119a: b      0x10da
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[119a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[10da:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4502,
		block_size=6,
		insn_addrs="[4502, 4506]"
	];
	4502 -> { 4314 };


	4508 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000119c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000119c: ldr.w  r3,[r1,r3,lsl #0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[119c:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[98a00:4], in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98b00:4], in=[r1, unique[98a00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[98b00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011a0: udf    #0xff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11a0:2]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[95980:4], in=[0x11, 0xff, 0x11a0])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[unique[95980:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4508,
		block_size=6,
		insn_addrs="[4508, 4512]"
	];



	4528 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000011b0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000011b0: push   {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11b0:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011b2: ldr    r5,[r0,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11b2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011b4: ldr    r3,[r5,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11b4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011b6: cbz    r3,0x11e6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11b6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[11e6:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4528,
		block_size=8,
		insn_addrs="[4528, 4530, 4532, 4534]"
	];
	4528 -> { 4582, 4536 };


	4536 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000011b8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000011b8: adds   r5,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11b8:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, 0x10])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, 0x10])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, 0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011ba: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11ba:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011bc: bl     0x2554
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11bc:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x11c0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2554:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4536,
		block_size=8,
		insn_addrs="[4536, 4538, 4540]"
	];
	4536 -> { 9556, 4544 };


	4544 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000011c0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000011c0: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11c0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011c2: cbnz   r0,0x11e6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11c2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[11e6:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4544,
		block_size=4,
		insn_addrs="[4544, 4546]"
	];
	4544 -> { 4582, 4548 };


	4548 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000011c4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000011c4: mov    r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11c4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011c6: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11c6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011c8: bl     0x24ec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11c8:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x11cc, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[24ec:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4548,
		block_size=8,
		insn_addrs="[4548, 4550, 4552]"
	];
	4548 -> { 9452, 4556 };


	4556 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000011cc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000011cc: ldr    r3,[0x11f0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11cc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[11f0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011ce: cmp    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11ce:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011d0: bne    0x11ea
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11d0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[11ea:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4556,
		block_size=6,
		insn_addrs="[4556, 4558, 4560]"
	];
	4556 -> { 4586, 4562 };


	4562 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000011d2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000011d2: ldr    r1,[0x11f4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11d2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[11f4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011d4: mov    r2,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11d4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011d6: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11d6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011d8: bl     0x24ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11d8:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x11dc, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[24ac:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4562,
		block_size=10,
		insn_addrs="[4562, 4564, 4566, 4568]"
	];
	4562 -> { 9388, 4572 };


	4572 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000011dc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000011dc: mov    r2,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11dc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011de: movs   r1,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11de:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011e0: movs   r0,#0x6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11e0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011e2: bl     0x89c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11e2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x11e6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[89c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4572,
		block_size=10,
		insn_addrs="[4572, 4574, 4576, 4578]"
	];
	4572 -> { 2204, 4582 };


	4582 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000011e6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000011e6: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11e6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4582,
		block_size=2,
		insn_addrs="[4582]"
	];
	4582 -> { 4584 };


	4584 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000011e8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000011e8: pop    {r3,r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11e8:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4584,
		block_size=2,
		insn_addrs="[4584]"
	];



	4586 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000011ea</b></td></tr>
			<tr><td align="left" balign="left">
			0x000011ea: mvn    r0,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11ea:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x4])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011ee: b      0x11e8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11ee:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[11e8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4586,
		block_size=6,
		insn_addrs="[4586, 4590]"
	];
	4586 -> { 4584 };


	4600 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000011f8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000011f8: lsrs   r2,r0,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11f8:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r0, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r2, in=[r0, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011fa: push   {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11fa:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011fc: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11fc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000011fe: beq    0x1206
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[11fe:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1206:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4600,
		block_size=8,
		insn_addrs="[4600, 4602, 4604, 4606]"
	];
	4600 -> { 4614, 4608 };


	4608 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001200</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001200: cmp    r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1200:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001202: beq    0x1234
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1202:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1234:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4608,
		block_size=4,
		insn_addrs="[4608, 4610]"
	];
	4608 -> { 4660, 4612 };


	4612 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001204</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001204: pop    {r4,r5,r6,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1204:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4612,
		block_size=2,
		insn_addrs="[4612]"
	];



	4614 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001206</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001206: ldr    r6,[0x123c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1206:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[ram[123c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4614,
		block_size=2,
		insn_addrs="[4614]"
	];
	4614 -> { 4616 };


	4616 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001208</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001208: ldr    r2,[r6,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1208:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000120a: ldr    r1,[r2,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[120a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000120c: cmp    r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[120c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000120e: beq    0x1204
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[120e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1204:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4616,
		block_size=8,
		insn_addrs="[4616, 4618, 4620, 4622]"
	];
	4616 -> { 4612, 4624 };


	4624 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001210</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001210: and    r3,r3,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1210:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001214: movs   r5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1214:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001216: ldr    r4,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1216:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001218: lsls   r5,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1218:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c680:4], in=[r3, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9c680:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r5, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r5, in=[r5, unique[9c680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4624,
		block_size=10,
		insn_addrs="[4624, 4628, 4630, 4632]"
	];
	4624 -> { 4634 };


	4634 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000121a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000121a: cmp    r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[121a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000121c: beq    0x1204
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[121c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1204:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4634,
		block_size=4,
		insn_addrs="[4634, 4636]"
	];
	4634 -> { 4612, 4638 };


	4638 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000121e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000121e: ldr    r2,[r1,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[121e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001220: ands   r2,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1220:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001222: beq    0x122a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1222:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[122a:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4638,
		block_size=6,
		insn_addrs="[4638, 4640, 4642]"
	];
	4638 -> { 4650, 4644 };


	4644 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001224</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001224: ldr    r3,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1224:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001226: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1226:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001228: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1228:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x122a, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4644,
		block_size=6,
		insn_addrs="[4644, 4646, 4648]"
	];
	4644 -> { 4650 };


	4650 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000122a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000122a: cbz    r4,0x1238
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[122a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1238:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4650,
		block_size=2,
		insn_addrs="[4650]"
	];
	4650 -> { 4664, 4652 };


	4652 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000122c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000122c: ldr    r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[122c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4652,
		block_size=2,
		insn_addrs="[4652]"
	];
	4652 -> { 4654 };


	4654 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000122e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000122e: mov    r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[122e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001230: mov    r4,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1230:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001232: b      0x121a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1232:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[121a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4654,
		block_size=6,
		insn_addrs="[4654, 4656, 4658]"
	];
	4654 -> { 4634 };


	4660 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001234</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001234: ldr    r6,[0x1240]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1234:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[ram[1240:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001236: b      0x1208
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1236:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1208:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4660,
		block_size=4,
		insn_addrs="[4660, 4662]"
	];
	4660 -> { 4616 };


	4664 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001238</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001238: mov    r3,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1238:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000123a: b      0x122e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[123a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[122e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4664,
		block_size=4,
		insn_addrs="[4664, 4666]"
	];
	4664 -> { 4654 };


	4676 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001244</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001244: push   {r4,r5,r6,r7,r8,r9,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1244:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r9])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001248: ldr    r6,[r0,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1248:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000124a: movw   r5,#0x306
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[124a:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[0x306])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000124e: lsls   r0,r2,#0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[124e:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1b, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r2, 0x1b])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001250: ldrb   r3,[r6,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1250:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r6, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001252: sub    sp,#0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1252:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x1c])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001254: and.w  r5,r2,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1254:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r2, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001258: ite    pl
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1258:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85f80:1], in=[NG, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000125a: ubfx   r0,r2,#0x5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[125a:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[780:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[780:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[125e:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x5])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r2, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r0, in=[r0, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000125e: movs   r0,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[125e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1260:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001260: and    r7,r1,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1260:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r7, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001264: cmp.w  r5,#0x106
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1264:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x106])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001268: mov    r4,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1268:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000126a: orr.w  r7,r7,r3, lsl #0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[126a:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x5])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r3, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r3, 0x5])<br/>
			&nbsp;&nbsp;INT_OR(out=r7, in=[r7, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000126e: strb.w r0,[sp,#0x3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[126e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x3])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001272: beq    0x12fe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1272:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[12fe:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4676,
		block_size=48,
		insn_addrs="[4676, 4680, 4682, 4686, 4688, 4690, 4692, 4696, 4698, 4702, 4704, 4708, 4712, 4714, 4718, 4722]"
	];
	4676 -> { 4862, 4724 };


	4724 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001274</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001274: bhi    0x1296
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1274:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1296:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4724,
		block_size=2,
		insn_addrs="[4724]"
	];
	4724 -> { 4758, 4726 };


	4726 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001276</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001276: cmp    r5,#0x6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1276:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x6, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x6])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r5, 0x6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001278: beq    0x12ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1278:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[12ac:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4726,
		block_size=4,
		insn_addrs="[4726, 4728]"
	];
	4726 -> { 4780, 4730 };


	4730 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000127a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000127a: bhi    0x128c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[127a:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[128c:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4730,
		block_size=2,
		insn_addrs="[4730]"
	];
	4730 -> { 4748, 4732 };


	4732 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000127c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000127c: cbz    r5,0x12ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[127c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[12ac:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4732,
		block_size=2,
		insn_addrs="[4732]"
	];
	4732 -> { 4780, 4734 };


	4734 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000127e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000127e: cmp    r5,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[127e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x2, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r5, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001280: beq    0x1302
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1280:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1302:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4734,
		block_size=4,
		insn_addrs="[4734, 4736]"
	];
	4734 -> { 4866, 4738 };


	4738 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001282</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001282: mvn    r0,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1282:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x15])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4738,
		block_size=4,
		insn_addrs="[4738]"
	];
	4738 -> { 4742 };


	4742 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001286</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001286: add    sp,#0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1286:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x1c])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001288: pop.w  {r4,r5,r6,r7,r8,r9,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1288:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r9, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4742,
		block_size=6,
		insn_addrs="[4742, 4744]"
	];



	4748 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000128c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000128c: cmp.w  r5,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[128c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001290: bne    0x1282
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1290:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1282:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4748,
		block_size=6,
		insn_addrs="[4748, 4752]"
	];
	4748 -> { 4738, 4754 };


	4754 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001292</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001292: movs   r5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1292:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001294: b      0x12ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1294:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[12ac:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4754,
		block_size=4,
		insn_addrs="[4754, 4756]"
	];
	4754 -> { 4780 };


	4758 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001296</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001296: movw   r2,#0x202
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1296:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[0x202])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000129a: cmp    r5,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[129a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r5, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000129c: beq    0x1306
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[129c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1306:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4758,
		block_size=8,
		insn_addrs="[4758, 4762, 4764]"
	];
	4758 -> { 4870, 4766 };


	4766 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000129e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000129e: cmp.w  r5,#0x300
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[129e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x300])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012a2: beq    0x130a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12a2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[130a:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4766,
		block_size=6,
		insn_addrs="[4766, 4770]"
	];
	4766 -> { 4874, 4772 };


	4772 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000012a4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000012a4: cmp.w  r5,#0x200
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12a4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x200])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012a8: bne    0x1282
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12a8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1282:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4772,
		block_size=6,
		insn_addrs="[4772, 4776]"
	];
	4772 -> { 4738, 4778 };


	4778 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000012aa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000012aa: movs   r5,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12aa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4778,
		block_size=2,
		insn_addrs="[4778]"
	];
	4778 -> { 4780 };


	4780 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000012ac</b></td></tr>
			<tr><td align="left" balign="left">
			0x000012ac: lsls   r2,r4,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12ac:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0xc, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r4, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0xc, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0xc, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r4, 0xc])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012ae: bpl    0x130e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12ae:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[130e:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4780,
		block_size=4,
		insn_addrs="[4780, 4782]"
	];
	4780 -> { 4878, 4784 };


	4784 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000012b0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000012b0: ldr    r2,[r6,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12b0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012b2: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12b2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012b4: lsls   r3,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12b4:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c680:4], in=[r1, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9c680:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[9c680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012b6: str.w  r3,[r2,#0x508]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12b6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x508])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4784,
		block_size=10,
		insn_addrs="[4784, 4786, 4788, 4790]"
	];
	4784 -> { 4794 };


	4794 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000012ba</b></td></tr>
			<tr><td align="left" balign="left">
			0x000012ba: ldr    r2,[r6,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12ba:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012bc: cbnz   r2,0x1324
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12bc:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1324:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4794,
		block_size=4,
		insn_addrs="[4794, 4796]"
	];
	4794 -> { 4900, 4798 };


	4798 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000012be</b></td></tr>
			<tr><td align="left" balign="left">
			0x000012be: and    r3,r7,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12be:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r7, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012c2: lsrs   r7,r7,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12c2:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r7, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r7, in=[r7, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012c4: beq    0x131e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12c4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[131e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4798,
		block_size=8,
		insn_addrs="[4798, 4802, 4804]"
	];
	4798 -> { 4894, 4806 };


	4806 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000012c6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000012c6: cmp    r7,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12c6:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r7, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012c8: bne    0x13be
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12c8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[13be:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4806,
		block_size=4,
		insn_addrs="[4806, 4808]"
	];
	4806 -> { 5054, 4810 };


	4810 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000012ca</b></td></tr>
			<tr><td align="left" balign="left">
			0x000012ca: ldr    r2,[0x13c8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12ca:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[13c8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4810,
		block_size=2,
		insn_addrs="[4810]"
	];
	4810 -> { 4812 };


	4812 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000012cc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000012cc: add.w  r2,r2,r3, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12cc:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r3, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r3, 0x2])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012d0: eor    r3,r4,#0x10000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12d0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x10000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_XOR(out=r3, in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012d4: ldr.w  r1,[r2,#0x700]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12d4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x700])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012d8: ubfx   r3,r3,#0x10,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12d8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012dc: ubfx   r4,r4,#0x11,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12dc:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x11])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r4, in=[r4, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r4, in=[r4, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012e0: orr.w  r4,r4,r3, lsl #0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12e0:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r3, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=r4, in=[r4, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012e4: bic    r1,r1,#0x708
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12e4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x708])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r1, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012e8: orr.w  r4,r4,r0, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12e8:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r0, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r0, 0x2])<br/>
			&nbsp;&nbsp;INT_OR(out=r4, in=[r4, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012ec: bic    r1,r1,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12ec:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r1, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012f0: orr.w  r3,r4,r5, lsl #0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12f0:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x8])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r5, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r5, 0x8])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r4, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012f4: orrs   r3,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12f4:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012f6: str.w  r3,[r2,#0x700]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12f6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x700])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4812,
		block_size=46,
		insn_addrs="[4812, 4816, 4820, 4824, 4828, 4832, 4836, 4840, 4844, 4848, 4852, 4854]"
	];
	4812 -> { 4858 };


	4858 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000012fa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000012fa: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12fa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000012fc: b      0x1286
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12fc:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1286:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4858,
		block_size=4,
		insn_addrs="[4858, 4860]"
	];
	4858 -> { 4742 };


	4862 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000012fe</b></td></tr>
			<tr><td align="left" balign="left">
			0x000012fe: movs   r5,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[12fe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001300: b      0x12ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1300:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[12ac:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4862,
		block_size=4,
		insn_addrs="[4862, 4864]"
	];
	4862 -> { 4780 };


	4866 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001302</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001302: movs   r5,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1302:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001304: b      0x12ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1304:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[12ac:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4866,
		block_size=4,
		insn_addrs="[4866, 4868]"
	];
	4866 -> { 4780 };


	4870 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001306</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001306: movs   r5,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1306:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001308: b      0x12ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1308:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[12ac:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4870,
		block_size=4,
		insn_addrs="[4870, 4872]"
	];
	4870 -> { 4780 };


	4874 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000130a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000130a: movs   r5,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[130a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000130c: b      0x12ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[130c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[12ac:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4874,
		block_size=4,
		insn_addrs="[4874, 4876]"
	];
	4874 -> { 4780 };


	4878 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000130e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000130e: lsls   r3,r4,#0xd
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[130e:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0xd, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r4, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0xd, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0xd, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r4, 0xd])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001310: itttt  mi
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1310:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85e80:1], in=[NG, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001312: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1312:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1314:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001314: ldr    r2,[r6,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1314:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1316:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001316: lsls   r3,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1316:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1318:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c680:4], in=[r1, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9c680:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[9c680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001318: str.w  r3,[r2,#0x50c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1318:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x50c])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[131c:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000131c: b      0x12ba
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[131c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[12ba:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4878,
		block_size=16,
		insn_addrs="[4878, 4880, 4882, 4884, 4886, 4888, 4892]"
	];
	4878 -> { 4794 };


	4894 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000131e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000131e: mov.w  r2,#0x50000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[131e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x50000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001322: b      0x12cc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1322:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[12cc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4894,
		block_size=6,
		insn_addrs="[4894, 4898]"
	];
	4894 -> { 4812 };


	4900 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001324</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001324: adds   r6,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1324:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r6, 0x10])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r6, 0x10])<br/>
			&nbsp;&nbsp;INT_ADD(out=r6, in=[r6, 0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001326: add.w  r2,sp,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1326:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000132a: mov    r1,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[132a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000132c: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[132c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000132e: bl     0x24b8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[132e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1332, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[24b8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4900,
		block_size=14,
		insn_addrs="[4900, 4902, 4906, 4908, 4910]"
	];
	4900 -> { 9400, 4914 };


	4914 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001332</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001332: tst    r4,#0x30000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1332:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x30000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001336: mov    r8,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1336:2]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001338: bne    0x1354
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1338:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1354:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4914,
		block_size=8,
		insn_addrs="[4914, 4918, 4920]"
	];
	4914 -> { 4948, 4922 };


	4922 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000133a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000133a: mov    r1,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[133a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000133c: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[133c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000133e: bl     0x4076
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[133e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1342, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4076:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4922,
		block_size=8,
		insn_addrs="[4922, 4924, 4926]"
	];
	4922 -> { 16502, 4930 };


	4930 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001342</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001342: ldr    r3,[0x13cc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1342:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[13cc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001344: cmp    r8,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1344:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r8])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r8, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r8, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001346: bne    0x12fa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1346:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[12fa:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4930,
		block_size=6,
		insn_addrs="[4930, 4932, 4934]"
	];
	4930 -> { 4858, 4936 };


	4936 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001348</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001348: ldrb.w r1,[sp,#0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1348:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x2])<br/>
			&nbsp;&nbsp;LOAD(out=unique[98e80:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[98e80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000134c: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[134c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000134e: bl     0x2568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[134e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1352, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2568:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4936,
		block_size=10,
		insn_addrs="[4936, 4940, 4942]"
	];
	4936 -> { 9576, 4946 };


	4946 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001352</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001352: b      0x12fa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1352:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[12fa:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4946,
		block_size=2,
		insn_addrs="[4946]"
	];
	4946 -> { 4858 };


	4948 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001354</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001354: add    r3,sp,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1354:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001356: mov.w  r9,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1356:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r9, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r9, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r9, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000135a: add    r2,sp,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[135a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000135c: mov    r1,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[135c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000135e: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[135e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001360: strd   r3,r9,[sp,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1360:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r9])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001364: strd   r9,r9,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1364:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r9])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r9])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001368: str.w  r9,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1368:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r9])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000136c: bl     0x223c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[136c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1370, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[223c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4948,
		block_size=28,
		insn_addrs="[4948, 4950, 4954, 4956, 4958, 4960, 4964, 4968, 4972]"
	];
	4948 -> { 8764, 4976 };


	4976 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001370</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001370: ldr    r3,[0x13cc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1370:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[13cc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001372: cmp    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1372:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001374: bne    0x1282
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1374:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1282:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4976,
		block_size=6,
		insn_addrs="[4976, 4978, 4980]"
	];
	4976 -> { 4738, 4982 };


	4982 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001376</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001376: ands   r3,r4,#0x20000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1376:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x20000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000137a: beq    0x13a8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[137a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[13a8:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4982,
		block_size=6,
		insn_addrs="[4982, 4986]"
	];
	4982 -> { 5032, 4988 };


	4988 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000137c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000137c: ldrb.w r3,[sp,#0x3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[137c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x3])<br/>
			&nbsp;&nbsp;LOAD(out=unique[98e80:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[98e80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001380: strb.w r3,[sp,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1380:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0xe])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001384: eor    r4,r4,#0x10000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1384:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x10000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_XOR(out=r4, in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001388: ubfx   r4,r4,#0x10,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1388:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r4, in=[r4, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r4, in=[r4, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000138c: mov    r3,r9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[138c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r9])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000138e: add    r2,sp,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[138e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001390: mov    r1,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1390:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001392: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1392:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001394: strb.w r5,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1394:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001398: strb.w r4,[sp,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1398:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000139c: bl     0x23b0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[139c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x13a0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[23b0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=4988,
		block_size=36,
		insn_addrs="[4988, 4992, 4996, 5000, 5004, 5006, 5008, 5010, 5012, 5016, 5020]"
	];
	4988 -> { 9136, 5024 };


	5024 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000013a0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000013a0: ldr    r3,[0x13cc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13a0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[13cc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013a2: cmp    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13a2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013a4: beq    0x1342
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13a4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1342:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5024,
		block_size=6,
		insn_addrs="[5024, 5026, 5028]"
	];
	5024 -> { 4930, 5030 };


	5030 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000013a6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000013a6: b      0x1282
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13a6:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1282:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5030,
		block_size=2,
		insn_addrs="[5030]"
	];
	5030 -> { 4738 };


	5032 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000013a8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000013a8: strd   r3,r3,[sp,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13a8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013ac: add    r2,sp,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13ac:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013ae: add.w  r3,sp,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13ae:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x3])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013b2: mov    r1,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13b2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013b4: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13b4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013b6: str    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13b6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013b8: bl     0x223c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13b8:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x13bc, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[223c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5032,
		block_size=20,
		insn_addrs="[5032, 5036, 5038, 5042, 5044, 5046, 5048]"
	];
	5032 -> { 8764, 5052 };


	5052 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000013bc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000013bc: b      0x13a0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13bc:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[13a0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5052,
		block_size=2,
		insn_addrs="[5052]"
	];
	5052 -> { 5024 };


	5054 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000013be</b></td></tr>
			<tr><td align="left" balign="left">
			0x000013be: add.w  r3,r3,#0x1c0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13be:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x1c0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013c2: ldr.w  r3,[r2,r3,lsl #0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13c2:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[98a00:4], in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98b00:4], in=[r2, unique[98a00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[98b00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013c6: udf    #0xff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13c6:2]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[95980:4], in=[0x11, 0xff, 0x13c6])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[unique[95980:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5054,
		block_size=10,
		insn_addrs="[5054, 5058, 5062]"
	];



	5072 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000013d0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000013d0: ldr    r3,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13d0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013d2: and    r2,r3,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13d2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013d6: lsrs   r3,r3,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13d6:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013d8: str    r2,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13d8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013da: beq    0x13e6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13da:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[13e6:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5072,
		block_size=12,
		insn_addrs="[5072, 5074, 5078, 5080, 5082]"
	];
	5072 -> { 5094, 5084 };


	5084 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000013dc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000013dc: cmp    r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13dc:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013de: ldr    r0,[0x13ec]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13de:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[13ec:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013e0: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13e0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013e2: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13e2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[13e4:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013e4: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13e4:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5084,
		block_size=10,
		insn_addrs="[5084, 5086, 5088, 5090, 5092]"
	];



	5094 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000013e6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000013e6: mov.w  r0,#0x50000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13e6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x50000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013ea: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13ea:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5094,
		block_size=6,
		insn_addrs="[5094, 5098]"
	];



	5104 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000013f0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000013f0: push   {r4,r5,r6,r7,r8,r9,r10,r11,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13f0:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r11])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r10])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r9])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013f4: ldr.w  r9,[0x158c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13f4:4]])<br/>
			&nbsp;&nbsp;COPY(out=r9, in=[ram[158c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013f8: ldr.w  r10,[0x1590]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13f8:4]])<br/>
			&nbsp;&nbsp;COPY(out=r10, in=[ram[1590:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013fc: sub    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13fc:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000013fe: mov    r5,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[13fe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001400: mov    r11,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1400:2]])<br/>
			&nbsp;&nbsp;COPY(out=r11, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001402: add.w  r1,r0,r1, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1402:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r1, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r1, 0x2])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001406: movw   r8,#0x1ff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1406:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r8, in=[0x1ff])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r8, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r8, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5104,
		block_size=26,
		insn_addrs="[5104, 5108, 5112, 5116, 5118, 5120, 5122, 5126]"
	];
	5104 -> { 5130 };


	5130 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000140a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000140a: cmp    r1,r11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[140a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r11, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, r11])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r1, r11])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000140c: bne    0x1416
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[140c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1416:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5130,
		block_size=4,
		insn_addrs="[5130, 5132]"
	];
	5130 -> { 5142, 5134 };


	5134 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000140e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000140e: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[140e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5134,
		block_size=2,
		insn_addrs="[5134]"
	];
	5134 -> { 5136 };


	5136 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001410</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001410: add    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1410:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001412: pop.w  {r4,r5,r6,r7,r8,r9,r10,r11,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1412:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r9, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r10, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r11, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5136,
		block_size=6,
		insn_addrs="[5136, 5138]"
	];



	5142 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001416</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001416: ldr.w  r3,[r11,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1416:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r11, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000141a: lsls   r6,r3,#0x11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[141a:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x11, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x11, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x11, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r6, in=[r3, 0x11])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000141c: ubfx   r2,r3,#0xb,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[141c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0xb])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r2, in=[r2, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001420: ubfx   r4,r3,#0x0,#0x9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1420:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r4, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r4, in=[r4, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001424: bmi.w  0x1580
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1424:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84e00:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1580:4], unique[84e00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5142,
		block_size=18,
		insn_addrs="[5142, 5146, 5148, 5152, 5156]"
	];
	5142 -> { 5504, 5160 };


	5160 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001428</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001428: lsrs   r3,r3,#0x12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1428:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x12])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, 0x12])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000142a: ldrb.w r7,[r9,r2,lsl #0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[142a:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[99100:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99200:4], in=[r9, unique[99100:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[99300:1], in=[0x600000f0c300, unique[99200:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r7, in=[unique[99300:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000142e: cmp    r4,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[142e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r8, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r4, r8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001430: it     eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1430:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001432: mov.w  r4,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1432:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1436:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001436: cmp    r3,#0x22
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1436:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x22, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x22])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x22])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001438: bhi.w  0x1586
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1438:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[85180:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[85280:1], in=[CY, unique[85180:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1586:4], unique[85280:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5160,
		block_size=20,
		insn_addrs="[5160, 5162, 5166, 5168, 5170, 5174, 5176]"
	];
	5160 -> { 5510, 5180 };


	5180 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000143c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000143c: tbb    [pc,r3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[143c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[c9980:4], in=[r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c9980:4], in=[0x1440, unique[c9980:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[c9b00:1], in=[0x600000f0c300, unique[c9980:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[c9980:4], in=[unique[c9b00:1]])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[c9f00:4], in=[unique[c9980:4], 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=pc, in=[0x1440, unique[c9f00:4]])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5180,
		block_size=4,
		insn_addrs="[5180]"
	];
	5180 -> { 5220, 5234, 5246, 5252, 5258, 5270, 5510, 5302, 5392, 5398, 5442, 5448, 5454, 5460, 5474, 5480, 5486, 5492, 5498 };


	5220 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001464</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001464: str.w  r4,[r5,#0x50c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1464:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x50c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5220,
		block_size=4,
		insn_addrs="[5220]"
	];
	5220 -> { 5224 };


	5224 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001468</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001468: adds   r0,r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1468:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000146a: bne    0x152a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[146a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[152a:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5224,
		block_size=4,
		insn_addrs="[5224, 5226]"
	];
	5224 -> { 5418, 5228 };


	5228 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000146c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000146c: add.w  r11,r11,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[146c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x4])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r11, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001470: b      0x140a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1470:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[140a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5228,
		block_size=6,
		insn_addrs="[5228, 5232]"
	];
	5228 -> { 5130 };


	5234 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001472</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001472: str.w  r4,[r5,#0x514]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1472:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x514])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5234,
		block_size=4,
		insn_addrs="[5234]"
	];
	5234 -> { 5238 };


	5238 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001476</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001476: adds   r2,r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1476:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001478: beq    0x146c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1478:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[146c:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5238,
		block_size=4,
		insn_addrs="[5238, 5240]"
	];
	5238 -> { 5228, 5242 };


	5242 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000147a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000147a: movs   r6,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[147a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000147c: b      0x153e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[147c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[153e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5242,
		block_size=4,
		insn_addrs="[5242, 5244]"
	];
	5242 -> { 5438 };


	5246 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000147e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000147e: str.w  r4,[r5,#0x508]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[147e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x508])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001482: b      0x1468
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1482:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1468:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5246,
		block_size=6,
		insn_addrs="[5246, 5250]"
	];
	5246 -> { 5224 };


	5252 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001484</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001484: str.w  r4,[r5,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1484:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x510])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001488: b      0x1476
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1488:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1476:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5252,
		block_size=6,
		insn_addrs="[5252, 5256]"
	];
	5252 -> { 5238 };


	5258 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000148a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000148a: adds   r3,r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[148a:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000148c: str.w  r4,[r5,#0x508]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[148c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x508])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001490: beq    0x146c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1490:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[146c:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5258,
		block_size=8,
		insn_addrs="[5258, 5260, 5264]"
	];
	5258 -> { 5228, 5266 };


	5266 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001492</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001492: movs   r6,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1492:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001494: b      0x14a0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1494:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[14a0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5266,
		block_size=4,
		insn_addrs="[5266, 5268]"
	];
	5266 -> { 5280 };


	5270 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001496</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001496: adds   r6,r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1496:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r6, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001498: str.w  r4,[r5,#0x50c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1498:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x50c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000149c: beq    0x146c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[149c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[146c:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5270,
		block_size=8,
		insn_addrs="[5270, 5272, 5276]"
	];
	5270 -> { 5228, 5278 };


	5278 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000149e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000149e: movs   r6,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[149e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5278,
		block_size=2,
		insn_addrs="[5278]"
	];
	5278 -> { 5280 };


	5280 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000014a0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000014a0: add    r0,sp,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14a0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014a2: str    r4,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14a2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014a4: bl     0x13d0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14a4:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x14a8, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[13d0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5280,
		block_size=8,
		insn_addrs="[5280, 5282, 5284]"
	];
	5280 -> { 5072, 5288 };


	5288 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000014a8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000014a8: ldr    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14a8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014aa: movs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14aa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014ac: lsl.w  r3,r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14ac:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9d100:4], in=[r3, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9d100:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r2, unique[9d100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014b0: str.w  r3,[r0,#0x50c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14b0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x50c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014b4: b      0x14c8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14b4:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[14c8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5288,
		block_size=14,
		insn_addrs="[5288, 5290, 5292, 5296, 5300]"
	];
	5288 -> { 5320 };


	5302 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000014b6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000014b6: str.w  r4,[r5,#0x508]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14b6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x508])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5302,
		block_size=4,
		insn_addrs="[5302]"
	];
	5302 -> { 5306 };


	5306 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000014ba</b></td></tr>
			<tr><td align="left" balign="left">
			0x000014ba: cmp    r7,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14ba:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014bc: bne    0x1476
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14bc:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1476:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5306,
		block_size=4,
		insn_addrs="[5306, 5308]"
	];
	5306 -> { 5238, 5310 };


	5310 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000014be</b></td></tr>
			<tr><td align="left" balign="left">
			0x000014be: adds   r3,r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14be:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014c0: beq    0x146c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14c0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[146c:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5310,
		block_size=4,
		insn_addrs="[5310, 5312]"
	];
	5310 -> { 5228, 5314 };


	5314 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000014c2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000014c2: movs   r6,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14c2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014c4: mov    r2,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14c4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014c6: movs   r7,#0x6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14c6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[0x6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5314,
		block_size=6,
		insn_addrs="[5314, 5316, 5318]"
	];
	5314 -> { 5320 };


	5320 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000014c8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000014c8: ldr.w  r3,[r11,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14c8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r11, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014cc: str    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14cc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014ce: and    r0,r3,#0x8000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14ce:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x8000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014d2: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14d2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014d4: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14d4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014d6: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14d6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[14d8:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014d8: add    r0,sp,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14d8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014da: str    r2,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14da:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014dc: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14dc:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014de: movs   r6,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14de:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[14e0:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014e0: str    r4,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14e0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014e2: bl     0x13d0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14e2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x14e6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[13d0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5320,
		block_size=30,
		insn_addrs="[5320, 5324, 5326, 5330, 5332, 5334, 5336, 5338, 5340, 5342, 5344, 5346]"
	];
	5320 -> { 5072, 5350 };


	5350 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000014e6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000014e6: ldr    r4,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14e6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014e8: ldr    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14e8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014ea: ldr    r2,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14ea:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014ec: add.w  r0,r0,r4, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14ec:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r4, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r4, 0x2])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014f0: ubfx   r12,r3,#0x9,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14f0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x9])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r12, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r12, in=[r12, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014f4: ldr.w  r4,[r0,#0x700]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14f4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x700])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014f8: lsls   r3,r7,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14f8:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x8, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r7, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x8, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x8, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r7, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014fa: orr.w  r3,r3,r12, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14fa:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r12, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r12, 0x2])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000014fe: orrs   r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[14fe:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001500: and.w  r4,r4,r10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1500:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r4, in=[r4, r10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001504: orrs   r3,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1504:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001506: orr.w  r3,r3,r6, lsl #0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1506:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r6, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r6, 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000150a: str.w  r3,[r0,#0x700]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[150a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x700])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000150e: b      0x146c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[150e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[146c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5350,
		block_size=42,
		insn_addrs="[5350, 5352, 5354, 5356, 5360, 5364, 5368, 5370, 5374, 5376, 5380, 5382, 5386, 5390]"
	];
	5350 -> { 5228 };


	5392 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001510</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001510: str.w  r4,[r5,#0x50c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1510:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x50c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001514: b      0x14ba
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1514:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[14ba:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5392,
		block_size=6,
		insn_addrs="[5392, 5396]"
	];
	5392 -> { 5306 };


	5398 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001516</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001516: str.w  r4,[r5,#0x560]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1516:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x560])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5398,
		block_size=4,
		insn_addrs="[5398]"
	];
	5398 -> { 5402 };


	5402 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000151a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000151a: adds   r0,r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[151a:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000151c: ldr.w  r3,[r11,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[151c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r11, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001520: beq    0x146c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1520:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[146c:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5402,
		block_size=8,
		insn_addrs="[5402, 5404, 5408]"
	];
	5402 -> { 5228, 5410 };


	5410 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001522</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001522: ubfx   r3,r3,#0x10,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1522:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001526: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1526:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001528: beq    0x149e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1528:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[149e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5410,
		block_size=8,
		insn_addrs="[5410, 5414, 5416]"
	];
	5410 -> { 5278, 5418 };


	5418 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000152a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000152a: add    r0,sp,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[152a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000152c: str    r4,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[152c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000152e: bl     0x13d0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[152e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1532, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[13d0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5418,
		block_size=8,
		insn_addrs="[5418, 5420, 5422]"
	];
	5418 -> { 5072, 5426 };


	5426 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001532</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001532: ldr    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1532:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001534: movs   r6,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1534:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001536: lsl.w  r3,r6,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1536:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9d100:4], in=[r3, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9d100:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r6, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r6, unique[9d100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000153a: str.w  r3,[r0,#0x508]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[153a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x508])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5426,
		block_size=12,
		insn_addrs="[5426, 5428, 5430, 5434]"
	];
	5426 -> { 5438 };


	5438 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000153e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000153e: mov    r2,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[153e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001540: b      0x14c8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1540:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[14c8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5438,
		block_size=4,
		insn_addrs="[5438, 5440]"
	];
	5438 -> { 5320 };


	5442 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001542</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001542: str.w  r4,[r5,#0x564]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1542:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x564])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001546: b      0x151a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1546:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[151a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5442,
		block_size=6,
		insn_addrs="[5442, 5446]"
	];
	5442 -> { 5402 };


	5448 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001548</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001548: str.w  r4,[r5,#0x568]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1548:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x568])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000154c: b      0x151a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[154c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[151a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5448,
		block_size=6,
		insn_addrs="[5448, 5452]"
	];
	5448 -> { 5402 };


	5454 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000154e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000154e: str.w  r4,[r5,#0x56c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[154e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x56c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001552: b      0x151a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1552:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[151a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5454,
		block_size=6,
		insn_addrs="[5454, 5458]"
	];
	5454 -> { 5402 };


	5460 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001554</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001554: str.w  r4,[r5,#0x524]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1554:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x524])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5460,
		block_size=4,
		insn_addrs="[5460]"
	];
	5460 -> { 5464 };


	5464 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001558</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001558: adds   r2,r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1558:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000155a: beq    0x146c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[155a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[146c:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5464,
		block_size=4,
		insn_addrs="[5464, 5466]"
	];
	5464 -> { 5228, 5468 };


	5468 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000155c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000155c: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[155c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000155e: movs   r6,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[155e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001560: b      0x14c8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1560:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[14c8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5468,
		block_size=6,
		insn_addrs="[5468, 5470, 5472]"
	];
	5468 -> { 5320 };


	5474 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001562</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001562: str.w  r4,[r5,#0x528]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1562:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x528])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001566: b      0x1468
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1566:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1468:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5474,
		block_size=6,
		insn_addrs="[5474, 5478]"
	];
	5474 -> { 5224 };


	5480 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001568</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001568: str.w  r4,[r5,#0x530]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1568:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x530])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000156c: b      0x1558
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[156c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1558:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5480,
		block_size=6,
		insn_addrs="[5480, 5484]"
	];
	5480 -> { 5464 };


	5486 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000156e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000156e: str.w  r4,[r5,#0x534]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[156e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x534])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001572: b      0x1558
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1572:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1558:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5486,
		block_size=6,
		insn_addrs="[5486, 5490]"
	];
	5486 -> { 5464 };


	5492 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001574</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001574: str.w  r4,[r5,#0x538]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1574:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x538])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001578: b      0x1558
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1578:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1558:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5492,
		block_size=6,
		insn_addrs="[5492, 5496]"
	];
	5492 -> { 5464 };


	5498 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000157a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000157a: str.w  r4,[r5,#0x53c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[157a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x53c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000157e: b      0x1468
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[157e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1468:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5498,
		block_size=6,
		insn_addrs="[5498, 5502]"
	];
	5498 -> { 5224 };


	5504 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001580</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001580: mvn    r0,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1580:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x15])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001584: b      0x1410
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1584:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1410:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5504,
		block_size=6,
		insn_addrs="[5504, 5508]"
	];
	5504 -> { 5136 };


	5510 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001586</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001586: mvn    r0,#0x85
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1586:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x85])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000158a: b      0x1410
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[158a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1410:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5510,
		block_size=6,
		insn_addrs="[5510, 5514]"
	];
	5510 -> { 5136 };


	5524 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001594</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001594: push   {r0,r1,r2,r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1594:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001596: mov    r7,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1596:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001598: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1598:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000159a: movs   r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[159a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000159c: movs   r0,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[159c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000159e: bl     0x89c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[159e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x15a2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[89c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5524,
		block_size=14,
		insn_addrs="[5524, 5526, 5528, 5530, 5532, 5534]"
	];
	5524 -> { 2204, 5538 };


	5538 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000015a2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000015a2: movs   r0,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15a2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015a4: bl     0x864
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15a4:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x15a8, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[864:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5538,
		block_size=6,
		insn_addrs="[5538, 5540]"
	];
	5538 -> { 2148, 5544 };


	5544 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000015a8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000015a8: ldr    r5,[r7,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15a8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r7, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015aa: ldr    r6,[r7,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15aa:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r7, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015ac: ldr    r4,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15ac:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015ae: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15ae:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015b0: str.w  r1,[r4,#0x500]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15b0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x500])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015b4: str    r7,[r6,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15b4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015b6: ldr    r7,[r5,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15b6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015b8: add    r2,sp,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15b8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015ba: mov    r0,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15ba:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015bc: bl     0x3e5e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15bc:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x15c0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3e5e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5544,
		block_size=24,
		insn_addrs="[5544, 5546, 5548, 5550, 5552, 5556, 5558, 5560, 5562, 5564]"
	];
	5544 -> { 15966, 5568 };


	5568 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000015c0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000015c0: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15c0:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015c2: blt    0x1662
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15c2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1662:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5568,
		block_size=4,
		insn_addrs="[5568, 5570]"
	];
	5568 -> { 5730, 5572 };


	5572 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000015c4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000015c4: ldr    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15c4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015c6: ldr    r2,[r7,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15c6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015c8: ldrb   r1,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15c8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015ca: ldr    r0,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15ca:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015cc: bl     0x13f0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15cc:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x15d0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[13f0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5572,
		block_size=12,
		insn_addrs="[5572, 5574, 5576, 5578, 5580]"
	];
	5572 -> { 5104, 5584 };


	5584 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000015d0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000015d0: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15d0:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015d2: blt    0x1662
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15d2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1662:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5584,
		block_size=4,
		insn_addrs="[5584, 5586]"
	];
	5584 -> { 5730, 5588 };


	5588 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000015d4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000015d4: ldr    r3,[r5,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15d4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015d6: str.w  r3,[r4,#0x524]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15d6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x524])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015da: ldrb   r2,[r5,#0x19]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15da:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r5, 0x19])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015dc: ldrb   r3,[r5,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15dc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r5, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015de: orrs   r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15de:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015e0: ldrb   r2,[r5,#0x1a]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15e0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r5, 0x1a])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015e2: orrs   r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15e2:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015e4: str.w  r3,[r4,#0x56c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15e4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x56c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015e8: ldr    r3,[r5,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15e8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015ea: lsls   r1,r3,#0x1e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15ea:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1e, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r3, 0x1e])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015ec: bpl    0x1614
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15ec:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1614:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5588,
		block_size=26,
		insn_addrs="[5588, 5590, 5594, 5596, 5598, 5600, 5602, 5604, 5608, 5610, 5612]"
	];
	5588 -> { 5652, 5614 };


	5614 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000015ee</b></td></tr>
			<tr><td align="left" balign="left">
			0x000015ee: add.w  r0,r6,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15ee:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015f2: bl     0x27ec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15f2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x15f6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[27ec:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5614,
		block_size=8,
		insn_addrs="[5614, 5618]"
	];
	5614 -> { 10220, 5622 };


	5622 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000015f6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000015f6: ldr    r3,[0x166c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15f6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[166c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015f8: cmp    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15f8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015fa: bne    0x1666
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15fa:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1666:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5622,
		block_size=6,
		insn_addrs="[5622, 5624, 5626]"
	];
	5622 -> { 5734, 5628 };


	5628 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000015fc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000015fc: ldrb   r0,[r6,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15fc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r6, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000015fe: add.w  r2,r4,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[15fe:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xc])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001602: add.w  r1,r4,#0x120
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1602:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x120])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001606: bl     0x3f66
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1606:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x160a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3f66:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5628,
		block_size=14,
		insn_addrs="[5628, 5630, 5634, 5638]"
	];
	5628 -> { 16230, 5642 };


	5642 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000160a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000160a: ldrb   r3,[r6,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[160a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r6, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000160c: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[160c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000160e: lsls   r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[160e:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c680:4], in=[r3, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9c680:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r0, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r0, unique[9c680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001610: bl     0x1de8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1610:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1614, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1de8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5642,
		block_size=10,
		insn_addrs="[5642, 5644, 5646, 5648]"
	];
	5642 -> { 7656, 5652 };


	5652 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001614</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001614: movs   r3,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1614:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001616: str.w  r3,[r4,#0x500]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1616:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x500])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000161a: ldrb   r3,[r5,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[161a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r5, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000161c: cbnz   r3,0x1634
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[161c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1634:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5652,
		block_size=10,
		insn_addrs="[5652, 5654, 5658, 5660]"
	];
	5652 -> { 5684, 5662 };


	5662 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000161e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000161e: str.w  r3,[r4,#0x110]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[161e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x110])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001622: ldr.w  r3,[r4,#0x110]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1622:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x110])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001626: ldr    r3,[r6,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1626:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001628: str.w  r3,[r4,#0x534]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1628:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x534])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000162c: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[162c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000162e: str.w  r3,[r4,#0x538]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[162e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x538])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001632: str    r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1632:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5662,
		block_size=22,
		insn_addrs="[5662, 5666, 5670, 5672, 5676, 5678, 5682]"
	];
	5662 -> { 5684 };


	5684 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001634</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001634: ldr    r3,[r5,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1634:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001636: lsls   r2,r3,#0x1e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1636:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1e, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r3, 0x1e])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001638: itt    pl
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1638:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85f80:1], in=[NG, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000163a: mov.w  r3,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[163a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[780:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[780:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[163e:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000163e: str.w  r3,[r4,#0x304]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[163e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x304])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[780:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[780:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1642:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001642: ldr    r3,[r5,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1642:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001644: lsls   r3,r3,#0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1644:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1b, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x1b])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001646: itt    mi
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1646:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85e80:1], in=[NG, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001648: mov.w  r3,#0x400000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1648:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x400000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[164c:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000164c: str.w  r3,[r4,#0x304]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[164c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x304])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1650:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001650: ldr    r3,[r6,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1650:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001652: str.w  r3,[r4,#0x544]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1652:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x544])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001656: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1656:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001658: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1658:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000165a: str.w  r0,[r4,#0x548]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[165a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0x548])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000165e: str    r3,[r4,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[165e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001660: str    r3,[r4,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1660:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5684,
		block_size=46,
		insn_addrs="[5684, 5686, 5688, 5690, 5694, 5698, 5700, 5702, 5704, 5708, 5712, 5714, 5718, 5720, 5722, 5726, 5728]"
	];
	5684 -> { 5730 };


	5730 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001662</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001662: add    sp,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1662:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0xc])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001664: pop    {r4,r5,r6,r7,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1664:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5730,
		block_size=4,
		insn_addrs="[5730, 5732]"
	];



	5734 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001666</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001666: mvn    r0,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1666:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x4])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000166a: b      0x1662
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[166a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1662:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5734,
		block_size=6,
		insn_addrs="[5734, 5738]"
	];
	5734 -> { 5730 };


	5744 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001670</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001670: push   {r4,r5,r6,r7,r8,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1670:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001674: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1674:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001676: ldr    r7,[r0,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1676:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001678: mov    r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1678:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000167a: bl     0x4112
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[167a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x167e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4112:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5744,
		block_size=14,
		insn_addrs="[5744, 5748, 5750, 5752, 5754]"
	];
	5744 -> { 16658, 5758 };


	5758 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000167e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000167e: mov.w  r8,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[167e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r8, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r8, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001682: cbnz   r0,0x16b2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1682:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16b2:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5758,
		block_size=6,
		insn_addrs="[5758, 5762]"
	];
	5758 -> { 5810, 5764 };


	5764 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001684</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001684: ldr    r3,[0x1738]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1684:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1738:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001686: ldrb   r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1686:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001688: cbz    r3,0x16b2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1688:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16b2:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5764,
		block_size=6,
		insn_addrs="[5764, 5766, 5768]"
	];
	5764 -> { 5810, 5770 };


	5770 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000168a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000168a: movs   r6,#0x64
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[168a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x64])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5770,
		block_size=2,
		insn_addrs="[5770]"
	];
	5770 -> { 5772 };


	5772 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000168c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000168c: ldr    r0,[r4,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[168c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000168e: bl     0x3eba
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[168e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1692, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3eba:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5772,
		block_size=6,
		insn_addrs="[5772, 5774]"
	];
	5772 -> { 16058, 5778 };


	5778 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001692</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001692: cbnz   r0,0x16d2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1692:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16d2:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5778,
		block_size=2,
		insn_addrs="[5778]"
	];
	5778 -> { 5842, 5780 };


	5780 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001694</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001694: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1694:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001696: bl     0x3f62
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1696:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x169a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3f62:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5780,
		block_size=6,
		insn_addrs="[5780, 5782]"
	];
	5780 -> { 16226, 5786 };


	5786 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000169a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000169a: subs   r6,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[169a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r6, in=[r6, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000169c: bne    0x168c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[169c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[168c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5786,
		block_size=4,
		insn_addrs="[5786, 5788]"
	];
	5786 -> { 5772, 5790 };


	5790 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000169e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000169e: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[169e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016a0: movs   r0,#0x21
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16a0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x21])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016a2: bl     0x3090
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16a2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x16a6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3090:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5790,
		block_size=8,
		insn_addrs="[5790, 5792, 5794]"
	];
	5790 -> { 12432, 5798 };


	5798 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000016a6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000016a6: b      0x168a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16a6:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[168a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5798,
		block_size=2,
		insn_addrs="[5798]"
	];
	5798 -> { 5770 };


	5800 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000016a8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000016a8: msr    basepri,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16a8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16ac:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016ac: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16ac:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016b0: b      0x169e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16b0:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[169e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5800,
		block_size=10,
		insn_addrs="[5800, 5804, 5808]"
	];
	5800 -> { 5790 };


	5810 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000016b2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000016b2: mrs    r6,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16b2:4]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16b6:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r6, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016b6: mov    r1,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16b6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016b8: msr    basepri_max,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16b8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16bc:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r8, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16bc:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r8])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16bc:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016bc: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16bc:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016c0: ldr    r0,[r4,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16c0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016c2: bl     0x3eba
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16c2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x16c6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3eba:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5810,
		block_size=20,
		insn_addrs="[5810, 5814, 5816, 5820, 5824, 5826]"
	];
	5810 -> { 16058, 5830 };


	5830 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000016c6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000016c6: cbnz   r0,0x16ea
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16c6:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16ea:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5830,
		block_size=2,
		insn_addrs="[5830]"
	];
	5830 -> { 5866, 5832 };


	5832 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000016c8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000016c8: msr    basepri,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16c8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16cc:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016cc: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16cc:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016d0: b      0x16b2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16d0:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[16b2:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5832,
		block_size=10,
		insn_addrs="[5832, 5836, 5840]"
	];
	5832 -> { 5810 };


	5842 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000016d2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000016d2: mrs    r6,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16d2:4]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16d6:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r6, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016d6: mov    r1,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16d6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016d8: msr    basepri_max,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16d8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16dc:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r8, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16dc:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r8])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16dc:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016dc: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16dc:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016e0: ldr    r0,[r4,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16e0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016e2: bl     0x3eba
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16e2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x16e6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3eba:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5842,
		block_size=20,
		insn_addrs="[5842, 5846, 5848, 5852, 5856, 5858]"
	];
	5842 -> { 16058, 5862 };


	5862 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000016e6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000016e6: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16e6:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016e8: beq    0x16a8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16e8:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[16a8:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5862,
		block_size=4,
		insn_addrs="[5862, 5864]"
	];
	5862 -> { 5800, 5866 };


	5866 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000016ea</b></td></tr>
			<tr><td align="left" balign="left">
			0x000016ea: ldr    r3,[r7,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16ea:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r7, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016ec: strb   r5,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16ec:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016ee: ldr    r2,[r4,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16ee:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016f0: ldr    r0,[r7,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16f0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r7, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016f2: ldr    r3,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16f2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016f4: str.w  r0,[r3,#0x544]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16f4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x544])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016f8: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16f8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016fa: str.w  r0,[r3,#0x548]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16fa:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x548])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000016fe: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[16fe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001700: str.w  r0,[r3,#0x120]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x120])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001704: ldr.w  r5,[r3,#0x120]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1704:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x120])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001708: str.w  r0,[r3,#0x158]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1708:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x158])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000170c: ldr    r2,[r2,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[170c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000170e: ldr.w  r0,[r3,#0x158]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[170e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x158])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001712: lsls   r2,r2,#0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1712:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1b, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, 0x1b])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001714: bpl    0x1728
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1714:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1728:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5866,
		block_size=44,
		insn_addrs="[5866, 5868, 5870, 5872, 5874, 5876, 5880, 5882, 5886, 5888, 5892, 5896, 5900, 5902, 5906, 5908]"
	];
	5866 -> { 5928, 5910 };


	5910 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001716</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001716: ldr    r2,[r4,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1716:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001718: ldr    r2,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1718:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000171a: movs   r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[171a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000171c: str.w  r0,[r2,#0x500]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[171c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x500])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001720: mov.w  r2,#0x400000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1720:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x400000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001724: str.w  r2,[r3,#0x304]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1724:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x304])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5910,
		block_size=18,
		insn_addrs="[5910, 5912, 5914, 5916, 5920, 5924]"
	];
	5910 -> { 5928 };


	5928 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001728</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001728: movs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1728:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000172a: str    r2,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[172a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000172c: msr    basepri,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[172c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1730:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001730: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1730:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001734: pop.w  {r4,r5,r6,r7,r8,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1734:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5928,
		block_size=16,
		insn_addrs="[5928, 5930, 5932, 5936, 5940]"
	];



	5948 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000173c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000173c: push   {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[173c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000173e: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[173e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001740: lsls   r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1740:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c680:4], in=[r0, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9c680:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[9c680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001742: ldr    r2,[0x177c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1742:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[177c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001744: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1744:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001748: mvns   r4,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1748:2]])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r4, in=[r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5948,
		block_size=14,
		insn_addrs="[5948, 5950, 5952, 5954, 5956, 5960]"
	];
	5948 -> { 5962 };


	5962 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000174a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000174a: ldrex  r1,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[174a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98680:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x12e, unique[98680:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[98680:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000174e: and.w  r5,r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[174e:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r1, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001752: strex  r6,r5,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1752:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c4200:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c4280:4], in=[r5])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[c4380:1], in=[0x25, unique[c4200:4]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x1])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[c4400:1], in=[unique[c4380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1756:4], unique[c4400:1]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c4200:4], unique[c4280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001756: cmp    r6,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1756:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001758: bne    0x174a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1758:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[174a:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5962,
		block_size=16,
		insn_addrs="[5962, 5966, 5970, 5974, 5976]"
	];
	5962 -> { 5962, 5978 };


	5978 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000175a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000175a: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[175a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000175e: mov.w  r2,#0x10000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[175e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x10000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001762: lsls   r2,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1762:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c680:4], in=[r0, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9c680:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, unique[9c680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001764: ldr    r0,[0x1780]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1764:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[1780:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001766: str.w  r2,[r0,#0x308]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1766:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x308])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000176a: dmb    #0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[176a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1f])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000176e: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[176e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001772: tst    r3,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1772:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca180:4], in=[r3, r1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca180:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca180:4], 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001774: ite    ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1774:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001776: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1776:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1778:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001778: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1778:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[177a:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000177a: pop    {r4,r5,r6,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[177a:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=5978,
		block_size=34,
		insn_addrs="[5978, 5982, 5986, 5988, 5990, 5994, 5998, 6002, 6004, 6006, 6008, 6010]"
	];



	6020 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001784</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001784: push   {r4,r5,r6}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1784:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001786: ldr    r1,[0x17c0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1786:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[17c0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001788: ldrd   r3,r4,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1788:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000178c: subs   r0,r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[178c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000178e: adds   r3,r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[178e:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001790: adc    r4,r4,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1790:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93600:4], in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93680:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[unique[93600:4], unique[93680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001794: bic    r6,r2,#0xff000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1794:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0xff000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r6, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001798: strd   r3,r4,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1798:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000179c: sub.w  r3,r6,#0x200000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[179c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x200000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r6, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017a0: cmp.w  r3,#0xc00000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17a0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0xc00000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017a4: bcs    0x17ba
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17a4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83b80:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[17ba:4], unique[83b80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6020,
		block_size=34,
		insn_addrs="[6020, 6022, 6024, 6028, 6030, 6032, 6036, 6040, 6044, 6048, 6052]"
	];
	6020 -> { 6074, 6054 };


	6054 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000017a6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000017a6: ldr    r3,[0x17c4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17a6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[17c4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017a8: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17a8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017aa: lsrs   r2,r3,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17aa:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x8])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r2, in=[r3, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017ac: lsls   r3,r3,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17ac:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x18, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x18, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x18, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x18])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017ae: adds   r4,r3,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17ae:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017b0: ldr    r3,[0x17c8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17b0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[17c8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017b2: adc    r5,r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17b2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93600:4], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93680:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[unique[93600:4], unique[93680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017b6: strd   r4,r5,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17b6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r4])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r5])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6054,
		block_size=20,
		insn_addrs="[6054, 6056, 6058, 6060, 6062, 6064, 6066, 6070]"
	];
	6054 -> { 6074 };


	6074 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000017ba</b></td></tr>
			<tr><td align="left" balign="left">
			0x000017ba: pop    {r4,r5,r6}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17ba:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017bc: b.w    0x3398
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17bc:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3398:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6074,
		block_size=6,
		insn_addrs="[6074, 6076]"
	];
	6074 -> { 13208 };


	6092 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000017cc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000017cc: cbz    r1,0x1814
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17cc:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1814:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6092,
		block_size=2,
		insn_addrs="[6092]"
	];
	6092 -> { 6164, 6094 };


	6094 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000017ce</b></td></tr>
			<tr><td align="left" balign="left">
			0x000017ce: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17ce:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017d2: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17d2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017d4: ldr    r2,[0x1818]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17d4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[1818:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017d6: lsls   r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17d6:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c680:4], in=[r0, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9c680:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[9c680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6094,
		block_size=10,
		insn_addrs="[6094, 6098, 6100, 6102]"
	];
	6094 -> { 6104 };


	6104 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000017d8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000017d8: ldrex  r12,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17d8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98680:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x12e, unique[98680:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r12, in=[0x600000f0c300, unique[98680:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017dc: orr.w  r12,r12,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17dc:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r12, in=[r12, r3])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017e0: strex  r1,r12,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17e0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c4200:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c4280:4], in=[r12])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[c4380:1], in=[0x25, unique[c4200:4]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x1])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[c4400:1], in=[unique[c4380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[17e4:4], unique[c4400:1]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c4200:4], unique[c4280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017e4: cmp    r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17e4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017e6: bne    0x17d8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17e6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[17d8:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6104,
		block_size=16,
		insn_addrs="[6104, 6108, 6112, 6116, 6118]"
	];
	6104 -> { 6104, 6120 };


	6120 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000017e8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000017e8: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17e8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017ec: ldr    r2,[0x181c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17ec:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[181c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017ee: mov.w  r3,#0x10000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17ee:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x10000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017f2: lsls   r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17f2:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c680:4], in=[r0, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9c680:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[9c680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017f4: str.w  r3,[r2,#0x304]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17f4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x304])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017f8: ldr    r3,[0x1820]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17f8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1820:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017fa: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17fa:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000017fe: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[17fe:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001800: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1800:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001804: lsrs   r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1804:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9ce80:4], in=[r0, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9ce80:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9ce80:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9ce80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9cf00:4], in=[r0, 0xff])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, unique[9cf00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001806: lsls   r3,r3,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1806:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001808: ittt   mi
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1808:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85e80:1], in=[NG, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000180a: ldr    r3,[0x1824]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[180a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[180c:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1824:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000180c: mov.w  r2,#0x20000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[180c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x20000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1810:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001810: str.w  r2,[r3,#0x100]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1810:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x100])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1814:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6120,
		block_size=44,
		insn_addrs="[6120, 6124, 6126, 6130, 6132, 6136, 6138, 6142, 6144, 6148, 6150, 6152, 6154, 6156, 6160]"
	];
	6120 -> { 6164 };


	6164 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001814</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001814: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1814:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6164,
		block_size=2,
		insn_addrs="[6164]"
	];



	6184 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001828</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001828: ldr    r3,[0x1860]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1828:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1860:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000182a: ldr    r0,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[182a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000182c: lsrs   r1,r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[182c:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x8])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r0, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000182e: lsls   r0,r0,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[182e:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x18, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r0, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x18, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x18, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r0, 0x18])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001830: dmb    #0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1830:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1f])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001834: ldr    r3,[0x1864]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1834:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1864:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001836: ldr.w  r3,[r3,#0x504]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1836:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x504])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000183a: adds   r0,r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[183a:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000183c: adc    r1,r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[183c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93600:4], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93680:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[unique[93600:4], unique[93680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001840: cmp.w  r3,#0x100000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1840:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001844: bcs    0x185c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1844:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83b80:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[185c:4], unique[83b80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6184,
		block_size=30,
		insn_addrs="[6184, 6186, 6188, 6190, 6192, 6196, 6198, 6202, 6204, 6208, 6212]"
	];
	6184 -> { 6236, 6214 };


	6214 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001846</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001846: ldr    r3,[0x1868]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1846:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1868:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001848: ldrd   r2,r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1848:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000184c: cmp    r0,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[184c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000184e: sbcs.w r3,r1,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[184e:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r1, r3])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[r3, r1])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r1, r3])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2680:4], in=[r1, r3])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2700:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2780:4], in=[unique[b2700:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[unique[b2680:4], unique[b2780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001852: bcs    0x185c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1852:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83b80:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[185c:4], unique[83b80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6214,
		block_size=14,
		insn_addrs="[6214, 6216, 6220, 6222, 6226]"
	];
	6214 -> { 6236, 6228 };


	6228 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001854</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001854: adds.w r0,r0,#0x1000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1854:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x1000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001858: adc    r1,r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1858:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93600:4], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93680:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[unique[93600:4], unique[93680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6228,
		block_size=8,
		insn_addrs="[6228, 6232]"
	];
	6228 -> { 6236 };


	6236 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000185c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000185c: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[185c:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6236,
		block_size=2,
		insn_addrs="[6236]"
	];



	6252 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000186c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000186c: push   {r4,r5,r6,r7,r8,r9,r10,r11,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[186c:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r11])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r10])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r9])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001870: sub    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1870:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001872: mov    r6,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1872:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001874: mov    r7,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1874:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001876: ldrb.w r10,[sp,#0x40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1876:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x40])<br/>
			&nbsp;&nbsp;LOAD(out=unique[98e80:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r10, in=[unique[98e80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000187a: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[187a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000187c: bl     0x173c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[187c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1880, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[173c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6252,
		block_size=20,
		insn_addrs="[6252, 6256, 6258, 6260, 6262, 6266, 6268]"
	];
	6252 -> { 5948, 6272 };


	6272 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001880</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001880: str    r0,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1880:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001882: bl     0x1828
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1882:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1886, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1828:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6272,
		block_size=6,
		insn_addrs="[6272, 6274]"
	];
	6272 -> { 6184, 6278 };


	6278 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001886</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001886: cmp    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1886:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r6, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001888: sbcs.w r3,r1,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1888:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r1, r7])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[r7, r1])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r1, r7])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2680:4], in=[r1, r7])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2700:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2780:4], in=[unique[b2700:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[unique[b2680:4], unique[b2780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000188c: bcs    0x1938
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[188c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83b80:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1938:4], unique[83b80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6278,
		block_size=8,
		insn_addrs="[6278, 6280, 6284]"
	];
	6278 -> { 6456, 6286 };


	6286 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000188e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000188e: ldr    r3,[0x1988]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[188e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1988:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001890: subs   r0,r6,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1890:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r6, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001892: sbc.w  r1,r7,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1892:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r7, r1])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[r1, r7])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r7, r1])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2680:4], in=[r7, r1])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2700:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2780:4], in=[unique[b2700:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r1, in=[unique[b2680:4], unique[b2780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001896: cmp    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1896:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001898: sbcs   r1,r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1898:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[unique[87700:4], r1])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2480:4], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2500:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2580:4], in=[unique[b2500:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r1, in=[unique[b2480:4], unique[b2580:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000189c: bcs    0x193e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[189c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83b80:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[193e:4], unique[83b80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6286,
		block_size=16,
		insn_addrs="[6286, 6288, 6290, 6294, 6296, 6300]"
	];
	6286 -> { 6462, 6302 };


	6302 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000189e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000189e: ldr    r3,[0x198c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[189e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[198c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018a0: add.w  r3,r3,r4, lsl #0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18a0:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x4])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r4, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r4, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018a4: ldrd   r2,r3,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18a4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018a8: cmp    r7,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18a8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r7, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018aa: it     eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18aa:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018ac: cmp    r6,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18ac:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[18ae:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r6, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018ae: beq    0x196e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18ae:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[196e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6302,
		block_size=18,
		insn_addrs="[6302, 6304, 6308, 6312, 6314, 6316, 6318]"
	];
	6302 -> { 6510, 6320 };


	6320 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000018b0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000018b0: ldr    r1,[0x1990]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18b0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[1990:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018b2: mov.w  r8,#0x10000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18b2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x10000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r8, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r8, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018b6: add.w  r5,r4,#0x50
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18b6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x50])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018ba: lsl.w  r8,r8,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18ba:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9d100:4], in=[r4, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9d100:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r8, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r8, in=[r8, unique[9d100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r8, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r8, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018be: lsls   r5,r5,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18be:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x2, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r5, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r5, in=[r5, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018c0: str.w  r8,[r1,#0x348]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18c0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x348])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018c4: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18c4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018c6: uxth   r5, r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18c6:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8800:2], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[d8800:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018c8: bl     0x3f48
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18c8:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x18cc, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3f48:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6320,
		block_size=28,
		insn_addrs="[6320, 6322, 6326, 6330, 6334, 6336, 6340, 6342, 6344]"
	];
	6320 -> { 16200, 6348 };


	6348 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000018cc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000018cc: bic    r11,r6,#0xff000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18cc:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0xff000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r11, in=[r6, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018d0: add.w  r5,r5,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18d0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018d4: add.w  r3,r4,#0x150
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18d4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x150])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018d8: add.w  r5,r5,#0x11000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18d8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x11000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018dc: mov    r12,r11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18dc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[r11])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018de: mov.w  r9,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18de:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x3])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r9, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r9, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r9, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018e2: str    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18e2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6348,
		block_size=24,
		insn_addrs="[6348, 6352, 6356, 6360, 6364, 6366, 6370]"
	];
	6348 -> { 6372 };


	6372 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000018e4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000018e4: ldr    r2,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18e4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018e6: bic    r3,r12,#0xff000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18e6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0xff000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r12, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018ea: str.w  r3,[r1,r2,lsl #0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18ea:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3200:4], in=[r2, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3300:4], in=[r1, unique[c3200:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3300:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018ee: str.w  r8,[r1,#0x344]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18ee:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x344])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018f2: ldr.w  r3,[r1,#0x504]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18f2:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x504])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018f6: ldr    r2,[0x1994]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18f6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[1994:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018f8: mvn    r0,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18f8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018fc: subs   r0,r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18fc:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000018fe: add    r0,r12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[18fe:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, r12])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001900: bic    r0,r0,#0xff000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1900:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0xff000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r0, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001904: cmp    r0,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1904:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001906: bls    0x196e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1906:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84280:1], in=[CY])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84380:1], in=[unique[84280:1], ZR])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[196e:4], unique[84380:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6372,
		block_size=36,
		insn_addrs="[6372, 6374, 6378, 6382, 6386, 6390, 6392, 6396, 6398, 6400, 6404, 6406]"
	];
	6372 -> { 6510, 6408 };


	6408 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001908</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001908: ldr    r0,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1908:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000190a: cbz    r0,0x1928
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[190a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1928:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6408,
		block_size=4,
		insn_addrs="[6408, 6410]"
	];
	6408 -> { 6440, 6412 };


	6412 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000190c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000190c: ldr.w  r3,[r1,#0x504]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[190c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x504])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001910: str    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1910:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001912: sub.w  r0,r3,r11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1912:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=unique[c5100:4], in=[r11])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[c5100:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r3, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001916: bic    r0,r0,#0xff000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1916:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0xff000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r0, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000191a: cmp.w  r0,#0x800000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[191a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x800000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000191e: bls    0x196e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[191e:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84280:1], in=[CY])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84380:1], in=[unique[84280:1], ZR])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[196e:4], unique[84380:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6412,
		block_size=20,
		insn_addrs="[6412, 6416, 6418, 6422, 6426, 6430]"
	];
	6412 -> { 6510, 6432 };


	6432 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001920</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001920: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1920:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001922: bl     0x3f48
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1922:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1926, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3f48:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6432,
		block_size=6,
		insn_addrs="[6432, 6434]"
	];
	6432 -> { 16200, 6438 };


	6438 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001926</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001926: ldr    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1926:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6438,
		block_size=2,
		insn_addrs="[6438]"
	];
	6438 -> { 6440 };


	6440 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001928</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001928: cmp.w  r10,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1928:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r10])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r10, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r10, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000192c: bne    0x193e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[192c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[193e:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6440,
		block_size=6,
		insn_addrs="[6440, 6444]"
	];
	6440 -> { 6462, 6446 };


	6446 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000192e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000192e: add.w  r12,r9,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[192e:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[r3])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r9, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r9, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r12, in=[r9, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001932: add.w  r9,r9,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1932:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r9, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r9, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r9, in=[r9, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r9, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r9, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001936: b      0x18e4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1936:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[18e4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6446,
		block_size=10,
		insn_addrs="[6446, 6450, 6454]"
	];
	6446 -> { 6372 };


	6456 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001938</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001938: cmp.w  r10,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1938:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r10])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r10, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r10, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000193c: beq    0x1952
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[193c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1952:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6456,
		block_size=6,
		insn_addrs="[6456, 6460]"
	];
	6456 -> { 6482, 6462 };


	6462 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000193e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000193e: mvn    r5,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[193e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x15])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r5, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6462,
		block_size=4,
		insn_addrs="[6462]"
	];
	6462 -> { 6466 };


	6466 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001942</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001942: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1942:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001944: ldr    r1,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1944:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001946: bl     0x17cc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1946:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x194a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[17cc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6466,
		block_size=8,
		insn_addrs="[6466, 6468, 6470]"
	];
	6466 -> { 6092, 6474 };


	6474 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000194a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000194a: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[194a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000194c: add    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[194c:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000194e: pop.w  {r4,r5,r6,r7,r8,r9,r10,r11,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[194e:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r9, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r10, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r11, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6474,
		block_size=8,
		insn_addrs="[6474, 6476, 6478]"
	];



	6482 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001952</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001952: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1952:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001954: ldr    r2,[0x1998]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1954:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[1998:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001956: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1956:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000195a: lsls   r3,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[195a:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c680:4], in=[r4, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9c680:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[9c680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6482,
		block_size=10,
		insn_addrs="[6482, 6484, 6486, 6490]"
	];
	6482 -> { 6492 };


	6492 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000195c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000195c: ldrex  r0,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[195c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98680:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x12e, unique[98680:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[98680:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001960: orrs   r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1960:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001962: strex  r1,r0,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1962:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c4200:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c4280:4], in=[r0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[c4380:1], in=[0x25, unique[c4200:4]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x1])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[c4400:1], in=[unique[c4380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1966:4], unique[c4400:1]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c4200:4], unique[c4280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001966: cmp    r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1966:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001968: bne    0x195c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1968:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[195c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6492,
		block_size=14,
		insn_addrs="[6492, 6496, 6498, 6502, 6504]"
	];
	6492 -> { 6492, 6506 };


	6506 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000196a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000196a: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[196a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6506,
		block_size=4,
		insn_addrs="[6506]"
	];
	6506 -> { 6510 };


	6510 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000196e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000196e: ldr    r1,[0x198c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[196e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[198c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001970: ldr    r0,[sp,#0x38]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1970:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x38])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001972: lsls   r3,r4,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1972:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x4, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r4, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x4, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x4, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r4, 0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001974: add.w  r2,r1,r4, lsl #0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1974:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x4])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r4, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r4, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r1, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r1, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r1, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001978: str    r0,[r1,r3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1978:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r1, r3])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92900:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000197a: ldr    r3,[sp,#0x3c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[197a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x3c])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000197c: str    r3,[r2,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[197c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000197e: strd   r6,r7,[r2,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[197e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r6])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001982: movs   r5,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1982:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001984: b      0x1942
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1984:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1942:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6510,
		block_size=24,
		insn_addrs="[6510, 6512, 6514, 6516, 6520, 6522, 6524, 6526, 6530, 6532]"
	];
	6510 -> { 6466 };


	6912 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b00</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b00: push   {r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b00:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b02: adds   r3,r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b02:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b04: ldr    r4,[0x1b50]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b04:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[ram[1b50:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b06: sub    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b06:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b08: beq    0x1b16
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b08:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1b16:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6912,
		block_size=10,
		insn_addrs="[6912, 6914, 6916, 6918, 6920]"
	];
	6912 -> { 6934, 6922 };


	6922 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b0a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b0a: cmp    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b0a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b0c: it     ge
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b0c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86580:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b0e: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b0e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[d80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[d80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1b10:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b10: cmp    r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b10:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b12: it     lt
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b12:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86680:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b14: movs   r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b14:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[e80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[e80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1b16:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6922,
		block_size=12,
		insn_addrs="[6922, 6924, 6926, 6928, 6930, 6932]"
	];
	6922 -> { 6934 };


	6934 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b16</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b16: bl     0x1828
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b16:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1b1a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1828:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6934,
		block_size=4,
		insn_addrs="[6934]"
	];
	6934 -> { 6184, 6938 };


	6938 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b1a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b1a: ldr    r3,[0x1b54]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b1a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1b54:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b1c: ldr    r5,[0x1b50]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b1c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[ram[1b50:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b1e: ldrd   r1,r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b1e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b22: subs   r0,r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b22:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b24: cmp.w  r0,#0x800000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b24:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x800000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87b00:4], r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b28: bcs    0x1b4c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b28:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83b80:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1b4c:4], unique[83b80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6938,
		block_size=16,
		insn_addrs="[6938, 6940, 6942, 6946, 6948, 6952]"
	];
	6938 -> { 6988, 6954 };


	6954 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b2a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b2a: adds   r2,r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b2a:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, r0])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r4, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b2c: cmp    r2,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b2c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r2, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b2e: it     cs
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b2e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85c80:1], in=[CY, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b30: mov    r2,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b30:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[480:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[480:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1b32:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r5])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6954,
		block_size=8,
		insn_addrs="[6954, 6956, 6958, 6960]"
	];
	6954 -> { 6962 };


	6962 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b32</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b32: adds   r2,r2,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b32:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, r1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b34: mov.w  r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b34:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b38: ldr    r1,[0x1b58]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b38:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[1b58:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b3a: str    r1,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b3a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b3c: strd   r0,r0,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b3c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b40: adc    r3,r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b40:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93600:4], in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93680:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[unique[93600:4], unique[93680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b44: bl     0x186c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b44:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1b48, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[186c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6962,
		block_size=22,
		insn_addrs="[6962, 6964, 6968, 6970, 6972, 6976, 6980]"
	];
	6962 -> { 6252, 6984 };


	6984 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b48</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b48: add    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b48:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b4a: pop    {r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b4a:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6984,
		block_size=4,
		insn_addrs="[6984, 6986]"
	];



	6988 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b4c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b4c: mov    r2,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b4c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b4e: b      0x1b32
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b4e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1b32:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=6988,
		block_size=4,
		insn_addrs="[6988, 6990]"
	];
	6988 -> { 6962 };


	7004 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b5c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b5c: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b5c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b5e: bl     0x1828
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b5e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1b62, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1828:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7004,
		block_size=6,
		insn_addrs="[7004, 7006]"
	];
	7004 -> { 6184, 7010 };


	7010 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b62</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b62: ldr    r3,[0x1b6c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b62:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1b6c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b64: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b64:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b66: subs   r0,r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b66:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b68: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b68:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7010,
		block_size=8,
		insn_addrs="[7010, 7012, 7014, 7016]"
	];



	7024 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b70</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b70: mov.w  r3,#0x10000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b70:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x10000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b74: ldr.w  r2,[r3,#0x130]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b74:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x130])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b78: cmp    r2,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b78:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x8, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x8])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b7a: bne    0x1b8a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b7a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1b8a:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7024,
		block_size=12,
		insn_addrs="[7024, 7028, 7032, 7034]"
	];
	7024 -> { 7050, 7036 };


	7036 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b7c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b7c: ldr.w  r3,[r3,#0x134]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b7c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x134])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b80: cmp    r3,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b80:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x5, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b82: bhi    0x1b8a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b82:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1b8a:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7036,
		block_size=8,
		insn_addrs="[7036, 7040, 7042]"
	];
	7036 -> { 7050, 7044 };


	7044 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b84</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b84: ldr    r2,[0x1b90]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b84:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[1b90:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b86: ldrb   r0,[r2,r3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b86:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r2, r3])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97a00:1], in=[0x600000f0c300, unique[92900:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[97a00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b88: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b88:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7044,
		block_size=6,
		insn_addrs="[7044, 7046, 7048]"
	];



	7050 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b8a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b8a: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b8a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b8c: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b8c:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7050,
		block_size=4,
		insn_addrs="[7050, 7052]"
	];



	7060 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b94</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b94: ldr    r2,[0x1ba0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b94:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[1ba0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7060,
		block_size=2,
		insn_addrs="[7060]"
	];
	7060 -> { 7062 };


	7062 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b96</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b96: ldr.w  r3,[r2,#0x400]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b96:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x400])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b9a: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b9a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001b9c: beq    0x1b96
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b9c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1b96:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7062,
		block_size=8,
		insn_addrs="[7062, 7066, 7068]"
	];
	7062 -> { 7062, 7070 };


	7070 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001b9e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001b9e: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1b9e:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7070,
		block_size=2,
		insn_addrs="[7070]"
	];



	7076 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001ba4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001ba4: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ba4:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ba6: mov.w  r3,#0x10000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ba6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x10000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001baa: ldr.w  r2,[r3,#0x130]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1baa:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x130])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bae: cmp    r2,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bae:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x8, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x8])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bb0: bne    0x1c50
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bb0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1c50:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7076,
		block_size=14,
		insn_addrs="[7076, 7078, 7082, 7086, 7088]"
	];
	7076 -> { 7248, 7090 };


	7090 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001bb2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001bb2: mov.w  r2,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bb2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bb6: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bb6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bb8: str.w  r1,[r2,#0x10c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bb8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x10c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bbc: str.w  r1,[r2,#0x110]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bbc:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x110])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bc0: str.w  r1,[r2,#0x538]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bc0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x538])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bc4: add.w  r2,r2,#0xc000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bc4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0xc000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bc8: ldr.w  r1,[r3,#0x404]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bc8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x404])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bcc: str.w  r1,[r2,#0x520]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bcc:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x520])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bd0: ldr.w  r1,[r3,#0x408]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bd0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x408])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bd4: str.w  r1,[r2,#0x524]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bd4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x524])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bd8: ldr.w  r1,[r3,#0x40c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bd8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x40c])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bdc: str.w  r1,[r2,#0x528]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bdc:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x528])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001be0: ldr.w  r1,[r3,#0x410]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1be0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x410])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001be4: str.w  r1,[r2,#0x52c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1be4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x52c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001be8: ldr.w  r1,[r3,#0x414]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1be8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x414])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bec: str.w  r1,[r2,#0x530]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bec:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x530])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bf0: ldr.w  r1,[r3,#0x418]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bf0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x418])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bf4: str.w  r1,[r2,#0x534]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bf4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x534])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bf8: ldr.w  r1,[r3,#0x41c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bf8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x41c])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001bfc: str.w  r1,[r2,#0x540]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1bfc:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x540])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c00: ldr.w  r1,[r3,#0x420]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x420])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c04: str.w  r1,[r2,#0x544]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c04:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x544])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c08: ldr.w  r1,[r3,#0x424]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c08:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x424])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c0c: str.w  r1,[r2,#0x548]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c0c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x548])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c10: ldr.w  r1,[r3,#0x428]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c10:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x428])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c14: str.w  r1,[r2,#0x54c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c14:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x54c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c18: ldr.w  r1,[r3,#0x42c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c18:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x42c])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c1c: str.w  r1,[r2,#0x550]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c1c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x550])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c20: ldr.w  r1,[r3,#0x430]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c20:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x430])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c24: str.w  r1,[r2,#0x554]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c24:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x554])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c28: ldr.w  r1,[r3,#0x434]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c28:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x434])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c2c: str.w  r1,[r2,#0x560]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c2c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x560])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c30: ldr.w  r1,[r3,#0x438]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c30:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x438])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c34: str.w  r1,[r2,#0x564]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c34:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x564])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c38: ldr.w  r1,[r3,#0x43c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c38:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x43c])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c3c: str.w  r1,[r2,#0x568]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c3c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x568])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c40: ldr.w  r1,[r3,#0x440]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c40:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x440])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c44: str.w  r1,[r2,#0x56c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c44:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x56c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c48: ldr.w  r3,[r3,#0x444]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c48:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x444])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c4c: str.w  r3,[r2,#0x570]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c4c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x570])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7090,
		block_size=158,
		insn_addrs="[7090, 7094, 7096, 7100, 7104, 7108, 7112, 7116, 7120, 7124, 7128, 7132, 7136, 7140, 7144, 7148, 7152, 7156, 7160, 7164, 7168, 7172, 7176, 7180, 7184, 7188, 7192, 7196, 7200, 7204, 7208, 7212, 7216, 7220, 7224, 7228, 7232, 7236, 7240, 7244]"
	];
	7090 -> { 7248 };


	7248 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001c50</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001c50: bl     0x1b70
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c50:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1c54, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1b70:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7248,
		block_size=4,
		insn_addrs="[7248]"
	];
	7248 -> { 7024, 7252 };


	7252 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001c54</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001c54: cbz    r0,0x1c5e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c54:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1c5e:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7252,
		block_size=2,
		insn_addrs="[7252]"
	];
	7252 -> { 7262, 7254 };


	7254 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001c56</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001c56: ldr    r3,[0x1d40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c56:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1d40:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c58: ldr    r2,[0x1d44]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c58:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[1d44:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c5a: str.w  r2,[r3,#0x68c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c5a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x68c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7254,
		block_size=8,
		insn_addrs="[7254, 7256, 7258]"
	];
	7254 -> { 7262 };


	7262 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001c5e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001c5e: bl     0x1b70
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c5e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1c62, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1b70:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7262,
		block_size=4,
		insn_addrs="[7262]"
	];
	7262 -> { 7024, 7266 };


	7266 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001c62</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001c62: cbz    r0,0x1c6c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c62:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1c6c:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7266,
		block_size=2,
		insn_addrs="[7266]"
	];
	7266 -> { 7276, 7268 };


	7268 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001c64</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001c64: ldr    r3,[0x1d48]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c64:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1d48:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c66: movs   r2,#0xfb
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c66:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0xfb])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c68: str.w  r2,[r3,#0x518]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c68:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x518])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7268,
		block_size=8,
		insn_addrs="[7268, 7270, 7272]"
	];
	7268 -> { 7276 };


	7276 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001c6c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001c6c: bl     0x1b70
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c6c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1c70, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1b70:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7276,
		block_size=4,
		insn_addrs="[7276]"
	];
	7276 -> { 7024, 7280 };


	7280 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001c70</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001c70: cbz    r0,0x1c90
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c70:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1c90:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7280,
		block_size=2,
		insn_addrs="[7280]"
	];
	7280 -> { 7312, 7282 };


	7282 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001c72</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001c72: mov.w  r1,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c72:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c76: mov.w  r3,#0x10000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c76:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x10000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c7a: ldr.w  r2,[r1,#0xee4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c7a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0xee4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c7e: ldr.w  r3,[r3,#0x258]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c7e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x258])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c82: bic    r2,r2,#0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c82:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xf])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c86: and    r3,r3,#0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c86:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xf])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c8a: orrs   r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c8a:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c8c: str.w  r3,[r1,#0xee4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c8c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0xee4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7282,
		block_size=30,
		insn_addrs="[7282, 7286, 7290, 7294, 7298, 7302, 7306, 7308]"
	];
	7282 -> { 7312 };


	7312 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001c90</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001c90: bl     0x1b70
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c90:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1c94, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1b70:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7312,
		block_size=4,
		insn_addrs="[7312]"
	];
	7312 -> { 7024, 7316 };


	7316 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001c94</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001c94: cbz    r0,0x1ca0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c94:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1ca0:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7316,
		block_size=2,
		insn_addrs="[7316]"
	];
	7316 -> { 7328, 7318 };


	7318 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001c96</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001c96: ldr    r3,[0x1d4c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c96:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1d4c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c98: mov.w  r2,#0x200
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c98:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x200])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001c9c: str.w  r2,[r3,#0x640]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1c9c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x640])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7318,
		block_size=10,
		insn_addrs="[7318, 7320, 7324]"
	];
	7318 -> { 7328 };


	7328 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001ca0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001ca0: mov.w  r3,#0x10000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ca0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x10000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ca4: ldr.w  r3,[r3,#0x130]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ca4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x130])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ca8: cmp    r3,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ca8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x8, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x8])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001caa: bne    0x1ce2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1caa:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1ce2:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7328,
		block_size=12,
		insn_addrs="[7328, 7332, 7336, 7338]"
	];
	7328 -> { 7394, 7340 };


	7340 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001cac</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001cac: mov.w  r3,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cac:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cb0: ldr.w  r2,[r3,#0x400]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cb0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x400])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cb4: lsls   r2,r2,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cb4:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cb6: itt    mi
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cb6:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85e80:1], in=[NG, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cb8: mvn    r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cb8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1cbc:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r2, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cbc: str.w  r2,[r3,#0x400]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cbc:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x400])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[680:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1cc0:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cc0: mov.w  r3,#0x10000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cc0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x10000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cc4: ldr.w  r3,[r3,#0x134]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cc4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x134])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cc8: cmp    r3,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cc8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x5, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cca: bhi    0x1cd2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cca:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1cd2:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7340,
		block_size=32,
		insn_addrs="[7340, 7344, 7348, 7350, 7352, 7356, 7360, 7364, 7368, 7370]"
	];
	7340 -> { 7378, 7372 };


	7372 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001ccc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001ccc: ldr    r2,[0x1d50]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ccc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[1d50:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cce: ldrb   r3,[r2,r3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cce:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r2, r3])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97a00:1], in=[0x600000f0c300, unique[92900:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97a00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cd0: cbz    r3,0x1ce2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cd0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1ce2:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7372,
		block_size=6,
		insn_addrs="[7372, 7374, 7376]"
	];
	7372 -> { 7394, 7378 };


	7378 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001cd2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001cd2: mov.w  r3,#0x10001000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cd2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87800:4], in=[0x10001000])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87800:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cd6: ldr.w  r2,[r3,#0x208]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cd6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x208])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cda: mov.w  r3,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cda:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cde: str.w  r2,[r3,#0x558]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cde:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x558])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7378,
		block_size=16,
		insn_addrs="[7378, 7382, 7386, 7390]"
	];
	7378 -> { 7394 };


	7394 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001ce2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001ce2: mov.w  r3,#0x10001000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ce2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87800:4], in=[0x10001000])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87800:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ce6: ldr.w  r2,[r3,#0x200]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ce6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x200])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cea: cmp    r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cea:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cec: blt    0x1cf6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cec:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1cf6:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7394,
		block_size=12,
		insn_addrs="[7394, 7398, 7402, 7404]"
	];
	7394 -> { 7414, 7406 };


	7406 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001cee</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001cee: ldr.w  r3,[r3,#0x204]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cee:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x204])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cf2: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cf2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cf4: bge    0x1d3c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cf4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1d3c:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7406,
		block_size=8,
		insn_addrs="[7406, 7410, 7412]"
	];
	7406 -> { 7484, 7414 };


	7414 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001cf6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001cf6: ldr    r1,[0x1d54]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cf6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[1d54:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cf8: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cf8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cfa: mov.w  r0,#0x10001000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cfa:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87800:4], in=[0x10001000])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87800:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001cfe: str.w  r3,[r1,#0x504]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1cfe:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x504])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d02: movs   r4,#0x12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d02:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x12])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d04: bl     0x1b94
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d04:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1d08, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1b94:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7414,
		block_size=18,
		insn_addrs="[7414, 7416, 7418, 7422, 7426, 7428]"
	];
	7414 -> { 7060, 7432 };


	7432 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d08</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d08: str.w  r4,[r0,#0x200]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d08:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x200])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d0c: bl     0x1b94
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d0c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1d10, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1b94:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7432,
		block_size=8,
		insn_addrs="[7432, 7436]"
	];
	7432 -> { 7060, 7440 };


	7440 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d10</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d10: str.w  r4,[r0,#0x204]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d10:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x204])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d14: bl     0x1b94
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d14:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1d18, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1b94:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7440,
		block_size=8,
		insn_addrs="[7440, 7444]"
	];
	7440 -> { 7060, 7448 };


	7448 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d18</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d18: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d18:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d1a: str.w  r3,[r1,#0x504]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d1a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x504])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d1e: bl     0x1b94
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d1e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1d22, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1b94:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7448,
		block_size=10,
		insn_addrs="[7448, 7450, 7454]"
	];
	7448 -> { 7060, 7458 };


	7458 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d22</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d22: dsb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d22:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2d, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d26: ldr    r1,[0x1d58]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d26:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[1d58:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d28: ldr    r3,[0x1d5c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d28:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1d5c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d2a: ldr    r2,[r1,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d2a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d2c: and    r2,r2,#0x700
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d2c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x700])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d30: orrs   r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d30:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d32: str    r3,[r1,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d32:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d34: dsb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d34:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2d, 0xf])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7458,
		block_size=22,
		insn_addrs="[7458, 7462, 7464, 7466, 7468, 7472, 7474, 7476]"
	];
	7458 -> { 7480 };


	7480 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d38</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d38: nop    
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d38:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d3a: b      0x1d38
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d3a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1d38:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7480,
		block_size=4,
		insn_addrs="[7480, 7482]"
	];
	7480 -> { 7480 };


	7484 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d3c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d3c: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d3c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7484,
		block_size=2,
		insn_addrs="[7484]"
	];



	7520 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d60</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d60: push   {r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d60:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7520,
		block_size=2,
		insn_addrs="[7520]"
	];
	7520 -> { 7522 };


	7522 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d62</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d62: ldr    r4,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d62:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d64: cbz    r4,0x1d9a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d64:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1d9a:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7522,
		block_size=4,
		insn_addrs="[7522, 7524]"
	];
	7522 -> { 7578, 7526 };


	7526 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d66</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d66: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d66:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d6a: clz    r3,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d6a:4]])<br/>
			&nbsp;&nbsp;LZCOUNT(out=r3, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d6e: rsb.w  r3,r3,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d6e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[unique[87700:4], r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[unique[87700:4], r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d72: uxtb   r3, r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d72:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d74: movs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d74:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d76: lsls   r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d76:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c680:4], in=[r3, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9c680:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, unique[9c680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d78: bic.w  r2,r4,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d78:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95780:4], in=[r2])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r4, unique[95780:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7526,
		block_size=22,
		insn_addrs="[7526, 7530, 7534, 7538, 7540, 7542, 7544]"
	];
	7526 -> { 7548 };


	7548 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d7c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d7c: ldrex  r5,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d7c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98680:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x12e, unique[98680:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[98680:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d80: cmp    r5,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d80:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r4, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r5, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d82: bne    0x1d8e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d82:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1d8e:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7548,
		block_size=8,
		insn_addrs="[7548, 7552, 7554]"
	];
	7548 -> { 7566, 7556 };


	7556 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d84</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d84: strex  r12,r2,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d84:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c4200:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c4280:4], in=[r2])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[c4380:1], in=[0x25, unique[c4200:4]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[0x1])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[c4400:1], in=[unique[c4380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1d88:4], unique[c4400:1]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c4200:4], unique[c4280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d88: cmp.w  r12,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d88:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r12])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r12, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r12, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d8c: bne    0x1d7c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d8c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1d7c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7556,
		block_size=10,
		insn_addrs="[7556, 7560, 7564]"
	];
	7556 -> { 7548, 7566 };


	7566 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d8e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d8e: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d8e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d92: bne    0x1d62
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d92:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1d62:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7566,
		block_size=6,
		insn_addrs="[7566, 7570]"
	];
	7566 -> { 7522, 7572 };


	7572 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d94</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d94: ldr    r0,[0x1da0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d94:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[1da0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d96: strb   r3,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d96:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7572,
		block_size=4,
		insn_addrs="[7572, 7574]"
	];
	7572 -> { 7576 };


	7576 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d98</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d98: pop    {r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d98:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7576,
		block_size=2,
		insn_addrs="[7576]"
	];



	7578 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001d9a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001d9a: ldr    r0,[0x1da4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d9a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[1da4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001d9c: b      0x1d98
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1d9c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1d98:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7578,
		block_size=4,
		insn_addrs="[7578, 7580]"
	];
	7578 -> { 7576 };


	7592 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001da8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001da8: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1da8:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001daa: ldr    r3,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1daa:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001dac: lsrs   r3,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dac:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9ce80:4], in=[r1, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9ce80:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9ce80:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9ce80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9cf00:4], in=[r1, 0xff])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, unique[9cf00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001dae: lsls   r3,r3,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dae:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001db0: bmi    0x1ddc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1db0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83d80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1ddc:4], unique[83d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7592,
		block_size=10,
		insn_addrs="[7592, 7594, 7596, 7598, 7600]"
	];
	7592 -> { 7644, 7602 };


	7602 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001db2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001db2: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1db2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001db4: lsls   r3,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1db4:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c680:4], in=[r1, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9c680:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[9c680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7602,
		block_size=4,
		insn_addrs="[7602, 7604]"
	];
	7602 -> { 7606 };


	7606 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001db6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001db6: ldr    r2,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1db6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001db8: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1db8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001dbc: orr.w  r1,r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dbc:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r3, r2])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7606,
		block_size=10,
		insn_addrs="[7606, 7608, 7612]"
	];
	7606 -> { 7616 };


	7616 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001dc0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001dc0: ldrex  r4,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dc0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98680:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x12e, unique[98680:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[98680:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001dc4: cmp    r4,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dc4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001dc6: bne    0x1dd2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dc6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1dd2:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7616,
		block_size=8,
		insn_addrs="[7616, 7620, 7622]"
	];
	7616 -> { 7634, 7624 };


	7624 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001dc8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001dc8: strex  r12,r1,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dc8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c4200:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c4280:4], in=[r1])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[c4380:1], in=[0x25, unique[c4200:4]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[0x1])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[c4400:1], in=[unique[c4380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1dcc:4], unique[c4400:1]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c4200:4], unique[c4280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001dcc: cmp.w  r12,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dcc:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r12])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r12, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r12, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001dd0: bne    0x1dc0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dd0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1dc0:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7624,
		block_size=10,
		insn_addrs="[7624, 7628, 7632]"
	];
	7624 -> { 7616, 7634 };


	7634 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001dd2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001dd2: dmb    #0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dd2:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1b])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001dd6: bne    0x1db6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dd6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1db6:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7634,
		block_size=6,
		insn_addrs="[7634, 7638]"
	];
	7634 -> { 7606, 7640 };


	7640 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001dd8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001dd8: ldr    r0,[0x1de0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dd8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[1de0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7640,
		block_size=2,
		insn_addrs="[7640]"
	];
	7640 -> { 7642 };


	7642 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001dda</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001dda: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dda:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7642,
		block_size=2,
		insn_addrs="[7642]"
	];



	7644 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001ddc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001ddc: ldr    r0,[0x1de4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ddc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[1de4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001dde: b      0x1dda
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dde:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1dda:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7644,
		block_size=4,
		insn_addrs="[7644, 7646]"
	];
	7644 -> { 7642 };


	7656 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001de8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001de8: ldr    r3,[0x1df0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1de8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1df0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001dea: str.w  r0,[r3,#0x504]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dea:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x504])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001dee: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dee:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7656,
		block_size=8,
		insn_addrs="[7656, 7658, 7662]"
	];



	7668 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001df4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001df4: push   {r0,r1,r2,r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1df4:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001df6: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1df6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001df8: cbz    r0,0x1e02
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1df8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1e02:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7668,
		block_size=6,
		insn_addrs="[7668, 7670, 7672]"
	];
	7668 -> { 7682, 7674 };


	7674 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001dfa</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001dfa: cmp    r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dfa:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001dfc: beq    0x1e46
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dfc:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1e46:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7674,
		block_size=4,
		insn_addrs="[7674, 7676]"
	];
	7674 -> { 7750, 7678 };


	7678 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001dfe</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001dfe: add    sp,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1dfe:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0xc])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e00: pop    {r4,r5,r6,r7,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e00:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7678,
		block_size=4,
		insn_addrs="[7678, 7680]"
	];



	7682 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e02</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e02: mov.w  r3,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e02:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e06: movs   r2,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e06:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e08: str.w  r2,[r3,#0x308]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e08:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x308])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e0c: movs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e0c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e0e: str    r2,[r3,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e0e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e10: str.w  r0,[r3,#0x104]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e10:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x104])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e14: ldr.w  r3,[r3,#0x104]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e14:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x104])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e18: mov    r6,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e18:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7682,
		block_size=24,
		insn_addrs="[7682, 7686, 7688, 7692, 7694, 7696, 7700, 7704]"
	];
	7682 -> { 7706 };


	7706 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e1a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e1a: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e1a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e1c: strb.w r3,[sp,#0x7]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e1c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x7])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e20: movw   r5,#0x2710
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e20:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[0x2710])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e24: mov.w  r7,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e24:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7706,
		block_size=14,
		insn_addrs="[7706, 7708, 7712, 7716]"
	];
	7706 -> { 7720 };


	7720 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e28</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e28: cbz    r4,0x1e60
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e28:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1e60:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7720,
		block_size=2,
		insn_addrs="[7720]"
	];
	7720 -> { 7776, 7722 };


	7722 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e2a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e2a: cmp    r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e2a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e2c: bne    0x1dfe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e2c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1dfe:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7722,
		block_size=4,
		insn_addrs="[7722, 7724]"
	];
	7722 -> { 7678, 7726 };


	7726 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e2e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e2e: ldr.w  r3,[r7,#0x40c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e2e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r7, 0x40c])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e32: and    r3,r3,#0x10000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e32:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x10000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e36: cbnz   r6,0x1ea4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e36:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1ea4:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7726,
		block_size=10,
		insn_addrs="[7726, 7730, 7734]"
	];
	7726 -> { 7844, 7736 };


	7736 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e38</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e38: cbz    r3,0x1e9c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e38:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1e9c:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7736,
		block_size=2,
		insn_addrs="[7736]"
	];
	7736 -> { 7836, 7738 };


	7738 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e3a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e3a: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e3a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e3c: bl     0x3f62
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e3c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1e40, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3f62:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7738,
		block_size=6,
		insn_addrs="[7738, 7740]"
	];
	7738 -> { 16226, 7744 };


	7744 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e40</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e40: subs   r5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e40:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r5, in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e42: bne    0x1e2e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e42:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1e2e:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7744,
		block_size=4,
		insn_addrs="[7744, 7746]"
	];
	7744 -> { 7726, 7748 };


	7748 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e44</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e44: b      0x1e9c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e44:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1e9c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7748,
		block_size=2,
		insn_addrs="[7748]"
	];
	7748 -> { 7836 };


	7750 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e46</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e46: mov.w  r3,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e46:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e4a: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e4a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e4c: str.w  r0,[r3,#0x308]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e4c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x308])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e50: str    r0,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e50:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e52: str.w  r2,[r3,#0x100]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e52:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x100])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e56: ldr.w  r3,[r3,#0x100]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e56:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x100])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e5a: add.w  r6,sp,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e5a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r6, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e5e: b      0x1e1a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e5e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1e1a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7750,
		block_size=26,
		insn_addrs="[7750, 7754, 7756, 7760, 7762, 7766, 7770, 7774]"
	];
	7750 -> { 7706 };


	7776 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e60</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e60: ldr.w  r3,[r7,#0x418]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e60:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r7, 0x418])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e64: and    r3,r3,#0x10000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e64:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x10000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e68: cbnz   r6,0x1e7a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e68:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1e7a:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7776,
		block_size=10,
		insn_addrs="[7776, 7780, 7784]"
	];
	7776 -> { 7802, 7786 };


	7786 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e6a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e6a: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e6a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e6c: beq    0x1dfe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e6c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1dfe:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7786,
		block_size=4,
		insn_addrs="[7786, 7788]"
	];
	7786 -> { 7678, 7790 };


	7790 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e6e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e6e: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e6e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e70: bl     0x3f62
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e70:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1e74, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3f62:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7790,
		block_size=6,
		insn_addrs="[7790, 7792]"
	];
	7790 -> { 16226, 7796 };


	7796 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e74</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e74: subs   r5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e74:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r5, in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e76: bne    0x1e60
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e76:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1e60:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7796,
		block_size=4,
		insn_addrs="[7796, 7798]"
	];
	7796 -> { 7776, 7800 };


	7800 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e78</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e78: b      0x1dfe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e78:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1dfe:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7800,
		block_size=2,
		insn_addrs="[7800]"
	];
	7800 -> { 7678 };


	7802 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e7a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e7a: ldr.w  r2,[r7,#0x418]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e7a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r7, 0x418])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e7e: and    r2,r2,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e7e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x3])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e82: str    r2,[r6,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e82:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e84: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e84:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e86: beq    0x1dfe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e86:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1dfe:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7802,
		block_size=14,
		insn_addrs="[7802, 7806, 7810, 7812, 7814]"
	];
	7802 -> { 7678, 7816 };


	7816 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e88</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e88: ldrb.w r0,[sp,#0x7]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e88:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x7])<br/>
			&nbsp;&nbsp;LOAD(out=unique[98e80:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[98e80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e8c: cmp    r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e8c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e8e: bne    0x1e98
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e8e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1e98:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7816,
		block_size=8,
		insn_addrs="[7816, 7820, 7822]"
	];
	7816 -> { 7832, 7824 };


	7824 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e90</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e90: bl     0x3f62
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e90:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1e94, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3f62:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7824,
		block_size=4,
		insn_addrs="[7824]"
	];
	7824 -> { 16226, 7828 };


	7828 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e94</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e94: subs   r5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e94:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r5, in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e96: bne    0x1e28
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e96:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1e28:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7828,
		block_size=4,
		insn_addrs="[7828, 7830]"
	];
	7828 -> { 7720, 7832 };


	7832 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e98</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e98: cmp    r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e98:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e9a: bne    0x1dfe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e9a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1dfe:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7832,
		block_size=4,
		insn_addrs="[7832, 7834]"
	];
	7832 -> { 7678, 7836 };


	7836 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001e9c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001e9c: ldr    r3,[0x1eb4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e9c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1eb4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001e9e: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1e9e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ea0: strb   r2,[r3,#0x5]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ea0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x5])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ea2: b      0x1dfe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ea2:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1dfe:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7836,
		block_size=8,
		insn_addrs="[7836, 7838, 7840, 7842]"
	];
	7836 -> { 7678 };


	7844 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001ea4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001ea4: ldr.w  r2,[r7,#0x40c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ea4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r7, 0x40c])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ea8: and    r2,r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ea8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001eac: strb   r2,[r6,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1eac:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001eae: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1eae:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001eb0: bne    0x1e88
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1eb0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1e88:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7844,
		block_size=14,
		insn_addrs="[7844, 7848, 7852, 7854, 7856]"
	];
	7844 -> { 7816, 7858 };


	7858 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001eb2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001eb2: b      0x1e9c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1eb2:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1e9c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7858,
		block_size=2,
		insn_addrs="[7858]"
	];
	7858 -> { 7836 };


	7864 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001eb8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001eb8: ldr    r3,[0x1ecc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1eb8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1ecc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001eba: ldrb   r2,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1eba:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ebc: cbnz   r2,0x1ec8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ebc:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1ec8:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7864,
		block_size=6,
		insn_addrs="[7864, 7866, 7868]"
	];
	7864 -> { 7880, 7870 };


	7870 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001ebe</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001ebe: movs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ebe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ec0: str    r0,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ec0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ec2: strh   r2,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ec2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ec4: ldr    r0,[0x1ed0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ec4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[1ed0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ec6: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ec6:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7870,
		block_size=10,
		insn_addrs="[7870, 7872, 7874, 7876, 7878]"
	];



	7880 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001ec8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001ec8: ldr    r0,[0x1ed4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ec8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[1ed4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001eca: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1eca:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7880,
		block_size=4,
		insn_addrs="[7880, 7882]"
	];



	7896 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001ed8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001ed8: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ed8:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001eda: ldr    r3,[0x1ef8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1eda:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[1ef8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001edc: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1edc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ede: cbz    r3,0x1eec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ede:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1eec:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7896,
		block_size=8,
		insn_addrs="[7896, 7898, 7900, 7902]"
	];
	7896 -> { 7916, 7904 };


	7904 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001ee0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001ee0: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ee0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ee2: bl     0x880
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ee2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1ee6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[880:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7904,
		block_size=6,
		insn_addrs="[7904, 7906]"
	];
	7904 -> { 2176, 7910 };


	7910 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001ee6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001ee6: cbnz   r0,0x1eec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ee6:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1eec:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7910,
		block_size=2,
		insn_addrs="[7910]"
	];
	7910 -> { 7916, 7912 };


	7912 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001ee8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001ee8: bl     0x864
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ee8:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1eec, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[864:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7912,
		block_size=4,
		insn_addrs="[7912]"
	];
	7912 -> { 2148, 7916 };


	7916 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001eec</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001eec: mov.w  r3,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1eec:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ef0: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ef0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ef2: str.w  r2,[r3,#0x518]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ef2:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x518])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001ef6: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1ef6:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7916,
		block_size=12,
		insn_addrs="[7916, 7920, 7922, 7926]"
	];



	7932 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001efc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001efc: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1efc:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001efe: cbz    r0,0x1f06
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1efe:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1f06:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7932,
		block_size=4,
		insn_addrs="[7932, 7934]"
	];
	7932 -> { 7942, 7936 };


	7936 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f00</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f00: cmp    r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f00:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f02: beq    0x1f8c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f02:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1f8c:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7936,
		block_size=4,
		insn_addrs="[7936, 7938]"
	];
	7936 -> { 8076, 7940 };


	7940 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f04</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f04: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f04:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7940,
		block_size=2,
		insn_addrs="[7940]"
	];



	7942 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f06</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f06: mov.w  r3,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f06:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f0a: ldr.w  r1,[r3,#0x418]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f0a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x418])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f0e: ldr.w  r2,[r3,#0x418]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f0e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x418])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f12: lsls   r0,r1,#0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f12:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0xf, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r1, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0xf, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0xf, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r1, 0xf])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f14: bpl    0x1f5a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f14:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1f5a:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7942,
		block_size=16,
		insn_addrs="[7942, 7946, 7950, 7954, 7956]"
	];
	7942 -> { 8026, 7958 };


	7958 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f16</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f16: and    r3,r2,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f16:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x3])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f1a: cmp    r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f1a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f1c: beq    0x1f28
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f1c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1f28:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7958,
		block_size=8,
		insn_addrs="[7958, 7962, 7964]"
	];
	7958 -> { 7976, 7966 };


	7966 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f1e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f1e: cbz    r3,0x1f26
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f1e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1f26:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7966,
		block_size=2,
		insn_addrs="[7966]"
	];
	7966 -> { 7974, 7968 };


	7968 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f20</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f20: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f20:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f22: bl     0x1df4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f22:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x1f26, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1df4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7968,
		block_size=6,
		insn_addrs="[7968, 7970]"
	];
	7968 -> { 7668, 7974 };


	7974 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f26</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f26: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f26:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7974,
		block_size=2,
		insn_addrs="[7974]"
	];
	7974 -> { 7976 };


	7976 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f28</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f28: mov.w  r2,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f28:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f2c: movs   r0,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f2c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f2e: str.w  r3,[r2,#0x518]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f2e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x518])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f32: movs   r2,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f32:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f34: mov.w  r3,#0x104
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f34:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x104])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7976,
		block_size=16,
		insn_addrs="[7976, 7980, 7982, 7986, 7988]"
	];
	7976 -> { 7992 };


	7992 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f38</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f38: add.w  r3,r3,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f38:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f3c: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f3c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f3e: str    r1,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f3e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f40: add.w  r2,r2,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f40:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f44: ldr    r4,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f44:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f46: movs   r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f46:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f48: str    r4,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f48:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f4a: ldr    r2,[0x1fa0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f4a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[1fa0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f4c: ldr    r2,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f4c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f4e: cbz    r2,0x1f94
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f4e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1f94:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=7992,
		block_size=24,
		insn_addrs="[7992, 7996, 7998, 8000, 8004, 8006, 8008, 8010, 8012, 8014]"
	];
	7992 -> { 8084, 8016 };


	8016 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f50</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f50: mov.w  r3,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f50:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f54: str.w  r0,[r3,#0x304]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f54:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x304])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f58: b      0x1f04
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f58:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1f04:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8016,
		block_size=10,
		insn_addrs="[8016, 8020, 8024]"
	];
	8016 -> { 7940 };


	8026 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f5a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f5a: ldr.w  r2,[r3,#0x414]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f5a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x414])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f5e: lsls   r1,r2,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f5e:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r2, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f60: bpl    0x1f26
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f60:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1f26:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8026,
		block_size=8,
		insn_addrs="[8026, 8030, 8032]"
	];
	8026 -> { 7974, 8034 };


	8034 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f62</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f62: ldr.w  r2,[r3,#0x41c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f62:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x41c])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f66: lsls   r2,r2,#0x1e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f66:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1e, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, 0x1e])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f68: bmi    0x1f20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f68:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83d80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1f20:4], unique[83d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8034,
		block_size=8,
		insn_addrs="[8034, 8038, 8040]"
	];
	8034 -> { 7968, 8042 };


	8042 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f6a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f6a: ldr    r2,[0x1fa0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f6a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[1fa0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f6c: ldr    r2,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f6c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f6e: cbz    r2,0x1f78
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f6e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1f78:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8042,
		block_size=6,
		insn_addrs="[8042, 8044, 8046]"
	];
	8042 -> { 8056, 8048 };


	8048 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f70</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f70: movs   r2,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f70:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f72: str.w  r2,[r3,#0x304]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f72:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x304])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f76: b      0x1f04
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f76:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1f04:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8048,
		block_size=8,
		insn_addrs="[8048, 8050, 8054]"
	];
	8048 -> { 7940 };


	8056 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f78</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f78: ldr.w  r2,[r3,#0x104]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f78:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x104])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f7c: cmp    r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f7c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f7e: beq    0x1f78
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f7e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1f78:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8056,
		block_size=8,
		insn_addrs="[8056, 8060, 8062]"
	];
	8056 -> { 8056, 8064 };


	8064 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f80</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f80: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f80:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f82: str.w  r2,[r3,#0x104]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f82:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x104])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f86: ldr.w  r3,[r3,#0x104]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f86:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x104])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f8a: b      0x1f04
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f8a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1f04:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8064,
		block_size=12,
		insn_addrs="[8064, 8066, 8070, 8074]"
	];
	8064 -> { 7940 };


	8076 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f8c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f8c: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f8c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f8e: mov.w  r3,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f8e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f92: b      0x1f38
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f92:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1f38:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8076,
		block_size=8,
		insn_addrs="[8076, 8078, 8082]"
	];
	8076 -> { 7992 };


	8084 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f94</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f94: ldr    r2,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f94:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f96: cmp    r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f96:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f98: beq    0x1f94
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f98:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[1f94:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8084,
		block_size=6,
		insn_addrs="[8084, 8086, 8088]"
	];
	8084 -> { 8084, 8090 };


	8090 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00001f9a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00001f9a: str    r1,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f9a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f9c: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f9c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00001f9e: b      0x1f04
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[1f9e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1f04:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8090,
		block_size=6,
		insn_addrs="[8090, 8092, 8094]"
	];
	8090 -> { 7940 };


	8204 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000200c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000200c: ldr    r3,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[200c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000200e: and    r2,r3,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[200e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002012: lsrs   r3,r3,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2012:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002014: str    r2,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2014:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002016: beq    0x2022
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2016:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2022:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8204,
		block_size=12,
		insn_addrs="[8204, 8206, 8210, 8212, 8214]"
	];
	8204 -> { 8226, 8216 };


	8216 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002018</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002018: cmp    r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2018:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000201a: ldr    r0,[0x2028]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[201a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[2028:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000201c: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[201c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000201e: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[201e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2020:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002020: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2020:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8216,
		block_size=10,
		insn_addrs="[8216, 8218, 8220, 8222, 8224]"
	];



	8226 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002022</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002022: mov.w  r0,#0x50000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2022:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x50000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002026: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2026:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8226,
		block_size=6,
		insn_addrs="[8226, 8230]"
	];



	8236 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000202c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000202c: ldr    r2,[0x203c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[202c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[203c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000202e: lsrs   r3,r0,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[202e:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r0, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r0, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002030: and    r0,r0,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2030:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002034: ldrb   r3,[r2,r3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2034:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r2, r3])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97a00:1], in=[0x600000f0c300, unique[92900:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97a00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002036: add    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2036:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002038: uxtb   r0, r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2038:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000203a: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[203a:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8236,
		block_size=16,
		insn_addrs="[8236, 8238, 8240, 8244, 8246, 8248, 8250]"
	];



	8256 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002040</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002040: push   {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2040:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002042: mov    r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2042:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002044: bl     0x202c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2044:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2048, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[202c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8256,
		block_size=8,
		insn_addrs="[8256, 8258, 8260]"
	];
	8256 -> { 8236, 8264 };


	8264 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002048</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002048: ldr    r4,[0x207c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2048:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[ram[207c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000204a: adds   r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[204a:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000204c: mov    r6,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[204c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000204e: ldrh.w r3,[r4,r0,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[204e:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r4, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002052: lsls   r2,r3,#0x17
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2052:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x17, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x17, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x17, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r3, 0x17])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002054: bpl    0x2068
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2054:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2068:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8264,
		block_size=14,
		insn_addrs="[8264, 8266, 8268, 8270, 8274, 8276]"
	];
	8264 -> { 8296, 8278 };


	8278 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002056</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002056: ubfx   r3,r3,#0x9,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2056:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x9])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000205a: add.w  r2,r4,r3, lsl #0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[205a:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x3])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r3, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r3, 0x3])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r4, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000205e: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[205e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002060: ldr.w  r3,[r4,r3,lsl #0x3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2060:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[98a00:4], in=[r3, 0x3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98b00:4], in=[r4, unique[98a00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[98b00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002064: ldr    r2,[r2,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2064:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002066: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2066:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2068, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8278,
		block_size=18,
		insn_addrs="[8278, 8282, 8286, 8288, 8292, 8294]"
	];
	8278 -> { 8296 };


	8296 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002068</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002068: ldr    r3,[r4,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2068:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000206a: cbz    r3,0x2078
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[206a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2078:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8296,
		block_size=4,
		insn_addrs="[8296, 8298]"
	];
	8296 -> { 8312, 8300 };


	8300 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000206c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000206c: ldr    r2,[r4,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[206c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000206e: mov    r1,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[206e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002070: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2070:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002072: pop.w  {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2072:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002076: bx     r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2076:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8300,
		block_size=12,
		insn_addrs="[8300, 8302, 8304, 8306, 8310]"
	];



	8312 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002078</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002078: pop    {r4,r5,r6,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2078:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8312,
		block_size=2,
		insn_addrs="[8312]"
	];



	8320 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002080</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002080: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2080:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002082: bl     0x202c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2082:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2086, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[202c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8320,
		block_size=6,
		insn_addrs="[8320, 8322]"
	];
	8320 -> { 8236, 8326 };


	8326 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002086</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002086: ldr    r3,[0x2094]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2086:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2094:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002088: adds   r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2088:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000208a: ldrh.w r0,[r3,r0,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[208a:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r3, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000208e: lsrs   r0,r0,#0xd
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[208e:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0xd])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r0, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r0, in=[r0, 0xd])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002090: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2090:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8326,
		block_size=12,
		insn_addrs="[8326, 8328, 8330, 8334, 8336]"
	];



	8344 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002098</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002098: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2098:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000209a: bl     0x202c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[209a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x209e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[202c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8344,
		block_size=6,
		insn_addrs="[8344, 8346]"
	];
	8344 -> { 8236, 8350 };


	8350 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000209e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000209e: ldr    r3,[0x20ac]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[209e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[20ac:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020a0: adds   r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20a0:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020a2: ldrh.w r0,[r3,r0,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20a2:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r3, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020a6: ubfx   r0,r0,#0x1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20a6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r0, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r0, in=[r0, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020aa: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20aa:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8350,
		block_size=14,
		insn_addrs="[8350, 8352, 8354, 8358, 8362]"
	];



	8368 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000020b0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000020b0: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20b0:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020b2: bl     0x202c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20b2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x20b6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[202c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8368,
		block_size=6,
		insn_addrs="[8368, 8370]"
	];
	8368 -> { 8236, 8374 };


	8374 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000020b6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000020b6: ldr    r3,[0x20c4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20b6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[20c4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020b8: adds   r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20b8:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020ba: ldrh.w r0,[r3,r0,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20ba:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r3, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020be: ubfx   r0,r0,#0x5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20be:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x5])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r0, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r0, in=[r0, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020c2: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20c2:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8374,
		block_size=14,
		insn_addrs="[8374, 8376, 8378, 8382, 8386]"
	];



	8392 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000020c8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000020c8: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20c8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020ca: ands   r0,r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20ca:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020ce: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20ce:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020d0: uxtb   r4, r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20d0:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r4, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020d2: bne    0x20f0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20d2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[20f0:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8392,
		block_size=12,
		insn_addrs="[8392, 8394, 8398, 8400, 8402]"
	];
	8392 -> { 8432, 8404 };


	8404 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000020d4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000020d4: lsls   r2,r4,#0x1e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20d4:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1e, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r4, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r4, 0x1e])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020d6: ubfx   r0,r4,#0x1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20d6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r4, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r0, in=[r0, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020da: bpl    0x2102
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20da:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2102:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8404,
		block_size=8,
		insn_addrs="[8404, 8406, 8410]"
	];
	8404 -> { 8450, 8412 };


	8412 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000020dc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000020dc: ldr    r2,[0x2104]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20dc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[2104:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020de: ldr.w  r0,[r2,#0x520]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20de:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x520])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020e2: str    r0,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20e2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020e4: str.w  r0,[r2,#0x520]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20e4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x520])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020e8: subs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20e8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020ea: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20ea:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020ec: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20ec:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[20ee:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020ee: b      0x2102
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20ee:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2102:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8412,
		block_size=20,
		insn_addrs="[8412, 8414, 8418, 8420, 8424, 8426, 8428, 8430]"
	];
	8412 -> { 8450 };


	8432 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000020f0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000020f0: mov.w  r1,#0x50000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20f0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x50000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020f4: ldr.w  r2,[r1,#0x520]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20f4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x520])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020f8: str    r2,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20f8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020fa: str.w  r2,[r1,#0x520]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20fa:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x520])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000020fe: cmp    r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[20fe:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002100: beq    0x20d4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2100:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[20d4:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8432,
		block_size=18,
		insn_addrs="[8432, 8436, 8440, 8442, 8446, 8448]"
	];
	8432 -> { 8404, 8450 };


	8450 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002102</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002102: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2102:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8450,
		block_size=2,
		insn_addrs="[8450]"
	];



	8456 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002108</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002108: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2108:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000210a: bl     0x202c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[210a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x210e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[202c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8456,
		block_size=6,
		insn_addrs="[8456, 8458]"
	];
	8456 -> { 8236, 8462 };


	8462 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000210e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000210e: ldr    r2,[0x2158]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[210e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[2158:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002110: adds   r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2110:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002112: ldrh.w r3,[r2,r0,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2112:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r2, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002116: lsls   r1,r3,#0x17
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2116:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x17, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x17, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x17, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r3, 0x17])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002118: bpl    0x2154
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2118:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2154:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8462,
		block_size=12,
		insn_addrs="[8462, 8464, 8466, 8470, 8472]"
	];
	8462 -> { 8532, 8474 };


	8474 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000211a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000211a: ubfx   r1,r3,#0x9,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[211a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x9])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r1, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000211e: bic    r3,r3,#0x1f00
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[211e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x1f00])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002122: strh.w r3,[r2,r0,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2122:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3d00:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3e00:4], in=[r2, unique[c3d00:4]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3f00:2], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3e00:4], unique[c3f00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002126: add.w  r4,r2,#0xe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2126:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xe])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000212a: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[212a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8474,
		block_size=18,
		insn_addrs="[8474, 8478, 8482, 8486, 8490]"
	];
	8474 -> { 8492 };


	8492 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000212c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000212c: ldrh.w r3,[r4,#0x2]!
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[212c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91f00:4], in=[r4, 0x2])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[unique[91f00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a100:2], in=[0x600000f0c300, unique[91f00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[9a100:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002130: tst    r3,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2130:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002134: beq    0x213e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2134:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[213e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8492,
		block_size=10,
		insn_addrs="[8492, 8496, 8500]"
	];
	8492 -> { 8510, 8502 };


	8502 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002136</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002136: ubfx   r3,r3,#0x9,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2136:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x9])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000213a: cmp    r1,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[213a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r1, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000213c: beq    0x2154
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[213c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2154:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8502,
		block_size=8,
		insn_addrs="[8502, 8506, 8508]"
	];
	8502 -> { 8532, 8510 };


	8510 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000213e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000213e: adds   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[213e:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002140: cmp    r0,#0x30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2140:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x30, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x30])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x30])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002142: bne    0x212c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2142:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[212c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8510,
		block_size=6,
		insn_addrs="[8510, 8512, 8514]"
	];
	8510 -> { 8492, 8516 };


	8516 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002144</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002144: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2144:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002146: str.w  r3,[r2,r1,lsl #0x3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2146:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3200:4], in=[r1, 0x3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3300:4], in=[r2, unique[c3200:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3300:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000214a: ldr    r0,[0x215c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[214a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[215c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000214c: pop.w  {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[214c:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002150: b.w    0x1da8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2150:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1da8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8516,
		block_size=16,
		insn_addrs="[8516, 8518, 8522, 8524, 8528]"
	];
	8516 -> { 7592 };


	8532 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002154</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002154: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2154:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8532,
		block_size=2,
		insn_addrs="[8532]"
	];



	8544 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002160</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002160: push   {r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2160:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002162: mov    r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2162:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002164: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2164:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002166: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2166:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002168: movs   r6,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2168:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000216a: mov    r7,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[216a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[r0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8544,
		block_size=12,
		insn_addrs="[8544, 8546, 8548, 8550, 8552, 8554]"
	];
	8544 -> { 8556 };


	8556 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000216c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000216c: cmp    r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[216c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r1, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000216e: bne    0x2188
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[216e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2188:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8556,
		block_size=4,
		insn_addrs="[8556, 8558]"
	];
	8556 -> { 8584, 8560 };


	8560 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002170</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002170: ldr    r3,[0x21b8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2170:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[21b8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002172: ldr.w  r2,[r3,#0x17c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2172:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x17c])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002176: cbz    r2,0x2186
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2176:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2186:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8560,
		block_size=8,
		insn_addrs="[8560, 8562, 8566]"
	];
	8560 -> { 8582, 8568 };


	8568 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002178</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002178: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2178:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000217a: str.w  r2,[r3,#0x17c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[217a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x17c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000217e: ldr.w  r3,[r3,#0x17c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[217e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x17c])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002182: orr    r0,r0,#0x80000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2182:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x80000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8568,
		block_size=14,
		insn_addrs="[8568, 8570, 8574, 8578]"
	];
	8568 -> { 8582 };


	8582 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002186</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002186: pop    {r4,r5,r6,r7,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2186:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8582,
		block_size=2,
		insn_addrs="[8582]"
	];



	8584 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002188</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002188: uxtb   r3, r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2188:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000218a: lsls   r3,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[218a:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x2, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000218c: add.w  r2,r3,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[218c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002190: lsrs   r3,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2190:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002192: lsl.w  r3,r6,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2192:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9d100:4], in=[r3, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9d100:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r6, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r6, unique[9d100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002196: tst    r5,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2196:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca180:4], in=[r5, r3])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca180:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca180:4], 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002198: beq    0x21b2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2198:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[21b2:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8584,
		block_size=18,
		insn_addrs="[8584, 8586, 8588, 8592, 8594, 8598, 8600]"
	];
	8584 -> { 8626, 8602 };


	8602 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000219a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000219a: add.w  r2,r2,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[219a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000219e: add.w  r2,r2,#0x6000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[219e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x6000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021a2: ldr.w  r12,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21a2:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r12, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021a6: cmp.w  r12,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21a6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r12])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r12, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r12, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021aa: beq    0x21b2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21aa:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[21b2:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8602,
		block_size=18,
		insn_addrs="[8602, 8606, 8610, 8614, 8618]"
	];
	8602 -> { 8626, 8620 };


	8620 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000021ac</b></td></tr>
			<tr><td align="left" balign="left">
			0x000021ac: str    r7,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21ac:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021ae: ldr    r2,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21ae:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021b0: orrs   r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21b0:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8620,
		block_size=6,
		insn_addrs="[8620, 8622, 8624]"
	];
	8620 -> { 8626 };


	8626 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000021b2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000021b2: adds   r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21b2:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021b4: b      0x216c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21b4:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[216c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8626,
		block_size=4,
		insn_addrs="[8626, 8628]"
	];
	8626 -> { 8556 };


	8636 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000021bc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000021bc: push   {r0,r1,r2,r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021be: mov    r6,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21be:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021c0: mov    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21c0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021c2: bl     0x202c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21c2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x21c6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[202c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8636,
		block_size=10,
		insn_addrs="[8636, 8638, 8640, 8642]"
	];
	8636 -> { 8236, 8646 };


	8646 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000021c6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000021c6: ldr    r7,[0x222c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21c6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[ram[222c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021c8: add.w  r5,r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21c8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021cc: mov    r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21cc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021ce: ldrh.w r3,[r7,r5,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21ce:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r7, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021d2: lsls   r3,r3,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21d2:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021d4: bpl    0x2226
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21d4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2226:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8646,
		block_size=16,
		insn_addrs="[8646, 8648, 8652, 8654, 8658, 8660]"
	];
	8646 -> { 8742, 8662 };


	8662 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000021d6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000021d6: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21d6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021d8: bl     0x402e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21d8:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x21dc, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[402e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8662,
		block_size=6,
		insn_addrs="[8662, 8664]"
	];
	8662 -> { 16430, 8668 };


	8668 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000021dc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000021dc: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21dc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021de: bl     0x20b0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21de:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x21e2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[20b0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8668,
		block_size=6,
		insn_addrs="[8668, 8670]"
	];
	8668 -> { 8368, 8674 };


	8674 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000021e2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000021e2: cbz    r0,0x21f6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21e2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[21f6:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8674,
		block_size=2,
		insn_addrs="[8674]"
	];
	8674 -> { 8694, 8676 };


	8676 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000021e4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000021e4: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21e4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021e6: bl     0x2080
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21e6:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x21ea, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2080:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8676,
		block_size=6,
		insn_addrs="[8676, 8678]"
	];
	8676 -> { 8320, 8682 };


	8682 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000021ea</b></td></tr>
			<tr><td align="left" balign="left">
			0x000021ea: ldr    r1,[r6,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21ea:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021ec: add.w  r0,r0,#0x144
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21ec:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x144])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021f0: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21f0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021f2: str.w  r3,[r1,r0,lsl #0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21f2:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3200:4], in=[r0, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3300:4], in=[r1, unique[c3200:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3300:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8682,
		block_size=12,
		insn_addrs="[8682, 8684, 8688, 8690]"
	];
	8682 -> { 8694 };


	8694 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000021f6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000021f6: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21f6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021f8: bl     0x2108
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21f8:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x21fc, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2108:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8694,
		block_size=6,
		insn_addrs="[8694, 8696]"
	];
	8694 -> { 8456, 8700 };


	8700 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000021fc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000021fc: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21fc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000021fe: add    r0,sp,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[21fe:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002200: strh.w r3,[r7,r5,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2200:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3d00:4], in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3e00:4], in=[r7, unique[c3d00:4]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3f00:2], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3e00:4], unique[c3f00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002204: str    r4,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2204:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002206: bl     0x200c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2206:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x220a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[200c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8700,
		block_size=14,
		insn_addrs="[8700, 8702, 8704, 8708, 8710]"
	];
	8700 -> { 8204, 8714 };


	8714 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000220a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000220a: ldr    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[220a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000220c: add.w  r0,r0,r3, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[220c:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r3, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r3, 0x2])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002210: ldr    r3,[0x2230]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2210:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2230:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002212: ldr.w  r2,[r0,#0x700]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2212:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x700])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002216: ands   r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2216:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002218: orr    r3,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2218:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000221c: str.w  r3,[r0,#0x700]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[221c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x700])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002220: ldr    r0,[0x2234]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2220:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[2234:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8714,
		block_size=24,
		insn_addrs="[8714, 8716, 8720, 8722, 8726, 8728, 8732, 8736]"
	];
	8714 -> { 8738 };


	8738 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002222</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002222: add    sp,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2222:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0xc])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002224: pop    {r4,r5,r6,r7,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2224:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8738,
		block_size=4,
		insn_addrs="[8738, 8740]"
	];



	8742 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002226</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002226: ldr    r0,[0x2238]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2226:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[2238:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002228: b      0x2222
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2228:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2222:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8742,
		block_size=4,
		insn_addrs="[8742, 8744]"
	];
	8742 -> { 8738 };


	8764 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000223c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000223c: push   {r0,r1,r2,r3,r4,r5,r6,r7,r8,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[223c:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002240: mov    r6,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2240:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002242: mov    r8,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2242:2]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002244: mov    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2244:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002246: bl     0x202c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2246:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x224a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[202c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8764,
		block_size=14,
		insn_addrs="[8764, 8768, 8770, 8772, 8774]"
	];
	8764 -> { 8236, 8778 };


	8778 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000224a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000224a: mov    r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[224a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000224c: ldr    r1,[r6,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[224c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000224e: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[224e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002250: cbz    r1,0x2296
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2250:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2296:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8778,
		block_size=8,
		insn_addrs="[8778, 8780, 8782, 8784]"
	];
	8778 -> { 8854, 8786 };


	8786 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002252</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002252: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2252:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002254: bl     0x2098
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2254:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2258, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2098:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8786,
		block_size=6,
		insn_addrs="[8786, 8788]"
	];
	8786 -> { 8344, 8792 };


	8792 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002258</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002258: cbz    r0,0x2262
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2258:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2262:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8792,
		block_size=2,
		insn_addrs="[8792]"
	];
	8792 -> { 8802, 8794 };


	8794 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000225a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000225a: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[225a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000225c: bl     0x20b0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[225c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2260, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[20b0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8794,
		block_size=6,
		insn_addrs="[8794, 8796]"
	];
	8794 -> { 8368, 8800 };


	8800 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002260</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002260: cbnz   r0,0x22a8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2260:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[22a8:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8800,
		block_size=2,
		insn_addrs="[8800]"
	];
	8800 -> { 8872, 8802 };


	8802 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002262</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002262: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2262:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002264: strd   r3,r3,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2264:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002268: strb.w r3,[sp,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2268:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0xe])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000226c: strb.w r3,[sp,#0xf]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[226c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0xf])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002270: add.w  r2,sp,#0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2270:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xf])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002274: mov    r3,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2274:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002276: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2276:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002278: add.w  r1,sp,#0xe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2278:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xe])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000227c: bl     0x3f7e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[227c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2280, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3f7e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8802,
		block_size=30,
		insn_addrs="[8802, 8804, 8808, 8812, 8816, 8820, 8822, 8824, 8828]"
	];
	8802 -> { 16254, 8832 };


	8832 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002280</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002280: ldr    r2,[0x23a0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2280:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[23a0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002282: add.w  r1,r4,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2282:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002286: ldrh.w r3,[r2,r1,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2286:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r2, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000228a: bic    r3,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[228a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000228e: orr    r3,r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[228e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002292: strh.w r3,[r2,r1,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2292:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3d00:4], in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3e00:4], in=[r2, unique[c3d00:4]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3f00:2], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3e00:4], unique[c3f00:2]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8832,
		block_size=22,
		insn_addrs="[8832, 8834, 8838, 8842, 8846, 8850]"
	];
	8832 -> { 8854 };


	8854 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002296</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002296: ldr    r3,[r6,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2296:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002298: cbz    r3,0x22f4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2298:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[22f4:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8854,
		block_size=4,
		insn_addrs="[8854, 8856]"
	];
	8854 -> { 8948, 8858 };


	8858 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000229a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000229a: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[229a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000229c: ldrb   r7,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[229c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r7, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000229e: ldr    r1,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[229e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022a0: bl     0x2098
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22a0:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x22a4, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2098:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8858,
		block_size=10,
		insn_addrs="[8858, 8860, 8862, 8864]"
	];
	8858 -> { 8344, 8868 };


	8868 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000022a4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000022a4: cbz    r0,0x22ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22a4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[22ac:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8868,
		block_size=2,
		insn_addrs="[8868]"
	];
	8868 -> { 8876, 8870 };


	8870 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000022a6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000022a6: cbz    r1,0x22de
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22a6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[22de:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8870,
		block_size=2,
		insn_addrs="[8870]"
	];
	8870 -> { 8926, 8872 };


	8872 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000022a8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000022a8: ldr    r0,[0x23a4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22a8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[23a4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022aa: b      0x22fa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22aa:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[22fa:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8872,
		block_size=4,
		insn_addrs="[8872, 8874]"
	];
	8872 -> { 8954 };


	8876 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000022ac</b></td></tr>
			<tr><td align="left" balign="left">
			0x000022ac: ldr    r2,[0x23a0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22ac:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[23a0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022ae: add.w  r0,r4,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22ae:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022b2: ldrh.w r3,[r2,r0,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22b2:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r2, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022b6: bic    r3,r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22b6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022ba: lsls   r3,r3,#0x13
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22ba:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x13, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x13, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x13, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x13])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022bc: lsrs   r3,r3,#0x13
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x13])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, 0x13])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022be: strh.w r3,[r2,r0,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22be:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3d00:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3e00:4], in=[r2, unique[c3d00:4]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3f00:2], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3e00:4], unique[c3f00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022c2: cbz    r1,0x22de
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22c2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[22de:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8876,
		block_size=24,
		insn_addrs="[8876, 8878, 8882, 8886, 8890, 8892, 8894, 8898]"
	];
	8876 -> { 8926, 8900 };


	8900 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000022c4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000022c4: cmp    r7,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22c4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x3, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, 0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r7, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022c6: bhi    0x22a8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22c6:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[22a8:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8900,
		block_size=4,
		insn_addrs="[8900, 8902]"
	];
	8900 -> { 8872, 8904 };


	8904 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000022c8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000022c8: ldr    r1,[r6,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22c8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022ca: ldr    r1,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22ca:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022cc: ldrb.w r12,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22cc:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[98e80:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r12, in=[unique[98e80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022d0: ldr.w  r1,[r8,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22d0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r8, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022d4: cbnz   r7,0x2300
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22d4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2300:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8904,
		block_size=14,
		insn_addrs="[8904, 8906, 8908, 8912, 8916]"
	];
	8904 -> { 8960, 8918 };


	8918 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000022d6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000022d6: add.w  r12,r12,#0x144
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22d6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x144])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r12, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r12, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r12, in=[r12, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022da: str.w  r7,[r1,r12,lsl #0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22da:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3200:4], in=[r12, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3300:4], in=[r1, unique[c3200:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3300:4], r7])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8918,
		block_size=8,
		insn_addrs="[8918, 8922]"
	];
	8918 -> { 8926 };


	8926 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000022de</b></td></tr>
			<tr><td align="left" balign="left">
			0x000022de: ldr    r2,[0x23a0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22de:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[23a0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022e0: add.w  r1,r4,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22e0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022e4: ldrh.w r3,[r2,r1,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22e4:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r2, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022e8: bic    r3,r3,#0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22e8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1c])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022ec: orr.w  r3,r3,r7, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22ec:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r7, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r7, 0x2])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022f0: strh.w r3,[r2,r1,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22f0:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3d00:4], in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3e00:4], in=[r2, unique[c3d00:4]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3f00:2], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3e00:4], unique[c3f00:2]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8926,
		block_size=22,
		insn_addrs="[8926, 8928, 8932, 8936, 8940, 8944]"
	];
	8926 -> { 8948 };


	8948 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000022f4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000022f4: ldr    r3,[r6,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22f4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022f6: cbnz   r3,0x234c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22f6:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[234c:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8948,
		block_size=4,
		insn_addrs="[8948, 8950]"
	];
	8948 -> { 9036, 8952 };


	8952 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000022f8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000022f8: ldr    r0,[0x23a8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22f8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[23a8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8952,
		block_size=2,
		insn_addrs="[8952]"
	];
	8952 -> { 8954 };


	8954 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000022fa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000022fa: add    sp,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22fa:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x10])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000022fc: pop.w  {r4,r5,r6,r7,r8,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[22fc:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8954,
		block_size=6,
		insn_addrs="[8954, 8956]"
	];



	8960 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002300</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002300: add.w  r1,r1,r12, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2300:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r12, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r12, 0x2])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r1, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r1, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r1, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002304: orr.w  r3,r3,r12, lsl #0xd
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2304:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0xd])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r12, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r12, 0xd])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002308: ldr.w  lr,[r1,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2308:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x510])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000230c: bic    lr,lr,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[230c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x3])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=lr, in=[lr, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[lr, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[lr, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002310: str.w  lr,[r1,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2310:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x510])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], lr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002314: ldr.w  r1,[r8,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2314:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r8, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002318: add.w  lr,r1,r12, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2318:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r12, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r12, 0x2])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r1, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r1, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=lr, in=[r1, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[lr, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[lr, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000231c: orr    r3,r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[231c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002320: ldr.w  r1,[lr,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2320:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[lr, 0x510])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002324: strh.w r3,[r2,r0,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2324:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3d00:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3e00:4], in=[r2, unique[c3d00:4]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3f00:2], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3e00:4], unique[c3f00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002328: bic    r1,r1,#0x33c00
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2328:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x33c00])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r1, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000232c: bic    r1,r1,#0x300
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[232c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x300])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r1, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002330: str.w  r1,[lr,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2330:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[lr, 0x510])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002334: lsls   r1,r5,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2334:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x8, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r5, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x8, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x8, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r5, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002336: ldr.w  r8,[lr,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2336:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[lr, 0x510])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000233a: and    r1,r1,#0x3f00
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[233a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x3f00])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r1, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000233e: orr.w  r1,r1,r7, lsl #0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[233e:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x10])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r7, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r7, 0x10])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002342: orr.w  r1,r1,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2342:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, r8])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002346: str.w  r1,[lr,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2346:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[lr, 0x510])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000234a: b      0x22de
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[234a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[22de:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=8960,
		block_size=76,
		insn_addrs="[8960, 8964, 8968, 8972, 8976, 8980, 8984, 8988, 8992, 8996, 9000, 9004, 9008, 9012, 9014, 9018, 9022, 9026, 9030, 9034]"
	];
	8960 -> { 8926 };


	9036 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000234c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000234c: ldrd   r6,r7,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[234c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002350: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2350:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002352: bl     0x2108
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2352:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2356, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2108:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9036,
		block_size=10,
		insn_addrs="[9036, 9040, 9042]"
	];
	9036 -> { 8456, 9046 };


	9046 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002356</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002356: cmp    r6,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2356:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002358: beq    0x22f8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2358:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[22f8:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9046,
		block_size=4,
		insn_addrs="[9046, 9048]"
	];
	9046 -> { 8952, 9050 };


	9050 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000235a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000235a: ldr    r5,[0x23a0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[235a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[ram[23a0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000235c: ldrd   r2,r3,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[235c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002360: cmp    r6,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2360:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r6, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002362: bne    0x236c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2362:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[236c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9050,
		block_size=10,
		insn_addrs="[9050, 9052, 9056, 9058]"
	];
	9050 -> { 9068, 9060 };


	9060 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002364</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002364: cmp    r7,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2364:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r7, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002366: bne    0x236c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2366:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[236c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9060,
		block_size=4,
		insn_addrs="[9060, 9062]"
	];
	9060 -> { 9068, 9064 };


	9064 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002368</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002368: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2368:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000236a: b      0x2380
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[236a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2380:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9064,
		block_size=4,
		insn_addrs="[9064, 9066]"
	];
	9064 -> { 9088 };


	9068 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000236c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000236c: ldr    r0,[0x23ac]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[236c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[23ac:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000236e: add.w  r1,sp,#0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[236e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xf])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002372: bl     0x1d60
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2372:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2376, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1d60:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9068,
		block_size=10,
		insn_addrs="[9068, 9070, 9074]"
	];
	9068 -> { 7520, 9078 };


	9078 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002376</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002376: ldr    r3,[0x23a8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2376:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[23a8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002378: cmp    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2378:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000237a: bne    0x22fa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[237a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[22fa:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9078,
		block_size=6,
		insn_addrs="[9078, 9080, 9082]"
	];
	9078 -> { 8954, 9084 };


	9084 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000237c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000237c: ldrb.w r2,[sp,#0xf]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[237c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0xf])<br/>
			&nbsp;&nbsp;LOAD(out=unique[98e80:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[98e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9084,
		block_size=4,
		insn_addrs="[9084]"
	];
	9084 -> { 9088 };


	9088 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002380</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002380: str.w  r6,[r5,r2,lsl #0x3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3200:4], in=[r2, 0x3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3300:4], in=[r5, unique[c3200:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3300:4], r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002384: add.w  r3,r5,r2, lsl #0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2384:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x3])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r2, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r2, 0x3])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r5, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002388: adds   r4,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2388:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x8])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000238a: str    r7,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[238a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000238c: ldrh.w r3,[r5,r4,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[238c:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r5, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002390: orr.w  r3,r3,r2, lsl #0x9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2390:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x9])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r2, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r2, 0x9])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002394: orr    r3,r3,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2394:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002398: strh.w r3,[r5,r4,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2398:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3d00:4], in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3e00:4], in=[r5, unique[c3d00:4]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3f00:2], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3e00:4], unique[c3f00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000239c: b      0x22f8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[239c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[22f8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9088,
		block_size=30,
		insn_addrs="[9088, 9092, 9096, 9098, 9100, 9104, 9108, 9112, 9116]"
	];
	9088 -> { 8952 };


	9136 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000023b0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000023b0: push   {r4,r5,r6,r7,r8,r9,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23b0:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r9])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023b4: mov    r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23b4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023b6: sub    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23b6:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023b8: mov    r8,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23b8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023ba: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23ba:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023bc: mov    r1,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023be: mov    r6,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23be:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023c0: bl     0x202c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23c0:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x23c4, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[202c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9136,
		block_size=20,
		insn_addrs="[9136, 9140, 9142, 9144, 9146, 9148, 9150, 9152]"
	];
	9136 -> { 8236, 9156 };


	9156 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000023c4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000023c4: mov    r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23c4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023c6: cbz    r1,0x2414
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23c6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2414:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9156,
		block_size=4,
		insn_addrs="[9156, 9158]"
	];
	9156 -> { 9236, 9160 };


	9160 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000023c8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000023c8: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23c8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023ca: bl     0x2098
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23ca:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x23ce, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2098:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9160,
		block_size=6,
		insn_addrs="[9160, 9162]"
	];
	9160 -> { 8344, 9166 };


	9166 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000023ce</b></td></tr>
			<tr><td align="left" balign="left">
			0x000023ce: cbnz   r0,0x23d8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23ce:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[23d8:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9166,
		block_size=2,
		insn_addrs="[9166]"
	];
	9166 -> { 9176, 9168 };


	9168 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000023d0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000023d0: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23d0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023d2: bl     0x20b0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23d2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x23d6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[20b0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9168,
		block_size=6,
		insn_addrs="[9168, 9170]"
	];
	9168 -> { 8368, 9174 };


	9174 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000023d6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000023d6: cbnz   r0,0x2420
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23d6:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2420:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9174,
		block_size=2,
		insn_addrs="[9174]"
	];
	9174 -> { 9248, 9176 };


	9176 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000023d8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000023d8: ldr    r7,[0x24a0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23d8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[ram[24a0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023da: add.w  r9,r5,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23da:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r9, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r9, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r9, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023de: ldrh.w r3,[r7,r9,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23de:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r9, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r7, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023e2: tst    r3,#0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23e2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1c])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023e6: beq    0x23ee
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23e6:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[23ee:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9176,
		block_size=16,
		insn_addrs="[9176, 9178, 9182, 9186, 9190]"
	];
	9176 -> { 9198, 9192 };


	9192 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000023e8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000023e8: ldrb   r3,[r1,#0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23e8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r1, 0x1])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023ea: cmp    r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23ea:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023ec: beq    0x2420
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23ec:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2420:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9192,
		block_size=6,
		insn_addrs="[9192, 9194, 9196]"
	];
	9192 -> { 9248, 9198 };


	9198 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000023ee</b></td></tr>
			<tr><td align="left" balign="left">
			0x000023ee: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23ee:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023f0: strb.w r3,[sp,#0xf]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23f0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0xf])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023f4: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23f4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023f6: strd   r1,r3,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23f6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023fa: adds   r2,r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23fa:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023fc: adds   r3,r1,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23fc:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r1, 0x2])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r1, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r1, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000023fe: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[23fe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002400: add.w  r1,sp,#0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2400:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xf])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002404: bl     0x3f7e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2404:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2408, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3f7e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9198,
		block_size=26,
		insn_addrs="[9198, 9200, 9204, 9206, 9210, 9212, 9214, 9216, 9220]"
	];
	9198 -> { 16254, 9224 };


	9224 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002408</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002408: ldrh.w r3,[r7,r9,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2408:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r9, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r7, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000240c: orr    r3,r3,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[240c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x3])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002410: strh.w r3,[r7,r9,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2410:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3d00:4], in=[r9, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3e00:4], in=[r7, unique[c3d00:4]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3f00:2], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3e00:4], unique[c3f00:2]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9224,
		block_size=12,
		insn_addrs="[9224, 9228, 9232]"
	];
	9224 -> { 9236 };


	9236 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002414</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002414: cmp    r6,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2414:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002416: beq    0x249c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2416:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[249c:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9236,
		block_size=4,
		insn_addrs="[9236, 9238]"
	];
	9236 -> { 9372, 9240 };


	9240 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002418</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002418: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2418:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000241a: bl     0x2098
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[241a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x241e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2098:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9240,
		block_size=6,
		insn_addrs="[9240, 9242]"
	];
	9240 -> { 8344, 9246 };


	9246 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000241e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000241e: cbnz   r0,0x2428
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[241e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2428:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9246,
		block_size=2,
		insn_addrs="[9246]"
	];
	9246 -> { 9256, 9248 };


	9248 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002420</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002420: ldr    r0,[0x24a4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2420:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[24a4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9248,
		block_size=2,
		insn_addrs="[9248]"
	];
	9248 -> { 9250 };


	9250 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002422</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002422: add    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2422:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002424: pop.w  {r4,r5,r6,r7,r8,r9,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2424:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r9, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9250,
		block_size=6,
		insn_addrs="[9250, 9252]"
	];



	9256 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002428</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002428: ldrb.w r12,[r6,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2428:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[98e80:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r12, in=[unique[98e80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000242c: ldr.w  r3,[r8,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[242c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r8, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002430: ldr    r7,[0x24a0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2430:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[ram[24a0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002432: add.w  r2,r12,#0x144
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2432:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x144])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r12, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r12, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r12, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002436: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2436:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002438: str.w  r1,[r3,r2,lsl #0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2438:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3200:4], in=[r2, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3300:4], in=[r3, unique[c3200:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3300:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000243c: add.w  r2,r5,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[243c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002440: ldrh.w r1,[r7,r2,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2440:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r7, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002444: bic    r1,r1,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2444:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r1, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002448: lsls   r1,r1,#0x13
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2448:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x13, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r1, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x13, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x13, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r1, 0x13])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000244a: lsrs   r1,r1,#0x13
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[244a:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x13])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r1, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r1, 0x13])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000244c: strh.w r1,[r7,r2,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[244c:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3d00:4], in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3e00:4], in=[r7, unique[c3d00:4]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3f00:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3e00:4], unique[c3f00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002450: ldrb   r5,[r6,#0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2450:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r6, 0x1])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002452: cbz    r5,0x249c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2452:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[249c:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9256,
		block_size=44,
		insn_addrs="[9256, 9260, 9264, 9266, 9270, 9272, 9276, 9280, 9284, 9288, 9290, 9292, 9296, 9298]"
	];
	9256 -> { 9372, 9300 };


	9300 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002454</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002454: ldr.w  r0,[r8,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2454:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r8, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002458: ldrb   r6,[r6,#0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2458:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r6, 0x2])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r6, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000245a: add.w  r0,r0,r12, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[245a:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r12, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r12, 0x2])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000245e: lsls   r5,r5,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[245e:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x10, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r5, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x10, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x10, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r5, in=[r5, 0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002460: ldr.w  r3,[r0,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2460:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x510])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002464: bic    r3,r3,#0x132000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2464:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x132000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002468: bic    r3,r3,#0x1f00
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2468:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x1f00])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000246c: str.w  r3,[r0,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[246c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x510])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002470: lsls   r3,r4,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2470:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x8, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r4, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x8, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x8, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r4, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002472: and    r3,r3,#0x3f00
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2472:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x3f00])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002476: and    r5,r5,#0x30000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2476:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x30000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000247a: lsls   r6,r6,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[247a:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x14, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r6, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x14, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x14, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r6, in=[r6, 0x14])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000247c: ldr.w  lr,[r0,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[247c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x510])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002480: orrs   r3,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2480:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002482: and    r6,r6,#0x100000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2482:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=r6, in=[r6, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002486: orr.w  r1,r1,r12, lsl #0xd
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2486:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0xd])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r12, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r12, 0xd])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000248a: orrs   r3,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[248a:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000248c: orr    r1,r1,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[248c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002490: orr.w  r3,r3,lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2490:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, lr])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002494: strh.w r1,[r7,r2,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2494:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3d00:4], in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3e00:4], in=[r7, unique[c3d00:4]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3f00:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3e00:4], unique[c3f00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002498: str.w  r3,[r0,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2498:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x510])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9300,
		block_size=72,
		insn_addrs="[9300, 9304, 9306, 9310, 9312, 9316, 9320, 9324, 9328, 9330, 9334, 9338, 9340, 9344, 9346, 9350, 9354, 9356, 9360, 9364, 9368]"
	];
	9300 -> { 9372 };


	9372 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000249c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000249c: ldr    r0,[0x24a8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[249c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[24a8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000249e: b      0x2422
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[249e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2422:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9372,
		block_size=4,
		insn_addrs="[9372, 9374]"
	];
	9372 -> { 9250 };


	9388 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000024ac</b></td></tr>
			<tr><td align="left" balign="left">
			0x000024ac: ldr    r3,[0x24b4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24ac:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[24b4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024ae: strd   r1,r2,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24ae:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024b2: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24b2:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9388,
		block_size=8,
		insn_addrs="[9388, 9390, 9394]"
	];



	9400 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000024b8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000024b8: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24b8:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024ba: mov    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24ba:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024bc: mov    r4,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024be: bl     0x20b0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24be:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x24c2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[20b0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9400,
		block_size=10,
		insn_addrs="[9400, 9402, 9404, 9406]"
	];
	9400 -> { 8368, 9410 };


	9410 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000024c2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000024c2: cbz    r0,0x24da
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24c2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[24da:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9410,
		block_size=2,
		insn_addrs="[9410]"
	];
	9410 -> { 9434, 9412 };


	9412 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000024c4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000024c4: mov    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24c4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024c6: bl     0x202c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24c6:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x24ca, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[202c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9412,
		block_size=6,
		insn_addrs="[9412, 9414]"
	];
	9412 -> { 8236, 9418 };


	9418 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000024ca</b></td></tr>
			<tr><td align="left" balign="left">
			0x000024ca: ldr    r3,[0x24e0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24ca:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[24e0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024cc: adds   r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24cc:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024ce: ldrh.w r3,[r3,r0,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24ce:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r3, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024d2: ldr    r0,[0x24e4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24d2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[24e4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024d4: lsrs   r3,r3,#0xd
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24d4:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0xd])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, 0xd])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024d6: strb   r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24d6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9418,
		block_size=14,
		insn_addrs="[9418, 9420, 9422, 9426, 9428, 9430]"
	];
	9418 -> { 9432 };


	9432 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000024d8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000024d8: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24d8:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9432,
		block_size=2,
		insn_addrs="[9432]"
	];



	9434 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000024da</b></td></tr>
			<tr><td align="left" balign="left">
			0x000024da: ldr    r0,[0x24e8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24da:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[24e8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024dc: b      0x24d8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24dc:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[24d8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9434,
		block_size=4,
		insn_addrs="[9434, 9436]"
	];
	9434 -> { 9432 };


	9452 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000024ec</b></td></tr>
			<tr><td align="left" balign="left">
			0x000024ec: push   {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24ec:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024ee: ldr    r5,[0x2548]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24ee:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[ram[2548:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024f0: ldrb.w r4,[r5,#0x80]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24f0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x80])<br/>
			&nbsp;&nbsp;LOAD(out=unique[98e80:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r4, in=[unique[98e80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024f4: mov    r6,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24f4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024f6: cbnz   r4,0x2544
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24f6:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2544:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9452,
		block_size=12,
		insn_addrs="[9452, 9454, 9456, 9460, 9462]"
	];
	9452 -> { 9540, 9464 };


	9464 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000024f8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000024f8: mov    r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24f8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024fa: movs   r2,#0x60
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24fa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x60])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000024fc: add.w  r0,r5,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[24fc:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002500: bl     0x43c0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2500:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2504, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[43c0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9464,
		block_size=12,
		insn_addrs="[9464, 9466, 9468, 9472]"
	];
	9464 -> { 17344, 9476 };


	9476 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002504</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002504: ldr    r0,[r6,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2504:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002506: ldr    r6,[r5,#0x70]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2506:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x70])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002508: mov    r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2508:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r4])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9476,
		block_size=6,
		insn_addrs="[9476, 9478, 9480]"
	];
	9476 -> { 9482 };


	9482 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000250a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000250a: cmp    r6,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[250a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r1, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r6, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000250c: bne    0x252c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[250c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[252c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9482,
		block_size=4,
		insn_addrs="[9482, 9484]"
	];
	9482 -> { 9516, 9486 };


	9486 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000250e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000250e: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[250e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002510: str.w  r3,[r0,#0x17c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2510:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x17c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002514: ldr.w  r3,[r0,#0x17c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2514:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x17c])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002518: sbfx   r0,r0,#0xc,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2518:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0xc])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x7])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[b2880:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2980:4], in=[0x1f, unique[b2880:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r0, unique[b2980:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2980:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=r0, in=[r0, unique[b2980:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000251c: bl     0x864
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[251c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2520, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[864:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9486,
		block_size=18,
		insn_addrs="[9486, 9488, 9492, 9496, 9500]"
	];
	9486 -> { 2148, 9504 };


	9504 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002520</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002520: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2520:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002522: ldr    r0,[0x254c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2522:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[254c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002524: strb.w r3,[r5,#0x80]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2524:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x80])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002528: str    r3,[r5,#0x78]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2528:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x78])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9504,
		block_size=10,
		insn_addrs="[9504, 9506, 9508, 9512]"
	];
	9504 -> { 9514 };


	9514 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000252a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000252a: pop    {r4,r5,r6,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[252a:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9514,
		block_size=2,
		insn_addrs="[9514]"
	];



	9516 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000252c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000252c: uxtb   r3, r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[252c:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000252e: lsls   r3,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[252e:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x2, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002530: add.w  r2,r3,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2530:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002534: cmp    r3,#0x7c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2534:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x7c, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x7c])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x7c])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002536: it     eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2536:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002538: str    r4,[r0,r2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2538:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r0, r2])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[253a:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92900:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000253a: add.w  r1,r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[253a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000253e: it     eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[253e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002540: ldr    r3,[r0,r2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2540:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2542:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r0, r2])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92900:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002542: b      0x250a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2542:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[250a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9516,
		block_size=24,
		insn_addrs="[9516, 9518, 9520, 9524, 9526, 9528, 9530, 9534, 9536, 9538]"
	];
	9516 -> { 9482 };


	9540 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002544</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002544: ldr    r0,[0x2550]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2544:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[2550:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002546: b      0x252a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2546:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[252a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9540,
		block_size=4,
		insn_addrs="[9540, 9542]"
	];
	9540 -> { 9514 };


	9556 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002554</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002554: ldr    r3,[0x2564]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2554:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2564:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002556: ldrb.w r0,[r3,#0x80]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2556:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x80])<br/>
			&nbsp;&nbsp;LOAD(out=unique[98e80:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[98e80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000255a: subs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[255a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000255c: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[255c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000255e: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[255e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2560:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002560: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2560:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9556,
		block_size=14,
		insn_addrs="[9556, 9558, 9562, 9564, 9566, 9568]"
	];



	9576 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002568</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002568: ldr    r0,[0x2570]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2568:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[2570:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000256a: b.w    0x1da8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[256a:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1da8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9576,
		block_size=6,
		insn_addrs="[9576, 9578]"
	];
	9576 -> { 7592 };


	9588 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002574</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002574: ldr    r0,[0x257c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2574:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[257c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002576: b.w    0x1d60
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2576:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1d60:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9588,
		block_size=6,
		insn_addrs="[9588, 9590]"
	];
	9588 -> { 7520 };


	9600 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002580</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002580: push   {r0,r1,r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2580:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002582: ldr    r3,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2582:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002584: mov    r6,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2584:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002586: ldr.w  r2,[r3,#0x304]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2586:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x304])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000258a: cmp    r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[258a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000258c: it     ge
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[258c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86580:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000258e: mov.w  r2,#0x80000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[258e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x80000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[d80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[d80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2592:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002592: mov    r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2592:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002594: it     ge
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2594:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86580:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002596: str.w  r2,[r3,#0x304]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2596:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x304])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[d80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[d80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[259a:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000259a: mov    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[259a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000259c: mov    r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[259c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000259e: bl     0x20b0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[259e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x25a2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[20b0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9600,
		block_size=34,
		insn_addrs="[9600, 9602, 9604, 9606, 9610, 9612, 9614, 9618, 9620, 9622, 9626, 9628, 9630]"
	];
	9600 -> { 8368, 9634 };


	9634 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000025a2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000025a2: cbz    r0,0x25e6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25a2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[25e6:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9634,
		block_size=2,
		insn_addrs="[9634]"
	];
	9634 -> { 9702, 9636 };


	9636 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000025a4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000025a4: mov    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25a4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025a6: bl     0x2098
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25a6:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x25aa, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2098:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9636,
		block_size=6,
		insn_addrs="[9636, 9638]"
	];
	9636 -> { 8344, 9642 };


	9642 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000025aa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000025aa: mov    r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25aa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025ac: cbnz   r0,0x25e6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25ac:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[25e6:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9642,
		block_size=4,
		insn_addrs="[9642, 9644]"
	];
	9642 -> { 9702, 9646 };


	9646 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000025ae</b></td></tr>
			<tr><td align="left" balign="left">
			0x000025ae: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25ae:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025b0: bl     0x2080
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25b0:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x25b4, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2080:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9646,
		block_size=6,
		insn_addrs="[9646, 9648]"
	];
	9646 -> { 8320, 9652 };


	9652 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000025b4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000025b4: sxth   r4, r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25b4:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c8c00:2], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r4, in=[unique[c8c00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025b6: lsls   r4,r4,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25b6:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x2, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r4, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r4, in=[r4, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025b8: add.w  r2,r4,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25b8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r4, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025bc: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025be: ldr    r0,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25be:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025c0: str    r1,[r0,r2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25c0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r0, r2])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92900:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025c2: ldr    r1,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25c2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025c4: ldr    r2,[r0,r2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25c4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r0, r2])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92900:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025c6: add    r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25c6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r1, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025c8: ldr.w  r2,[r1,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25c8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x510])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025cc: orr    r2,r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25cc:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r2, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025d0: str.w  r2,[r1,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25d0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x510])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025d4: cbz    r6,0x25e2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25d4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[25e2:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9652,
		block_size=34,
		insn_addrs="[9652, 9654, 9656, 9660, 9662, 9664, 9666, 9668, 9670, 9672, 9676, 9680, 9684]"
	];
	9652 -> { 9698, 9686 };


	9686 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000025d6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000025d6: ldr    r1,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25d6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025d8: movs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25d8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025da: lsl.w  r3,r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25da:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9d100:4], in=[r3, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9d100:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r2, unique[9d100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025de: str.w  r3,[r1,#0x304]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25de:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0x304])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9686,
		block_size=12,
		insn_addrs="[9686, 9688, 9690, 9694]"
	];
	9686 -> { 9698 };


	9698 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000025e2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000025e2: add    sp,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25e2:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025e4: pop    {r4,r5,r6,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25e4:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9698,
		block_size=4,
		insn_addrs="[9698, 9700]"
	];



	9702 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000025e6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000025e6: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25e6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025e8: bl     0x202c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25e8:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x25ec, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[202c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9702,
		block_size=6,
		insn_addrs="[9702, 9704]"
	];
	9702 -> { 8236, 9708 };


	9708 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000025ec</b></td></tr>
			<tr><td align="left" balign="left">
			0x000025ec: ldr    r3,[0x262c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25ec:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[262c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025ee: adds   r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25ee:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025f0: ldrh.w r3,[r3,r0,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25f0:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r3, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025f4: ubfx   r3,r3,#0x2,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25f4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025f8: cmp    r3,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25f8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x4, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025fa: beq    0x2622
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25fa:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2622:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9708,
		block_size=16,
		insn_addrs="[9708, 9710, 9712, 9716, 9720, 9722]"
	];
	9708 -> { 9762, 9724 };


	9724 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000025fc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000025fc: cmp    r3,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25fc:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x5, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000025fe: beq    0x2626
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[25fe:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2626:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9724,
		block_size=4,
		insn_addrs="[9724, 9726]"
	];
	9724 -> { 9766, 9728 };


	9728 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002600</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002600: add    r0,sp,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2600:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002602: str    r4,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2602:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002604: bl     0x200c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2604:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2608, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[200c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9728,
		block_size=8,
		insn_addrs="[9728, 9730, 9732]"
	];
	9728 -> { 8204, 9736 };


	9736 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002608</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002608: ldr    r2,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2608:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000260a: ldr.w  r3,[r0,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[260a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x510])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000260e: lsrs   r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[260e:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9ce80:4], in=[r2, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9ce80:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9ce80:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9ce80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9cf00:4], in=[r2, 0xff])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, unique[9cf00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002610: and    r3,r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2610:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002614: adds   r1,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2614:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9736,
		block_size=14,
		insn_addrs="[9736, 9738, 9742, 9744, 9748]"
	];
	9736 -> { 9750 };


	9750 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002616</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002616: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2616:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002618: add    sp,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2618:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000261a: pop.w  {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[261a:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000261e: b.w    0x4010
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[261e:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[4010:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9750,
		block_size=12,
		insn_addrs="[9750, 9752, 9754, 9758]"
	];
	9750 -> { 16400 };


	9762 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002622</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002622: movs   r1,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2622:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002624: b      0x2616
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2624:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2616:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9762,
		block_size=4,
		insn_addrs="[9762, 9764]"
	];
	9762 -> { 9750 };


	9766 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002626</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002626: movs   r1,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2626:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002628: b      0x2616
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2628:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2616:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9766,
		block_size=4,
		insn_addrs="[9766, 9768]"
	];
	9766 -> { 9750 };


	9776 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002630</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002630: push   {r4,r5,r6,r7,r8,r9,r10,r11,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2630:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r11])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r10])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r9])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002634: ldr    r3,[0x27dc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2634:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[27dc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002636: ldr.w  r8,[0x27e0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2636:4]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[ram[27e0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000263a: ldr.w  r0,[r3,#0x304]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[263a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x304])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000263e: ldr.w  r1,[r8,#0x70]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[263e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r8, 0x70])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002642: uxtb   r0, r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2642:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002644: sub    sp,#0x24
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2644:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x24])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002646: orr    r0,r0,#0x80000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2646:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x80000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000264a: bl     0x2160
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[264a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x264e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2160:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9776,
		block_size=30,
		insn_addrs="[9776, 9780, 9782, 9786, 9790, 9794, 9796, 9798, 9802]"
	];
	9776 -> { 8544, 9806 };


	9806 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000264e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000264e: subs   r5,r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[264e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r5, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002650: bge    0x26b2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2650:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[26b2:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9806,
		block_size=4,
		insn_addrs="[9806, 9808]"
	];
	9806 -> { 9906, 9810 };


	9810 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002652</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002652: mov    r10,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2652:2]])<br/>
			&nbsp;&nbsp;COPY(out=r10, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002654: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2654:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002656: ldr.w  r1,[r10,#0x7c]!
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2656:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91f00:4], in=[r10, 0x7c])<br/>
			&nbsp;&nbsp;COPY(out=r10, in=[unique[91f00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91f00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000265a: add    r0,sp,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[265a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x18])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000265c: strd   r3,r3,[sp,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[265c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x18])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002660: bl     0x20c8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2660:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2664, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[20c8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9810,
		block_size=18,
		insn_addrs="[9810, 9812, 9814, 9818, 9820, 9824]"
	];
	9810 -> { 8392, 9828 };


	9828 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002664</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002664: ldr    r3,[0x27e4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2664:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[27e4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002666: str    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2666:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002668: add.w  r9,sp,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2668:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x18])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r9, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r9, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r9, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000266c: mov.w  r11,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[266c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r11, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9828,
		block_size=12,
		insn_addrs="[9828, 9830, 9832, 9836]"
	];
	9828 -> { 9840 };


	9840 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002670</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002670: ldr    r2,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2670:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002672: ldrb.w r3,[r2],#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2672:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;LOAD(out=unique[99000:1], in=[0x600000f0c300, unique[91b80:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[99000:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002676: str    r2,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2676:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002678: lsrs   r2,r3,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2678:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r2, in=[r3, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000267a: and    r3,r3,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[267a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000267e: ldrb.w r2,[r10,r2,lsl #0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[267e:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[99100:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99200:4], in=[r10, unique[99100:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[99300:1], in=[0x600000f0c300, unique[99200:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[99300:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002682: lsr.w  r3,r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2682:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9d300:4], in=[r3, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9d300:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r2, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9d300:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9d300:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r2, unique[9d300:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002686: lsls   r2,r3,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2686:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r3, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002688: bmi    0x26c4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2688:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83d80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[26c4:4], unique[83d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9840,
		block_size=26,
		insn_addrs="[9840, 9842, 9846, 9848, 9850, 9854, 9858, 9862, 9864]"
	];
	9840 -> { 9924, 9866 };


	9866 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000268a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000268a: add.w  r9,r9,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[268a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x4])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r9, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r9, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r9, in=[r9, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r9, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r9, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000268e: cmp.w  r11,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[268e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r11])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002692: beq    0x26be
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2692:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[26be:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9866,
		block_size=10,
		insn_addrs="[9866, 9870, 9874]"
	];
	9866 -> { 9918, 9876 };


	9876 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002694</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002694: ldr.w  r1,[r8,#0x70]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2694:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r8, 0x70])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002698: mov.w  r0,#0x80000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2698:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x80000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000269c: bl     0x2160
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[269c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x26a0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2160:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9876,
		block_size=12,
		insn_addrs="[9876, 9880, 9884]"
	];
	9876 -> { 8544, 9888 };


	9888 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000026a0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000026a0: ldr.w  r1,[r8,#0x7c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26a0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r8, 0x7c])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026a4: add    r0,sp,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26a4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x18])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026a6: bl     0x20c8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26a6:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x26aa, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[20c8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9888,
		block_size=10,
		insn_addrs="[9888, 9892, 9894]"
	];
	9888 -> { 8392, 9898 };


	9898 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000026aa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000026aa: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26aa:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026ac: bne    0x2664
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26ac:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2664:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9898,
		block_size=4,
		insn_addrs="[9898, 9900]"
	];
	9898 -> { 9828, 9902 };


	9902 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000026ae</b></td></tr>
			<tr><td align="left" balign="left">
			0x000026ae: bic    r5,r5,#0x80000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26ae:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x80000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r5, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9902,
		block_size=4,
		insn_addrs="[9902]"
	];
	9902 -> { 9906 };


	9906 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000026b2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000026b2: movs   r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26b2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9906,
		block_size=2,
		insn_addrs="[9906]"
	];
	9906 -> { 9908 };


	9908 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000026b4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000026b4: cmp    r5,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26b4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026b6: bne    0x27ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26b6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[27ac:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9908,
		block_size=4,
		insn_addrs="[9908, 9910]"
	];
	9908 -> { 10156, 9912 };


	9912 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000026b8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000026b8: add    sp,#0x24
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26b8:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x24])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026ba: pop.w  {r4,r5,r6,r7,r8,r9,r10,r11,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26ba:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r9, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r10, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r11, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9912,
		block_size=6,
		insn_addrs="[9912, 9914]"
	];



	9918 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000026be</b></td></tr>
			<tr><td align="left" balign="left">
			0x000026be: mov.w  r11,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26be:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r11, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026c2: b      0x2670
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26c2:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2670:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9918,
		block_size=6,
		insn_addrs="[9918, 9922]"
	];
	9918 -> { 9840 };


	9924 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000026c4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000026c4: ldr    r3,[0x27e8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26c4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[27e8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026c6: add    r3,r11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26c6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, r11])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026c8: str    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26c8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9924,
		block_size=6,
		insn_addrs="[9924, 9926, 9928]"
	];
	9924 -> { 9930 };


	9930 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000026ca</b></td></tr>
			<tr><td align="left" balign="left">
			0x000026ca: ldr.w  r1,[r9,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26ca:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r9, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026ce: cmp    r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26ce:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026d0: beq    0x268a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26d0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[268a:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9930,
		block_size=8,
		insn_addrs="[9930, 9934, 9936]"
	];
	9930 -> { 9866, 9938 };


	9938 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000026d2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000026d2: ldr    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26d2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026d4: rbit   r1, r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26d4:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abe80:4], in=[r1, 0xff])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[abf80:1], in=[unique[abe80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[ac000:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abe80:4], in=[unique[ac000:4], 0xff])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[ac180:1], in=[unique[abe80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[ac200:4], in=[r1, 0x10])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abe80:4], in=[unique[ac200:4], 0xff])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[ac380:1], in=[unique[abe80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[ac400:4], in=[r1, 0x18])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abe80:4], in=[unique[ac400:4], 0xff])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[ac580:1], in=[unique[abe80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad00:1], in=[unique[abf80:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad80:1], in=[0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aae00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aae80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aae00:1], unique[aae80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab000:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab080:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab000:1], unique[ab080:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab200:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab280:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab200:1], unique[ab280:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab400:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab480:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab400:1], unique[ab480:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab600:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab680:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab600:1], unique[ab680:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab800:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab880:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab800:1], unique[ab880:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aba00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aba80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aba00:1], unique[aba80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[abc00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abc80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[abc00:1], unique[abc80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;COPY(out=unique[abf80:1], in=[unique[aad80:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad00:1], in=[unique[ac180:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad80:1], in=[0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aae00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aae80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aae00:1], unique[aae80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab000:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab080:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab000:1], unique[ab080:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab200:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab280:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab200:1], unique[ab280:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab400:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab480:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab400:1], unique[ab480:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab600:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab680:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab600:1], unique[ab680:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab800:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab880:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab800:1], unique[ab880:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aba00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aba80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aba00:1], unique[aba80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[abc00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abc80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[abc00:1], unique[abc80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;COPY(out=unique[ac180:1], in=[unique[aad80:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad00:1], in=[unique[ac380:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad80:1], in=[0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aae00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aae80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aae00:1], unique[aae80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab000:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab080:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab000:1], unique[ab080:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab200:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab280:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab200:1], unique[ab280:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab400:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab480:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab400:1], unique[ab480:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab600:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab680:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab600:1], unique[ab680:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab800:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab880:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab800:1], unique[ab880:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aba00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aba80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aba00:1], unique[aba80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[abc00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abc80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[abc00:1], unique[abc80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;COPY(out=unique[ac380:1], in=[unique[aad80:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad00:1], in=[unique[ac580:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad80:1], in=[0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aae00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aae80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aae00:1], unique[aae80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab000:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab080:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab000:1], unique[ab080:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab200:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab280:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab200:1], unique[ab280:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab400:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab480:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab400:1], unique[ab480:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab600:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab680:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab600:1], unique[ab680:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab800:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab880:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab800:1], unique[ab880:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aba00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aba80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aba00:1], unique[aba80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[abc00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abc80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[abc00:1], unique[abc80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;COPY(out=unique[ac580:1], in=[unique[aad80:1]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[ac600:4], in=[unique[abf80:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ac680:4], in=[unique[ac600:4], 0x18])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[ac700:4], in=[unique[ac180:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ac780:4], in=[unique[ac700:4], 0x10])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[ac800:4], in=[unique[ac680:4], unique[ac780:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[ac880:4], in=[unique[ac380:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ac900:4], in=[unique[ac880:4], 0x8])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[ac980:4], in=[unique[ac800:4], unique[ac900:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[aca00:4], in=[unique[ac580:1]])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[unique[ac980:4], unique[aca00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026d8: ldrb   r4,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26d8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r4, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026da: clz    r1,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26da:4]])<br/>
			&nbsp;&nbsp;LZCOUNT(out=r1, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026de: orr.w  r4,r1,r4, lsl #0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26de:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x5])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r4, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r4, 0x5])<br/>
			&nbsp;&nbsp;INT_OR(out=r4, in=[r1, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026e2: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26e2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026e4: bl     0x202c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26e4:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x26e8, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[202c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9938,
		block_size=22,
		insn_addrs="[9938, 9940, 9944, 9946, 9950, 9954, 9956]"
	];
	9938 -> { 8236, 9960 };


	9960 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000026e8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000026e8: adds   r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26e8:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026ea: str    r4,[sp,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26ea:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026ec: ldrh.w r7,[r8,r0,lsl #0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26ec:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9a200:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[9a300:4], in=[r8, unique[9a200:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9a400:2], in=[0x600000f0c300, unique[9a300:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r7, in=[unique[9a400:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026f0: lsrs   r0,r1,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26f0:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r1, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r0, in=[r1, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026f2: lsrs   r3,r7,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26f2:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r7, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r7, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026f4: ldrb.w r2,[r9,r0,lsl #0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26f4:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[99100:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99200:4], in=[r9, unique[99100:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[99300:1], in=[0x600000f0c300, unique[99200:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[99300:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026f8: str    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26f8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026fa: and    r1,r1,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26fa:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000026fe: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[26fe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002700: lsl.w  r1,r3,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9d100:4], in=[r1, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9d100:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r3, unique[9d100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002704: bic.w  r2,r2,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2704:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95780:4], in=[r1])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95780:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002708: strb.w r2,[r9,r0,lsl #0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2708:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[c3580:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3680:4], in=[r9, unique[c3580:4]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3780:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3680:4], unique[c3780:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000270c: add    r0,sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[270c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x14])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000270e: bl     0x200c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[270e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2712, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[200c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=9960,
		block_size=42,
		insn_addrs="[9960, 9962, 9964, 9968, 9970, 9972, 9976, 9978, 9982, 9984, 9988, 9992, 9996, 9998]"
	];
	9960 -> { 8204, 10002 };


	10002 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002712</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002712: ldr    r2,[sp,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2712:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002714: ldr    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2714:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002716: add.w  r2,r2,#0x1c0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2716:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x1c0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000271a: ubfx   r6,r7,#0x2,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[271a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r6, in=[r7, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r6, in=[r6, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000271e: ldr.w  r2,[r0,r2,lsl #0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[271e:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[98a00:4], in=[r2, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98b00:4], in=[r0, unique[98a00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[98b00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002722: lsls   r3,r3,#0x1d
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2722:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1d, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1d, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1d, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x1d])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002724: mov    r7,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2724:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002726: ubfx   r2,r2,#0x10,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2726:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r2, in=[r2, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000272a: bpl    0x2776
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[272a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2776:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10002,
		block_size=26,
		insn_addrs="[10002, 10004, 10006, 10010, 10014, 10018, 10020, 10022, 10026]"
	];
	10002 -> { 10102, 10028 };


	10028 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000272c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000272c: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[272c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000272e: mov    r1,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[272e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002730: uxtb   r6, r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2730:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r6, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002732: bl     0x2040
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2732:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2736, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2040:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10028,
		block_size=10,
		insn_addrs="[10028, 10030, 10032, 10034]"
	];
	10028 -> { 8256, 10038 };


	10038 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002736</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002736: add    r0,sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2736:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x14])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002738: str    r4,[sp,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2738:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000273a: bl     0x200c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[273a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x273e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[200c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10038,
		block_size=8,
		insn_addrs="[10038, 10040, 10042]"
	];
	10038 -> { 8204, 10046 };


	10046 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000273e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000273e: ldr    r3,[sp,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[273e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002740: add.w  r3,r3,#0x1c0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2740:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x1c0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002744: ldr.w  r3,[r0,r3,lsl #0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2744:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[98a00:4], in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98b00:4], in=[r0, unique[98a00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[98b00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002748: ubfx   r3,r3,#0x10,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2748:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r3, in=[r3, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000274c: cmp    r6,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[274c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r6, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000274e: bne    0x2760
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[274e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2760:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10046,
		block_size=18,
		insn_addrs="[10046, 10048, 10052, 10056, 10060, 10062]"
	];
	10046 -> { 10080, 10064 };


	10064 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002750</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002750: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2750:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002752: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2752:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002754: bl     0x4010
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2754:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2758, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4010:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10064,
		block_size=8,
		insn_addrs="[10064, 10066, 10068]"
	];
	10064 -> { 16400, 10072 };


	10072 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002758</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002758: mov    r1,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2758:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000275a: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[275a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000275c: bl     0x4010
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[275c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2760, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4010:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10072,
		block_size=8,
		insn_addrs="[10072, 10074, 10076]"
	];
	10072 -> { 16400, 10080 };


	10080 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002760</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002760: add    r0,sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2760:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x14])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002762: str    r4,[sp,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2762:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002764: bl     0x200c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2764:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2768, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[200c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10080,
		block_size=8,
		insn_addrs="[10080, 10082, 10084]"
	];
	10080 -> { 8204, 10088 };


	10088 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002768</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002768: ldr    r3,[sp,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2768:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000276a: movs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[276a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000276c: lsl.w  r3,r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[276c:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9d100:4], in=[r3, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9d100:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r2, unique[9d100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002770: str.w  r3,[r0,#0x520]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2770:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x520])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002774: b      0x26ca
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2774:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[26ca:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10088,
		block_size=14,
		insn_addrs="[10088, 10090, 10092, 10096, 10100]"
	];
	10088 -> { 9930 };


	10102 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002776</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002776: cmp    r2,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2776:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x2, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002778: bne    0x2794
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2778:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2794:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10102,
		block_size=4,
		insn_addrs="[10102, 10104]"
	];
	10102 -> { 10132, 10106 };


	10106 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000277a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000277a: movs   r1,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[277a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000277c: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[277c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000277e: bl     0x4010
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[277e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2782, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4010:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10106,
		block_size=8,
		insn_addrs="[10106, 10108, 10110]"
	];
	10106 -> { 16400, 10114 };


	10114 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002782</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002782: and    r3,r6,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2782:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x5])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002786: cmp    r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2786:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10114,
		block_size=6,
		insn_addrs="[10114, 10118]"
	];
	10114 -> { 10120 };


	10120 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002788</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002788: bne    0x2760
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2788:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2760:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10120,
		block_size=2,
		insn_addrs="[10120]"
	];
	10120 -> { 10080, 10122 };


	10122 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000278a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000278a: mov    r1,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[278a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000278c: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[278c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000278e: bl     0x2040
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[278e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2792, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2040:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10122,
		block_size=8,
		insn_addrs="[10122, 10124, 10126]"
	];
	10122 -> { 8256, 10130 };


	10130 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002792</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002792: b      0x2760
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2792:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2760:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10130,
		block_size=2,
		insn_addrs="[10130]"
	];
	10130 -> { 10080 };


	10132 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002794</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002794: movs   r1,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2794:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002796: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2796:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002798: str    r2,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2798:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000279a: bl     0x4010
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[279a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x279e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4010:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10132,
		block_size=10,
		insn_addrs="[10132, 10134, 10136, 10138]"
	];
	10132 -> { 16400, 10142 };


	10142 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000279e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000279e: cmp    r6,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[279e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x3, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027a0: beq    0x278a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27a0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[278a:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10142,
		block_size=4,
		insn_addrs="[10142, 10144]"
	];
	10142 -> { 10122, 10146 };


	10146 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000027a2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000027a2: ldr    r2,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27a2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027a4: cmp    r2,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27a4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x3, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027a6: bne    0x2760
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27a6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2760:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10146,
		block_size=6,
		insn_addrs="[10146, 10148, 10150]"
	];
	10146 -> { 10080, 10152 };


	10152 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000027a8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000027a8: cmp    r6,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27a8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x2, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027aa: b      0x2788
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27aa:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2788:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10152,
		block_size=4,
		insn_addrs="[10152, 10154]"
	];
	10152 -> { 10120 };


	10156 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000027ac</b></td></tr>
			<tr><td align="left" balign="left">
			0x000027ac: rbit   r3, r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27ac:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abe80:4], in=[r5, 0xff])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[abf80:1], in=[unique[abe80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[ac000:4], in=[r5, 0x8])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abe80:4], in=[unique[ac000:4], 0xff])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[ac180:1], in=[unique[abe80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[ac200:4], in=[r5, 0x10])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abe80:4], in=[unique[ac200:4], 0xff])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[ac380:1], in=[unique[abe80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[ac400:4], in=[r5, 0x18])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abe80:4], in=[unique[ac400:4], 0xff])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[ac580:1], in=[unique[abe80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad00:1], in=[unique[abf80:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad80:1], in=[0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aae00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aae80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aae00:1], unique[aae80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab000:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab080:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab000:1], unique[ab080:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab200:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab280:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab200:1], unique[ab280:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab400:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab480:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab400:1], unique[ab480:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab600:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab680:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab600:1], unique[ab680:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab800:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab880:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab800:1], unique[ab880:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aba00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aba80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aba00:1], unique[aba80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[abc00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abc80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[abc00:1], unique[abc80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;COPY(out=unique[abf80:1], in=[unique[aad80:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad00:1], in=[unique[ac180:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad80:1], in=[0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aae00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aae80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aae00:1], unique[aae80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab000:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab080:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab000:1], unique[ab080:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab200:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab280:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab200:1], unique[ab280:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab400:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab480:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab400:1], unique[ab480:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab600:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab680:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab600:1], unique[ab680:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab800:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab880:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab800:1], unique[ab880:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aba00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aba80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aba00:1], unique[aba80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[abc00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abc80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[abc00:1], unique[abc80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;COPY(out=unique[ac180:1], in=[unique[aad80:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad00:1], in=[unique[ac380:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad80:1], in=[0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aae00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aae80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aae00:1], unique[aae80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab000:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab080:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab000:1], unique[ab080:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab200:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab280:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab200:1], unique[ab280:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab400:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab480:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab400:1], unique[ab480:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab600:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab680:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab600:1], unique[ab680:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab800:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab880:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab800:1], unique[ab880:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aba00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aba80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aba00:1], unique[aba80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[abc00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abc80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[abc00:1], unique[abc80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;COPY(out=unique[ac380:1], in=[unique[aad80:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad00:1], in=[unique[ac580:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[aad80:1], in=[0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aae00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aae80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aae00:1], unique[aae80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab000:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab080:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab000:1], unique[ab080:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab200:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab280:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab200:1], unique[ab280:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab400:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab480:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab400:1], unique[ab480:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab600:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab680:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab600:1], unique[ab680:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ab800:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ab880:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[ab800:1], unique[ab880:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[aba00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[aba80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[aba00:1], unique[aba80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[abc00:1], in=[unique[aad80:1], 0x1])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[abc80:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[aad80:1], in=[unique[abc00:1], unique[abc80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[aad00:1], in=[unique[aad00:1], 0x1])<br/>
			&nbsp;&nbsp;COPY(out=unique[ac580:1], in=[unique[aad80:1]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[ac600:4], in=[unique[abf80:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ac680:4], in=[unique[ac600:4], 0x18])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[ac700:4], in=[unique[ac180:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ac780:4], in=[unique[ac700:4], 0x10])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[ac800:4], in=[unique[ac680:4], unique[ac780:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[ac880:4], in=[unique[ac380:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[ac900:4], in=[unique[ac880:4], 0x8])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[ac980:4], in=[unique[ac800:4], unique[ac900:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[aca00:4], in=[unique[ac580:1]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[unique[ac980:4], unique[aca00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027b0: clz    r3,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27b0:4]])<br/>
			&nbsp;&nbsp;LZCOUNT(out=r3, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027b4: lsl.w  r2,r4,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27b4:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9d100:4], in=[r3, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9d100:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r4, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r4, unique[9d100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027b8: lsls   r3,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27b8:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x2, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027ba: add.w  r3,r3,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27ba:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027be: add.w  r3,r3,#0x6000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27be:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x6000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027c2: bic.w  r5,r5,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27c2:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95780:4], in=[r2])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r5, unique[95780:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027c6: ldr.w  r0,[r3,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27c6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x510])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027ca: ldr.w  r1,[r3,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27ca:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x510])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027ce: ubfx   r0,r0,#0x8,#0x6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27ce:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x5])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r0, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r0, in=[r0, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027d2: ubfx   r1,r1,#0x10,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27d2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[d6380:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[d6380:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r1, unique[d6480:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[d6480:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r1, unique[d6480:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027d6: bl     0x2040
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27d6:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x27da, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2040:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10156,
		block_size=46,
		insn_addrs="[10156, 10160, 10164, 10168, 10170, 10174, 10178, 10182, 10186, 10190, 10194, 10198]"
	];
	10156 -> { 8256, 10202 };


	10202 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000027da</b></td></tr>
			<tr><td align="left" balign="left">
			0x000027da: b      0x26b4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27da:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[26b4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10202,
		block_size=2,
		insn_addrs="[10202]"
	];
	10202 -> { 9908 };


	10220 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000027ec</b></td></tr>
			<tr><td align="left" balign="left">
			0x000027ec: mov    r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27ec:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027ee: ldr    r0,[0x27f4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27ee:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[27f4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027f0: b.w    0x1d60
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27f0:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1d60:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10220,
		block_size=8,
		insn_addrs="[10220, 10222, 10224]"
	];
	10220 -> { 7520 };


	10232 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000027f8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000027f8: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27f8:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027fa: ldr    r3,[0x284c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27fa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[284c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027fc: movs   r2,#0xa8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27fc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0xa8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000027fe: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[27fe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002800: mov    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2800:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002802: bl     0x43c0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2802:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2806, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[43c0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10232,
		block_size=14,
		insn_addrs="[10232, 10234, 10236, 10238, 10240, 10242]"
	];
	10232 -> { 17344, 10246 };


	10246 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002806</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002806: movs   r2,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2806:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002808: str    r2,[r0,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2808:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x10])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000280a: ldr    r1,[0x2850]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[280a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[2850:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000280c: str    r2,[r0,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[280c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000280e: ldr    r2,[0x2854]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[280e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[2854:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002810: str    r1,[r0,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2810:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x18])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002812: str    r2,[r0,#0x1c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2812:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x1c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002814: mov.w  r2,#0x400
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2814:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x400])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002818: str    r2,[r0,#0x20]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2818:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x20])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000281a: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[281a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000281c: str    r2,[r0,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[281c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x28])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000281e: str    r2,[r0,#0x24]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[281e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x24])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002820: str    r2,[r0,#0x2c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2820:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x2c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002822: str    r1,[r0,#0x60]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2822:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x60])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002824: ldr    r1,[0x2858]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2824:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[2858:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002826: str    r1,[r0,#0x64]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2826:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x64])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002828: movs   r1,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2828:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000282a: str    r1,[r0,#0x68]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[282a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x68])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000282c: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[282c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000282e: str    r2,[r0,#0x70]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[282e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x70])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002830: str    r2,[r0,#0x6c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2830:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x6c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002832: str    r2,[r0,#0x74]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2832:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x74])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002834: dmb    #0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2834:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1f])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002838: ldr    r1,[0x285c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2838:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[285c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10246,
		block_size=52,
		insn_addrs="[10246, 10248, 10250, 10252, 10254, 10256, 10258, 10260, 10264, 10266, 10268, 10270, 10272, 10274, 10276, 10278, 10280, 10282, 10284, 10286, 10288, 10290, 10292, 10296]"
	];
	10246 -> { 10298 };


	10298 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000283a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000283a: ldrb.w r0,[r1,#-0x1]!
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[283a:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91e00:4], in=[r1, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[91e00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[99000:1], in=[0x600000f0c300, unique[91e00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[99000:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000283e: strb   r0,[r3,r2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[283e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r3, r2])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2e80:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92900:4], unique[c2e80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002840: adds   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2840:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002842: cmp    r2,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2842:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x10, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x10])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002844: bne    0x283a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2844:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[283a:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10298,
		block_size=12,
		insn_addrs="[10298, 10302, 10304, 10306, 10308]"
	];
	10298 -> { 10298, 10310 };


	10310 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002846</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002846: dmb    #0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2846:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1f])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000284a: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[284a:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10310,
		block_size=6,
		insn_addrs="[10310, 10314]"
	];



	10336 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002860</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002860: push   {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2860:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002862: mrs    r5,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2862:4]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2866:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r5, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002866: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2866:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002868: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2868:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[286c:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[286c:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[286c:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000286c: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[286c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002870: ldr    r3,[0x288c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2870:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[288c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002872: ldr    r4,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2872:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002874: bl     0x40bc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2874:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2878, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[40bc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10336,
		block_size=24,
		insn_addrs="[10336, 10338, 10342, 10344, 10348, 10352, 10354, 10356]"
	];
	10336 -> { 16572, 10360 };


	10360 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002878</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002878: msr    basepri,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2878:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[287c:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000287c: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[287c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002880: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2880:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002882: pop.w  {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2882:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002886: b.w    0x76c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2886:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[76c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10360,
		block_size=18,
		insn_addrs="[10360, 10364, 10368, 10370, 10374]"
	];
	10360 -> { 1900 };


	10384 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002890</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002890: push   {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2890:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002892: ldr    r3,[0x28b8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2892:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[28b8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002894: ldr.w  r4,[r3,r0,lsl #0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2894:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[98a00:4], in=[r0, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98b00:4], in=[r3, unique[98a00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[98b00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002898: adds   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2898:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000289a: ldr.w  r5,[r3,r0,lsl #0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[289a:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[98a00:4], in=[r0, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98b00:4], in=[r3, unique[98a00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[98b00:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10384,
		block_size=14,
		insn_addrs="[10384, 10386, 10388, 10392, 10394]"
	];
	10384 -> { 10398 };


	10398 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000289e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000289e: cmp    r5,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[289e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r4, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r5, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028a0: bhi    0x28a4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28a0:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[28a4:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10398,
		block_size=4,
		insn_addrs="[10398, 10400]"
	];
	10398 -> { 10404, 10402 };


	10402 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028a2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028a2: pop    {r3,r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28a2:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10402,
		block_size=2,
		insn_addrs="[10402]"
	];



	10404 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028a4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028a4: ldr    r3,[r4,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28a4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028a6: cbz    r3,0x28b2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28a6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[28b2:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10404,
		block_size=4,
		insn_addrs="[10404, 10406]"
	];
	10404 -> { 10418, 10408 };


	10408 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028a8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028a8: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28a8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028aa: bl     0x40c2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28aa:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x28ae, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[40c2:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10408,
		block_size=6,
		insn_addrs="[10408, 10410]"
	];
	10408 -> { 16578, 10414 };


	10414 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028ae</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028ae: adds   r4,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28ae:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x8])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028b0: b      0x289e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28b0:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[289e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10414,
		block_size=4,
		insn_addrs="[10414, 10416]"
	];
	10414 -> { 10398 };


	10418 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028b2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028b2: ldr    r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28b2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028b4: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28b4:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x28b6, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10418,
		block_size=4,
		insn_addrs="[10418, 10420]"
	];
	10418 -> { 10422 };


	10422 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028b6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028b6: b      0x28ae
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28b6:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[28ae:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10422,
		block_size=2,
		insn_addrs="[10422]"
	];
	10422 -> { 10414 };


	10428 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028bc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028bc: push   {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028be: ldr    r3,[0x296c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28be:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[296c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028c0: ldr    r4,[0x2970]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28c0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[ram[2970:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028c2: ldr    r5,[0x2974]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28c2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[ram[2974:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028c4: movs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28c4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028c6: sub    sp,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28c6:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x18])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028c8: movs   r0,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28c8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028ca: strb   r2,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28ca:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028cc: bl     0x2890
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28cc:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x28d0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2890:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10428,
		block_size=20,
		insn_addrs="[10428, 10430, 10432, 10434, 10436, 10438, 10440, 10442, 10444]"
	];
	10428 -> { 10384, 10448 };


	10448 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028d0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028d0: bl     0x3498
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28d0:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x28d4, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3498:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10448,
		block_size=4,
		insn_addrs="[10448]"
	];
	10448 -> { 13464, 10452 };


	10452 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028d4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028d4: bl     0x40fa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28d4:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x28d8, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[40fa:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10452,
		block_size=4,
		insn_addrs="[10452]"
	];
	10452 -> { 16634, 10456 };


	10456 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028d8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028d8: movs   r0,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28d8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028da: bl     0x2890
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28da:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x28de, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2890:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10456,
		block_size=6,
		insn_addrs="[10456, 10458]"
	];
	10456 -> { 10384, 10462 };


	10462 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028de</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028de: mov    r6,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28de:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028e0: cmp    r6,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28e0:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r6, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028e2: add.w  r4,r4,#0x30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28e2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x30])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028e6: bcc    0x290a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28e6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83c80:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[290a:4], unique[83c80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10462,
		block_size=10,
		insn_addrs="[10462, 10464, 10466, 10470]"
	];
	10462 -> { 10506, 10472 };


	10472 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028e8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028e8: bl     0x2f14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28e8:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x28ec, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2f14:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10472,
		block_size=4,
		insn_addrs="[10472]"
	];
	10472 -> { 12052, 10476 };


	10476 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028ec</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028ec: ldr    r4,[0x2970]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28ec:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[ram[2970:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028ee: ldr    r6,[0x2978]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28ee:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[ram[2978:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10476,
		block_size=4,
		insn_addrs="[10476, 10478]"
	];
	10476 -> { 10480 };


	10480 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028f0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028f0: cmp    r4,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28f0:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028f2: bcc    0x2942
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28f2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83c80:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2942:4], unique[83c80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10480,
		block_size=4,
		insn_addrs="[10480, 10482]"
	];
	10480 -> { 10562, 10484 };


	10484 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028f4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028f4: bl     0x2f3c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28f4:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x28f8, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2f3c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10484,
		block_size=4,
		insn_addrs="[10484]"
	];
	10484 -> { 12092, 10488 };


	10488 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028f8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028f8: bl     0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28f8:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x28fc, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[100:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10488,
		block_size=4,
		insn_addrs="[10488]"
	];
	10488 -> { 256, 10492 };


	10492 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000028fc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000028fc: ldr    r2,[0x297c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28fc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[297c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000028fe: ldrb   r3,[r2,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[28fe:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r2, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002900: bic    r3,r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2900:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002904: strb   r3,[r2,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2904:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r2, 0xc])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002906: add    sp,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2906:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x18])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002908: pop    {r4,r5,r6,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2908:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10492,
		block_size=14,
		insn_addrs="[10492, 10494, 10496, 10500, 10502, 10504]"
	];



	10506 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000290a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000290a: ldr.w  r3,[r4,#-0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[290a:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r4, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91d00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000290e: str    r3,[sp,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[290e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002910: ldr.w  r3,[r4,#-0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2910:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r4, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91d00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002914: str    r3,[sp,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2914:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x10])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002916: ldr.w  r3,[r4,#-0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2916:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r4, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91d00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000291a: str    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[291a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000291c: ldr.w  r3,[r4,#-0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[291c:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91d00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002920: str    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2920:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002922: ldr.w  r3,[r4,#-0x1c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2922:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r4, 0x1c])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91d00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002926: str    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2926:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002928: ldr.w  r3,[r4,#-0x20]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2928:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r4, 0x20])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91d00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000292c: str    r3,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[292c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000292e: ldrd   r2,r3,[r4,#-0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[292e:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[92200:4], in=[r4, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92200:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92200:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002932: ldrd   r0,r1,[r4,#-0x30]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2932:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[92200:4], in=[r4, 0x30])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92200:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92200:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002936: bl     0x2b78
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2936:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x293a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2b78:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10506,
		block_size=48,
		insn_addrs="[10506, 10510, 10512, 10516, 10518, 10522, 10524, 10528, 10530, 10534, 10536, 10540, 10542, 10546, 10550]"
	];
	10506 -> { 11128, 10554 };


	10554 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000293a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000293a: ldr.w  r3,[r4,#-0x30]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[293a:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[91d00:4], in=[r4, 0x30])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91d00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000293e: str    r6,[r3,#0x54]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[293e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x54])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002940: b      0x28de
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2940:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[28de:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10554,
		block_size=8,
		insn_addrs="[10554, 10558, 10560]"
	];
	10554 -> { 10462 };


	10562 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002942</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002942: ldrd   r2,r3,[r4,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2942:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x28])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002946: cmp.w  r3,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2946:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87880:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000294a: it     eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[294a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000294c: cmp.w  r2,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[294c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2950:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87880:4], r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r2, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002950: beq    0x295e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2950:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[295e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10562,
		block_size=16,
		insn_addrs="[10562, 10566, 10570, 10572, 10576]"
	];
	10562 -> { 10590, 10578 };


	10578 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002952</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002952: orrs.w r1,r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2952:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r2, r3])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002956: ldr    r0,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2956:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002958: bne    0x2962
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2958:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2962:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10578,
		block_size=8,
		insn_addrs="[10578, 10582, 10584]"
	];
	10578 -> { 10594, 10586 };


	10586 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000295a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000295a: bl     0x411e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[295a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x295e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[411e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10586,
		block_size=4,
		insn_addrs="[10586]"
	];
	10586 -> { 16670, 10590 };


	10590 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000295e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000295e: adds   r4,#0x30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[295e:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x30])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x30])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, 0x30])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002960: b      0x28f0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2960:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[28f0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10590,
		block_size=4,
		insn_addrs="[10590, 10592]"
	];
	10590 -> { 10480 };


	10594 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002962</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002962: mov    r1,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2962:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002964: adds   r0,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2964:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x18])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x18])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x18])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002966: bl     0x32a4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2966:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x296a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[32a4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10594,
		block_size=8,
		insn_addrs="[10594, 10596, 10598]"
	];
	10594 -> { 12964, 10602 };


	10602 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000296a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000296a: b      0x295e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[296a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[295e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10602,
		block_size=2,
		insn_addrs="[10602]"
	];
	10602 -> { 10590 };


	10624 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002980</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002980: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2980:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002982: ldr    r0,[0x2990]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2982:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[2990:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002984: ldr    r2,[0x2994]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2984:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[2994:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002986: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2986:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002988: subs   r2,r2,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2988:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r2, in=[r2, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000298a: bl     0x40f2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[298a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x298e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[40f2:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10624,
		block_size=14,
		insn_addrs="[10624, 10626, 10628, 10630, 10632, 10634]"
	];
	10624 -> { 16626, 10638 };


	10638 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000298e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000298e: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[298e:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10638,
		block_size=2,
		insn_addrs="[10638]"
	];



	10648 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002998</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002998: push   {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2998:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000299a: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[299a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000299c: sub    sp,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[299c:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x18])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000299e: movs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[299e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029a0: strd   r2,r3,[sp,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29a0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029a4: ldr    r6,[0x29f4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29a4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[ram[29f4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029a6: ldr    r5,[0x29f8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29a6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[ram[29f8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029a8: str    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29a8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029aa: movs   r2,#0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29aa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0xf])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029ac: strd   r3,r2,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29ac:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029b0: ldr    r1,[0x29fc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29b0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[29fc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029b2: movs   r3,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29b2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x14])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029b4: mla    r5,r3,r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29b4:4]])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[a1500:4], in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[unique[a1500:4], r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029b8: add.w  r6,r6,r0, lsl #0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29b8:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x7])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r0, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r0, 0x7])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r6, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r6, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r6, in=[r6, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029bc: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029be: mov.w  r0,#0x180
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29be:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x180])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029c2: mla    r1,r0,r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29c2:4]])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[a1500:4], in=[r0, r4])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[unique[a1500:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029c6: ldr    r3,[0x2a00]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29c6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029c8: str    r5,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29c8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029ca: mov.w  r2,#0x140
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29ca:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x140])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029ce: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29ce:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029d0: bl     0x2b78
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29d0:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x29d4, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2b78:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10648,
		block_size=60,
		insn_addrs="[10648, 10650, 10652, 10654, 10656, 10660, 10662, 10664, 10666, 10668, 10672, 10674, 10676, 10680, 10684, 10686, 10690, 10694, 10696, 10698, 10702, 10704]"
	];
	10648 -> { 11128, 10708 };


	10708 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000029d4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000029d4: ldrb   r3,[r6,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29d4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r6, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029d6: ldr    r2,[0x2a04]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29d6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[2a04:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029d8: str    r6,[r5,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29d8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029da: bic    r3,r3,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29da:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x4])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029de: strb   r3,[r6,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29de:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r6, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029e0: mov.w  r3,#0x840
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29e0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x840])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029e4: mla    r3,r4,r3,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29e4:4]])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[a1500:4], in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[unique[a1500:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029e8: add    r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29e8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029ea: strb   r4,[r5,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29ea:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r5, 0x10])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029ec: str    r3,[r5,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29ec:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029ee: add    sp,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29ee:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x18])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000029f0: pop    {r4,r5,r6,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[29f0:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10708,
		block_size=30,
		insn_addrs="[10708, 10710, 10712, 10714, 10718, 10720, 10724, 10728, 10730, 10732, 10734, 10736]"
	];



	10760 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002a08</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002a08: push   {r0,r1,r2,r3,r4,r5,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a08:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a0a: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a0a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a0c: bl     0x2890
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a0c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2a10, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2890:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10760,
		block_size=8,
		insn_addrs="[10760, 10762, 10764]"
	];
	10760 -> { 10384, 10768 };


	10768 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002a10</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002a10: ldr    r3,[0x2ac4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a10:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2ac4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a12: msr    msp,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a12:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9fc80:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9fd00:1], in=[unique[9fc80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2a16:4], unique[9fd00:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x135, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a16: ldr    r5,[0x2ac8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a16:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[ram[2ac8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a18: ldr    r6,[0x2acc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a18:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[ram[2acc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a1a: ldr    r3,[r5,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a1a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a1c: ldr    r7,[0x2ad0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a1c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[ram[2ad0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a1e: orr    r3,r3,#0x200
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a1e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x200])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a22: str    r3,[r5,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a22:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a24: movs   r4,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a24:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a26: movs   r3,#0xe0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a26:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0xe0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a28: strb.w r3,[r5,#0x22]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a28:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x22])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a2c: strb   r4,[r5,#0x1f]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a2c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r5, 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a2e: strb   r4,[r5,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a2e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r5, 0x18])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a30: strb   r4,[r5,#0x19]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a30:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r5, 0x19])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a32: strb   r4,[r5,#0x1a]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a32:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r5, 0x1a])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a34: strb.w r4,[r5,#0x20]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a34:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x20])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a38: ldr    r3,[r5,#0x24]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a38:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x24])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a3a: orr    r3,r3,#0x70000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a3a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x70000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a3e: str    r3,[r5,#0x24]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a3e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x24])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a40: strb.w r4,[r5,#0x23]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a40:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x23])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a44: bl     0x710
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a44:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2a48, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[710:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10768,
		block_size=56,
		insn_addrs="[10768, 10770, 10774, 10776, 10778, 10780, 10782, 10786, 10788, 10790, 10792, 10796, 10798, 10800, 10802, 10804, 10808, 10810, 10814, 10816, 10820]"
	];
	10768 -> { 1808, 10824 };


	10824 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002a48</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002a48: bl     0x9bc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a48:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2a4c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[9bc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10824,
		block_size=4,
		insn_addrs="[10824]"
	];
	10824 -> { 2492, 10828 };


	10828 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002a4c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002a4c: mov.w  r3,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a4c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a50: str    r3,[r5,#0x28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a50:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x28])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a52: str    r3,[r5,#0x2c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a52:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x2c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a54: bl     0xb48
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a54:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2a58, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[b48:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10828,
		block_size=12,
		insn_addrs="[10828, 10832, 10834, 10836]"
	];
	10828 -> { 2888, 10840 };


	10840 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002a58</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002a58: bl     0xa04
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a58:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2a5c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[a04:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10840,
		block_size=4,
		insn_addrs="[10840]"
	];
	10840 -> { 2564, 10844 };


	10844 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002a5c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002a5c: ldr    r3,[0x2ad4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a5c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2ad4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a5e: str    r3,[r6,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a5e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a60: movw   r2,#0x101
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a60:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[0x101])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a64: strh   r2,[r3,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a64:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r3, 0xc])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a66: strd   r4,r4,[r3,#0x60]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a66:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x60])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r4])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a6a: str    r4,[r3,#0x6c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a6a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x6c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a6c: bl     0x4094
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a6c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2a70, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4094:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10844,
		block_size=20,
		insn_addrs="[10844, 10846, 10848, 10852, 10854, 10858, 10860]"
	];
	10844 -> { 16532, 10864 };


	10864 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002a70</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002a70: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a70:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a72: bl     0x2890
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a72:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2a76, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2890:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10864,
		block_size=6,
		insn_addrs="[10864, 10866]"
	];
	10864 -> { 10384, 10870 };


	10870 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002a76</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002a76: movs   r0,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a76:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a78: ldr    r5,[0x2ad8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a78:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[ram[2ad8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a7a: bl     0x2890
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a7a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2a7e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2890:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10870,
		block_size=8,
		insn_addrs="[10870, 10872, 10874]"
	];
	10870 -> { 10384, 10878 };


	10878 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002a7e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002a7e: bl     0x2f7c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a7e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2a82, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2f7c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10878,
		block_size=4,
		insn_addrs="[10878]"
	];
	10878 -> { 12156, 10882 };


	10882 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002a82</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002a82: ldr    r3,[0x2adc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a82:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2adc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a84: str    r5,[r6,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a84:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a86: str    r3,[sp,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a86:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a88: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a88:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a8a: ldr    r1,[0x2ae0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a8a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[2ae0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a8c: str    r4,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a8c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a8e: strd   r4,r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a8e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r4])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a92: mov.w  r2,#0x400
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a92:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x400])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a96: mov    r3,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a96:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a98: strd   r4,r4,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a98:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r4])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a9c: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a9c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002a9e: bl     0x2b78
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2a9e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2aa2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2b78:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10882,
		block_size=32,
		insn_addrs="[10882, 10884, 10886, 10888, 10890, 10892, 10894, 10898, 10902, 10904, 10908, 10910]"
	];
	10882 -> { 11128, 10914 };


	10914 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002aa2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002aa2: ldrb   r2,[r5,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2aa2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r5, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002aa4: mov    r6,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2aa4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002aa6: bic    r2,r2,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2aa6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x4])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002aaa: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2aaa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002aac: strb   r2,[r5,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2aac:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r5, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002aae: bl     0x4196
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2aae:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2ab2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4196:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10914,
		block_size=16,
		insn_addrs="[10914, 10916, 10918, 10922, 10924, 10926]"
	];
	10914 -> { 16790, 10930 };


	10930 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ab2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ab2: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ab2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ab4: bl     0x2998
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ab4:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2ab8, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2998:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10930,
		block_size=6,
		insn_addrs="[10930, 10932]"
	];
	10930 -> { 10648, 10936 };


	10936 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ab8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ab8: mov    r2,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ab8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002aba: mov    r1,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2aba:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002abc: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2abc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002abe: bl     0x978
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2abe:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2ac2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[978:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10936,
		block_size=10,
		insn_addrs="[10936, 10938, 10940, 10942]"
	];
	10936 -> { 2424, 10946 };


	10946 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ac2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ac2: nop    
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ac2:2]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10946,
		block_size=2,
		insn_addrs="[10946]"
	];
	10946 -> { 10948 };


	10948 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ac4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ac4: asrs   r0,r0,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ac4:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[94280:4], in=[0x2, 0x1])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=unique[94300:4], in=[r0, unique[94280:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[94400:4], in=[unique[94300:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[94480:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[94500:1], in=[unique[94480:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[94580:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[94600:1], in=[unique[94400:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[94680:1], in=[unique[94580:1], unique[94600:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[94500:1], unique[94680:1]])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=r0, in=[r0, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ac6: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ac6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10948,
		block_size=4,
		insn_addrs="[10948, 10950]"
	];
	10948 -> { 10952 };


	10952 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ac8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ac8: stc    p0,cr14,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ac8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0xb, 0x0, cr14, unique[92c80:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10952,
		block_size=4,
		insn_addrs="[10952]"
	];
	10952 -> { 10956 };


	10956 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002acc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002acc: lsls   r4,r6,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2acc:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r6, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r4, in=[r6, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ace: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ace:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10956,
		block_size=4,
		insn_addrs="[10956, 10958]"
	];
	10956 -> { 10960 };


	10960 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ad0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ad0: cmp    r0,#0xbd
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ad0:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0xbd, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0xbd])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0xbd])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ad2: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ad2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10960,
		block_size=4,
		insn_addrs="[10960, 10962]"
	];
	10960 -> { 10964 };


	10964 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ad4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ad4: lsls   r0,r4,#0x1a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ad4:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1a, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r4, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1a, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1a, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r4, 0x1a])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ad6: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ad6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10964,
		block_size=4,
		insn_addrs="[10964, 10966]"
	];
	10964 -> { 10968 };


	10968 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ad8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ad8: lsls   r0,r4,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ad8:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x18, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r4, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x18, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x18, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r4, 0x18])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ada: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ada:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10968,
		block_size=4,
		insn_addrs="[10968, 10970]"
	];
	10968 -> { 10972 };


	10972 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002adc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002adc: blxns  r9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2adc:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r9, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r9, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2ade, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10972,
		block_size=2,
		insn_addrs="[10972]"
	];
	10972 -> { 10974 };


	10974 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ade</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ade: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ade:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10974,
		block_size=2,
		insn_addrs="[10974]"
	];
	10974 -> { 10976 };


	10976 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ae0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ae0: asrs   r0,r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ae0:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[94280:4], in=[0x8, 0x1])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=unique[94300:4], in=[r0, unique[94280:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[94400:4], in=[unique[94300:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[94480:1], in=[0x8, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[94500:1], in=[unique[94480:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[94580:1], in=[0x8, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[94600:1], in=[unique[94400:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[94680:1], in=[unique[94580:1], unique[94600:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[94500:1], unique[94680:1]])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=r0, in=[r0, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ae2: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ae2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ae4: push   {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ae4:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ae6: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ae6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ae8: mrs    r5,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ae8:4]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2aec:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r5, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002aec: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2aec:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002aee: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2aee:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2af2:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2af2:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2af2:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002af2: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2af2:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002af6: bl     0x4232
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2af6:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2afa, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4232:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=10976,
		block_size=26,
		insn_addrs="[10976, 10978, 10980, 10982, 10984, 10988, 10990, 10994, 10998]"
	];
	10976 -> { 16946, 11002 };


	11002 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002afa</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002afa: cbz    r0,0x2b10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2afa:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2b10:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11002,
		block_size=2,
		insn_addrs="[11002]"
	];
	11002 -> { 11024, 11004 };


	11004 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002afc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002afc: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2afc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002afe: str    r2,[r0,#0x78]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2afe:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x78])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b00: bl     0x4196
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b00:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2b04, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4196:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11004,
		block_size=8,
		insn_addrs="[11004, 11006, 11008]"
	];
	11004 -> { 16790, 11012 };


	11012 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002b04</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002b04: mov    r1,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b04:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b06: ldr    r0,[0x2b28]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b06:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[2b28:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b08: pop.w  {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b08:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b0c: b.w    0x2e8c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b0c:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2e8c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11012,
		block_size=12,
		insn_addrs="[11012, 11014, 11016, 11020]"
	];
	11012 -> { 11916 };


	11024 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002b10</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002b10: ldrd   r3,r2,[r4,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b10:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b14: cmp    r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b14:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b16: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b16:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b18: adds   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b18:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2b1a:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b1a: str    r3,[r4,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b1a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b1c: msr    basepri,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b1c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2b20:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b20: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b20:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b24: pop    {r3,r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b24:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11024,
		block_size=22,
		insn_addrs="[11024, 11028, 11030, 11032, 11034, 11036, 11040, 11044]"
	];
	11024 -> { 10974 };


	11052 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002b2c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002b2c: push   {r0,r1,r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b2c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b2e: mrs    r1,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b2e:4]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2b32:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r1, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b32: movs   r4,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b32:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b34: msr    basepri_max,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b34:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2b38:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2b38:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r4])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2b38:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b38: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b38:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b3c: ldr    r4,[r0,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b3c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b3e: cbz    r4,0x2b52
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b3e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2b52:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11052,
		block_size=20,
		insn_addrs="[11052, 11054, 11058, 11060, 11064, 11068, 11070]"
	];
	11052 -> { 11090, 11072 };


	11072 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002b40</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002b40: subs   r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b40:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r4, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b42: str    r4,[r0,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b42:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b44: msr    basepri,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b44:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2b48:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b48: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b48:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b4c: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b4c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11072,
		block_size=14,
		insn_addrs="[11072, 11074, 11076, 11080, 11084]"
	];
	11072 -> { 11086 };


	11086 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002b4e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002b4e: add    sp,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b4e:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b50: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b50:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11086,
		block_size=4,
		insn_addrs="[11086, 11088]"
	];



	11090 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002b52</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002b52: orrs.w r4,r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b52:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r4, in=[r2, r3])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b56: bne    0x2b66
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b56:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2b66:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11090,
		block_size=6,
		insn_addrs="[11090, 11094]"
	];
	11090 -> { 11110, 11096 };


	11096 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002b58</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002b58: msr    basepri,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b58:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2b5c:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b5c: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b5c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b60: mvn    r0,#0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b60:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xf])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b64: b      0x2b4e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b64:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2b4e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11096,
		block_size=14,
		insn_addrs="[11096, 11100, 11104, 11108]"
	];
	11096 -> { 11086 };


	11110 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002b66</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002b66: strd   r2,r3,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b66:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b6a: mov    r2,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b6a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b6c: ldr    r0,[0x2b74]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b6c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[2b74:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b6e: bl     0x2e34
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b6e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2b72, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2e34:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11110,
		block_size=12,
		insn_addrs="[11110, 11114, 11116, 11118]"
	];
	11110 -> { 11828, 11122 };


	11122 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002b72</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002b72: b      0x2b4e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b72:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2b4e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11122,
		block_size=2,
		insn_addrs="[11122]"
	];
	11122 -> { 11086 };


	11128 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002b78</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002b78: push   {r4,r5,r6,r7,r8,r9,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b78:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r9])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b7c: adds   r2,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b7c:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, 0x7])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, 0x7])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, 0x7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b7e: sub    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b7e:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b80: bic    r2,r2,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b80:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b84: mov    r6,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b84:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b86: mov    r7,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b86:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b88: ldr    r1,[sp,#0x40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b88:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x40])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b8a: strb   r1,[r0,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b8a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xc])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b8c: add.w  r3,r0,#0x58
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b8c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x58])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b90: adds   r2,#0x7f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b90:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, 0x7f])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, 0x7f])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, 0x7f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b92: strd   r3,r3,[r0,#0x58]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b92:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r0, 0x58])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b96: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b96:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b98: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b98:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b9a: bic    r2,r2,#0x3f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b9a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x3f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002b9e: movs   r1,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2b9e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ba0: str    r3,[r0,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ba0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ba2: strb   r1,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ba2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ba4: cmp    r2,#0x3f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ba4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x3f, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x3f])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x3f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ba6: ldr    r0,[sp,#0x3c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ba6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x3c])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ba8: strb   r0,[r4,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ba8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0xe])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002baa: strd   r3,r3,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2baa:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bae: strb   r3,[r4,#0xf]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bae:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0xf])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bb0: add.w  r9,r6,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bb0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x40])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r9, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r9, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r9, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bb4: sub.w  r8,r2,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bb4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x40])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r8, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r8, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r8, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bb8: bhi    0x2bc6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bb8:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2bc6:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11128,
		block_size=66,
		insn_addrs="[11128, 11132, 11134, 11136, 11140, 11142, 11144, 11146, 11148, 11152, 11154, 11158, 11160, 11162, 11166, 11168, 11170, 11172, 11174, 11176, 11178, 11182, 11184, 11188, 11192]"
	];
	11128 -> { 11206, 11194 };


	11194 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002bba</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002bba: msr    basepri,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bba:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2bbe:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bbe: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bbe:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bc2: mov    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bc2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bc4: svc    0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bc4:2]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0xf, 0x2])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11194,
		block_size=12,
		insn_addrs="[11194, 11198, 11202, 11204]"
	];
	11194 -> { 11206 };


	11206 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002bc6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002bc6: adds   r5,r6,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bc6:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r6, r2])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r6, r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r6, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bc8: mov    r1,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bc8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bca: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bca:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bcc: bl     0x420
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bcc:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2bd0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[420:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11206,
		block_size=10,
		insn_addrs="[11206, 11208, 11210, 11212]"
	];
	11206 -> { 1056, 11216 };


	11216 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002bd0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002bd0: adds   r0,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bd0:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x7])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x7])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bd2: ldr    r3,[sp,#0x38]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bd2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x38])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bd4: bic    r0,r0,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bd4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r0, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bd8: str    r0,[r4,#0x68]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bd8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x68])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bda: strd   r9,r8,[r4,#0x60]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bda:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x60])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r9])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bde: str    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bde:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002be0: ldr    r3,[sp,#0x34]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2be0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x34])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002be2: str    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2be2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002be4: subs   r5,r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2be4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r5, in=[r5, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002be6: ldr    r3,[sp,#0x30]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2be6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x30])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002be8: str    r3,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2be8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bea: mov    r2,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bea:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bec: mov    r3,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bec:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bee: mov    r1,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bee:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bf0: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bf0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bf2: bl     0x914
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bf2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2bf6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[914:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11216,
		block_size=38,
		insn_addrs="[11216, 11218, 11220, 11224, 11226, 11230, 11232, 11234, 11236, 11238, 11240, 11242, 11244, 11246, 11248, 11250]"
	];
	11216 -> { 2324, 11254 };


	11254 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002bf6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002bf6: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bf6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bf8: str    r3,[r4,#0x54]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bf8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x54])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bfa: ldr    r3,[0x2c0c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bfa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2c0c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bfc: ldr    r3,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bfc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002bfe: cbz    r3,0x2c02
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2bfe:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2c02:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11254,
		block_size=10,
		insn_addrs="[11254, 11256, 11258, 11260, 11262]"
	];
	11254 -> { 11266, 11264 };


	11264 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c00</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c00: ldr    r3,[r3,#0x6c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c00:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x6c])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11264,
		block_size=2,
		insn_addrs="[11264]"
	];
	11264 -> { 11266 };


	11266 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c02</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c02: str    r3,[r4,#0x6c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c02:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x6c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c04: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c04:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c06: add    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c06:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c08: pop.w  {r4,r5,r6,r7,r8,r9,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c08:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r9, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11266,
		block_size=10,
		insn_addrs="[11266, 11268, 11270, 11272]"
	];



	11280 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c10</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c10: push   {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c10:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c12: ldr    r5,[0x2c48]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c12:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[ram[2c48:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c14: mov    r3,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c14:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c16: ldr.w  r4,[r3,#0x18]!
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c16:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91f00:4], in=[r3, 0x18])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[91f00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[91f00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c1a: cmp    r4,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c1a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c1c: beq    0x2c20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c1c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2c20:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11280,
		block_size=14,
		insn_addrs="[11280, 11282, 11284, 11286, 11290, 11292]"
	];
	11280 -> { 11296, 11294 };


	11294 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c1e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c1e: cbnz   r4,0x2c22
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c1e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2c22:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11294,
		block_size=2,
		insn_addrs="[11294]"
	];
	11294 -> { 11298, 11296 };


	11296 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c20</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c20: ldr    r4,[r5,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c20:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11296,
		block_size=2,
		insn_addrs="[11296]"
	];
	11296 -> { 11298 };


	11298 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c22</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c22: ldr    r3,[r5,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c22:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c24: cbnz   r0,0x2c36
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c24:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2c36:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11298,
		block_size=4,
		insn_addrs="[11298, 11300]"
	];
	11298 -> { 11318, 11302 };


	11302 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c26</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c26: ldrb   r2,[r3,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c26:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c28: lsls   r2,r2,#0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c28:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1b, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, 0x1b])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c2a: bne    0x2c36
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c2a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2c36:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11302,
		block_size=6,
		insn_addrs="[11302, 11304, 11306]"
	];
	11302 -> { 11318, 11308 };


	11308 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c2c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c2c: ldr    r2,[r4,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c2c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c2e: cbnz   r2,0x2c36
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c2e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2c36:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11308,
		block_size=4,
		insn_addrs="[11308, 11310]"
	];
	11308 -> { 11318, 11312 };


	11312 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c30</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c30: ldrh   r2,[r3,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c30:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r3, 0xe])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c32: cmp    r2,#0x7f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c32:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x7f, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x7f])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x7f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c34: bhi    0x2c42
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c34:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2c42:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11312,
		block_size=6,
		insn_addrs="[11312, 11314, 11316]"
	];
	11312 -> { 11330, 11318 };


	11318 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c36</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c36: cmp    r4,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c36:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c38: beq    0x2c40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c38:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2c40:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11318,
		block_size=4,
		insn_addrs="[11318, 11320]"
	];
	11318 -> { 11328, 11322 };


	11322 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c3a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c3a: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c3a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c3c: bl     0x3134
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c3c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2c40, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3134:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11322,
		block_size=6,
		insn_addrs="[11322, 11324]"
	];
	11322 -> { 12596, 11328 };


	11328 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c40</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c40: mov    r3,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c40:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r4])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11328,
		block_size=2,
		insn_addrs="[11328]"
	];
	11328 -> { 11330 };


	11330 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c42</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c42: str    r3,[r5,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c42:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c44: pop    {r3,r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c44:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11330,
		block_size=4,
		insn_addrs="[11330, 11332]"
	];



	11340 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c4c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c4c: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c4c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c4e: ldrsb.w r2,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c4e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9ad00:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r2, in=[unique[9ad00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c52: ldrb   r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c52:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c54: cmp    r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c54:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c56: mov    r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c56:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c58: bge    0x2c64
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c58:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2c64:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11340,
		block_size=14,
		insn_addrs="[11340, 11342, 11346, 11348, 11350, 11352]"
	];
	11340 -> { 11364, 11354 };


	11354 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c5a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c5a: and    r3,r3,#0x7f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c5a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c5e: strb   r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c5e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c60: bl     0x4122
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c60:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2c64, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4122:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11354,
		block_size=10,
		insn_addrs="[11354, 11358, 11360]"
	];
	11354 -> { 16674, 11364 };


	11364 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c64</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c64: ldr    r3,[0x2c78]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c64:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2c78:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c66: ldr    r0,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c66:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c68: subs   r3,r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c68:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c6a: rsbs   r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c6a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpCY, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c6c: adcs   r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c6c:2]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93480:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93500:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[unique[93480:4], unique[93500:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c6e: pop.w  {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c6e:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c72: b.w    0x2c10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c72:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2c10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11364,
		block_size=18,
		insn_addrs="[11364, 11366, 11368, 11370, 11372, 11374, 11378]"
	];
	11364 -> { 11280 };


	11388 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c7c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c7c: push   {r4,r5,r6}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c7c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c7e: ldrsb.w r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c7e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9ad00:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r3, in=[unique[9ad00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c82: ldrb   r2,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c82:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c84: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c84:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c86: blt    0x2cdc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c86:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2cdc:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11388,
		block_size=12,
		insn_addrs="[11388, 11390, 11394, 11396, 11398]"
	];
	11388 -> { 11484, 11400 };


	11400 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c88</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c88: lsls   r3,r2,#0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c88:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1b, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r2, 0x1b])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c8a: bne    0x2cdc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c8a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2cdc:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11400,
		block_size=4,
		insn_addrs="[11400, 11402]"
	];
	11400 -> { 11484, 11404 };


	11404 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c8c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c8c: ldr    r3,[r0,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c8c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c8e: cbnz   r3,0x2cdc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c8e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2cdc:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11404,
		block_size=4,
		insn_addrs="[11404, 11406]"
	];
	11404 -> { 11484, 11408 };


	11408 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002c90</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002c90: ldr    r1,[0x2ce0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c90:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[2ce0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c92: orn    r2,r2,#0x7f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c92:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[a1880:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=r2, in=[r2, unique[a1880:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c96: strb   r2,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c96:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c98: mov    r2,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c98:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c9a: ldr.w  r4,[r2,#0x18]!
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c9a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91f00:4], in=[r2, 0x18])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[91f00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[91f00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002c9e: cmp    r4,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2c9e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ca0: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ca0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ca2: mov    r3,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ca2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2ca4:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ca4: ldr    r4,[r1,#0x1c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ca4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x1c])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11408,
		block_size=22,
		insn_addrs="[11408, 11410, 11414, 11416, 11418, 11422, 11424, 11426, 11428]"
	];
	11408 -> { 11430 };


	11430 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ca6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ca6: cbnz   r3,0x2cb2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ca6:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2cb2:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11430,
		block_size=2,
		insn_addrs="[11430]"
	];
	11430 -> { 11442, 11432 };


	11432 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ca8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ca8: strd   r2,r4,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ca8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cac: str    r0,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cac:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cae: str    r0,[r1,#0x1c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cae:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x1c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cb0: b      0x2ccc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cb0:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2ccc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11432,
		block_size=10,
		insn_addrs="[11432, 11436, 11438, 11440]"
	];
	11432 -> { 11468 };


	11442 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002cb2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002cb2: ldrsb.w r5,[r0,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cb2:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0xe])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9ad00:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r5, in=[unique[9ad00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cb6: ldrsb.w r6,[r3,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cb6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0xe])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9ad00:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r6, in=[unique[9ad00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cba: cmp    r5,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cba:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r6, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r5, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cbc: beq    0x2cd4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cbc:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2cd4:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11442,
		block_size=12,
		insn_addrs="[11442, 11446, 11450, 11452]"
	];
	11442 -> { 11476, 11454 };


	11454 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002cbe</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002cbe: cmp    r6,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cbe:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r6, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cc0: ble    0x2cd4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cc0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84800:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84900:1], in=[ZR, unique[84800:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2cd4:4], unique[84900:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11454,
		block_size=4,
		insn_addrs="[11454, 11456]"
	];
	11454 -> { 11476, 11458 };


	11458 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002cc2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002cc2: ldr    r2,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cc2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cc4: strd   r3,r2,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cc4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cc8: str    r0,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cc8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cca: str    r0,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cca:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11458,
		block_size=10,
		insn_addrs="[11458, 11460, 11464, 11466]"
	];
	11458 -> { 11468 };


	11468 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ccc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ccc: pop    {r4,r5,r6}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ccc:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cce: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cce:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cd0: b.w    0x2c10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cd0:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2c10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11468,
		block_size=8,
		insn_addrs="[11468, 11470, 11472]"
	];
	11468 -> { 11280 };


	11476 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002cd4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002cd4: cmp    r4,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cd4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cd6: beq    0x2ca8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cd6:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2ca8:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11476,
		block_size=4,
		insn_addrs="[11476, 11478]"
	];
	11476 -> { 11432, 11480 };


	11480 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002cd8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002cd8: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cd8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cda: b      0x2ca6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cda:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2ca6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11480,
		block_size=4,
		insn_addrs="[11480, 11482]"
	];
	11480 -> { 11430 };


	11484 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002cdc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002cdc: pop    {r4,r5,r6}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cdc:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cde: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cde:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11484,
		block_size=4,
		insn_addrs="[11484, 11486]"
	];



	11492 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ce4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ce4: push   {r4,r5,r6,r7,r8,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ce4:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ce8: cmp    r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ce8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cea: ldrb   r2,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cea:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cec: mov    r6,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cec:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cee: ite    eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cee:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cf0: movs   r1,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cf0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2cf2:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cf2: movs   r1,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cf2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2cf4:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cf4: tst    r1,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cf4:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca180:4], in=[r1, r2])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca180:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca180:4], 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cf6: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cf6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cf8: bne    0x2d1a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cf8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2d1a:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11492,
		block_size=22,
		insn_addrs="[11492, 11496, 11498, 11500, 11502, 11504, 11506, 11508, 11510, 11512]"
	];
	11492 -> { 11546, 11514 };


	11514 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002cfa</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002cfa: orr.w  r3,r1,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cfa:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r1, r2])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002cfe: lsrs   r2,r2,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2cfe:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x7])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r2, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r2, in=[r2, 0x7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d00: bne    0x2d34
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d00:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2d34:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11514,
		block_size=8,
		insn_addrs="[11514, 11518, 11520]"
	];
	11514 -> { 11572, 11522 };


	11522 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d02</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d02: strb   r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d02:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11522,
		block_size=2,
		insn_addrs="[11522]"
	];
	11522 -> { 11524 };


	11524 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d04</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d04: cmp    r1,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d04:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x8, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x8])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d06: beq    0x2d40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d06:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2d40:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11524,
		block_size=4,
		insn_addrs="[11524, 11526]"
	];
	11524 -> { 11584, 11528 };


	11528 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d08</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d08: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d08:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d0a: bl     0x2c10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d0a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2d0e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2c10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11528,
		block_size=6,
		insn_addrs="[11528, 11530]"
	];
	11528 -> { 11280, 11534 };


	11534 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d0e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d0e: dmb    #0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d0e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2c, 0x1f])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d12: ldrb   r3,[r4,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d12:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d14: bic    r3,r3,#0x60
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d14:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x60])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d18: strb   r3,[r4,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d18:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11534,
		block_size=12,
		insn_addrs="[11534, 11538, 11540, 11544]"
	];
	11534 -> { 11546 };


	11546 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d1a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d1a: ldr    r3,[0x2db8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d1a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2db8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d1c: ldr    r3,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d1c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d1e: cmp    r3,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d1e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r3, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d20: bne    0x2daa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d20:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2daa:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11546,
		block_size=8,
		insn_addrs="[11546, 11548, 11550, 11552]"
	];
	11546 -> { 11690, 11554 };


	11554 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d22</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d22: mrs    r3,ipsr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d22:4]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9ea00:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9ea80:1], in=[unique[9ea00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[0x4, unique[9ea80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9eb80:4], in=[0x132])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9ec00:4], in=[unique[9eb80:4], 0x1f])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[9ec00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d26: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d26:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d28: bne    0x2daa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d28:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2daa:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11554,
		block_size=8,
		insn_addrs="[11554, 11558, 11560]"
	];
	11554 -> { 11690, 11562 };


	11562 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d2a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d2a: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d2a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d2c: pop.w  {r4,r5,r6,r7,r8,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d2c:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d30: b.w    0x798
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d30:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[798:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11562,
		block_size=10,
		insn_addrs="[11562, 11564, 11568]"
	];
	11562 -> { 1944 };


	11572 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d34</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d34: and    r3,r3,#0x7f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d34:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d38: strb   r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d38:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d3a: bl     0x4122
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d3a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2d3e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4122:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11572,
		block_size=10,
		insn_addrs="[11572, 11576, 11578]"
	];
	11572 -> { 16674, 11582 };


	11582 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d3e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d3e: b      0x2d04
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d3e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2d04:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11582,
		block_size=2,
		insn_addrs="[11582]"
	];
	11582 -> { 11524 };


	11584 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d40</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d40: ldr    r3,[r4,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d40:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d42: cbz    r3,0x2d4a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d42:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2d4a:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11584,
		block_size=4,
		insn_addrs="[11584, 11586]"
	];
	11584 -> { 11594, 11588 };


	11588 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d44</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d44: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d44:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d46: bl     0x4132
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d46:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2d4a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4132:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11588,
		block_size=6,
		insn_addrs="[11588, 11590]"
	];
	11588 -> { 16690, 11594 };


	11594 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d4a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d4a: add.w  r0,r4,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d4a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x18])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d4e: bl     0x42ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d4e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2d52, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[42ac:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11594,
		block_size=8,
		insn_addrs="[11594, 11598]"
	];
	11594 -> { 17068, 11602 };


	11602 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d52</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d52: ldr    r5,[r4,#0x58]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d52:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x58])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d54: add.w  r7,r4,#0x58
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d54:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x58])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r7, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d58: cmp    r7,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d58:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r7, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d5a: beq    0x2d80
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d5a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2d80:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11602,
		block_size=10,
		insn_addrs="[11602, 11604, 11608, 11610]"
	];
	11602 -> { 11648, 11612 };


	11612 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d5c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d5c: mov.w  r8,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d5c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r8, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r8, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11612,
		block_size=4,
		insn_addrs="[11612]"
	];
	11612 -> { 11616 };


	11616 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d60</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d60: cbz    r5,0x2d80
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d60:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2d80:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11616,
		block_size=2,
		insn_addrs="[11616]"
	];
	11616 -> { 11648, 11618 };


	11618 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d62</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d62: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d62:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d64: bl     0x4132
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d64:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2d68, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4132:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11618,
		block_size=6,
		insn_addrs="[11618, 11620]"
	];
	11618 -> { 16690, 11624 };


	11624 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d68</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d68: add.w  r0,r5,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d68:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x18])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d6c: bl     0x42ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d6c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2d70, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[42ac:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11624,
		block_size=8,
		insn_addrs="[11624, 11628]"
	];
	11624 -> { 17068, 11632 };


	11632 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d70</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d70: str.w  r8,[r5,#0x78]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d70:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r5, 0x78])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d74: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d74:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d76: bl     0x2c7c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d76:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2d7a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2c7c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11632,
		block_size=10,
		insn_addrs="[11632, 11636, 11638]"
	];
	11632 -> { 11388, 11642 };


	11642 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d7a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d7a: ldr    r5,[r4,#0x58]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d7a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x58])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d7c: cmp    r7,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d7c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r7, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d7e: bne    0x2d60
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d7e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2d60:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11642,
		block_size=6,
		insn_addrs="[11642, 11644, 11646]"
	];
	11642 -> { 11616, 11648 };


	11648 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d80</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d80: ldr    r5,[0x2db8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d80:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[ram[2db8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d82: ldr    r3,[r5,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d82:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d84: cmp    r4,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d84:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d86: bne    0x2d08
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d86:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2d08:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11648,
		block_size=8,
		insn_addrs="[11648, 11650, 11652, 11654]"
	];
	11648 -> { 11528, 11656 };


	11656 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d88</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d88: mrs    r3,ipsr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d88:4]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9ea00:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9ea80:1], in=[unique[9ea00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[0x4, unique[9ea80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9eb80:4], in=[0x132])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9ec00:4], in=[unique[9eb80:4], 0x1f])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[9ec00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d8c: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d8c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d8e: beq    0x2d08
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d8e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2d08:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11656,
		block_size=8,
		insn_addrs="[11656, 11660, 11662]"
	];
	11656 -> { 11528, 11664 };


	11664 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d90</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d90: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d90:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d92: bl     0x2c10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d92:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2d96, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2c10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11664,
		block_size=6,
		insn_addrs="[11664, 11666]"
	];
	11664 -> { 11280, 11670 };


	11670 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002d96</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002d96: ldr    r3,[0x2dbc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d96:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2dbc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d98: str    r3,[r5,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d98:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d9a: movw   r2,#0x101
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d9a:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[0x101])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002d9e: strh   r2,[r3,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2d9e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r3, 0xc])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002da0: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2da0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002da2: strd   r2,r2,[r3,#0x60]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2da2:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x60])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002da6: str    r2,[r3,#0x6c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2da6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x6c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002da8: b      0x2d0e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2da8:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2d0e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11670,
		block_size=20,
		insn_addrs="[11670, 11672, 11674, 11678, 11680, 11682, 11686, 11688]"
	];
	11670 -> { 11534 };


	11690 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002daa</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002daa: msr    basepri,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2daa:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2dae:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002dae: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dae:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002db2: pop.w  {r4,r5,r6,r7,r8,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2db2:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11690,
		block_size=12,
		insn_addrs="[11690, 11694, 11698]"
	];



	11712 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002dc0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002dc0: push   {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dc0:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002dc2: ldrsb.w r2,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dc2:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9ad00:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r2, in=[unique[9ad00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002dc6: ldrb   r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dc6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002dc8: cmp    r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dc8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002dca: mov    r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dca:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002dcc: bge    0x2dd8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dcc:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2dd8:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11712,
		block_size=14,
		insn_addrs="[11712, 11714, 11718, 11720, 11722, 11724]"
	];
	11712 -> { 11736, 11726 };


	11726 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002dce</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002dce: and    r3,r3,#0x7f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dce:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002dd2: strb   r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dd2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002dd4: bl     0x4122
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dd4:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2dd8, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4122:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11726,
		block_size=10,
		insn_addrs="[11726, 11730, 11732]"
	];
	11726 -> { 16674, 11736 };


	11736 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002dd8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002dd8: ldrb   r3,[r1,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dd8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r1, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002dda: ldr    r2,[0x2e30]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dda:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[2e30:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ddc: orn    r3,r3,#0x7f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ddc:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[a1880:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[a1880:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002de0: mov    r0,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2de0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002de2: strb   r3,[r1,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2de2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r1, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002de4: ldr.w  r3,[r0,#0x18]!
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2de4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91f00:4], in=[r0, 0x18])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[91f00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91f00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002de8: ldr    r4,[r2,#0x1c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2de8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x1c])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002dea: cmp    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dea:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002dec: it     eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dec:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002dee: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dee:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2df0:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11736,
		block_size=24,
		insn_addrs="[11736, 11738, 11740, 11744, 11746, 11748, 11752, 11754, 11756, 11758]"
	];
	11736 -> { 11760 };


	11760 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002df0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002df0: cbnz   r3,0x2dfc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2df0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2dfc:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11760,
		block_size=2,
		insn_addrs="[11760]"
	];
	11760 -> { 11772, 11762 };


	11762 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002df2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002df2: strd   r0,r4,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2df2:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002df6: str    r1,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2df6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002df8: str    r1,[r2,#0x1c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2df8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x1c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002dfa: b      0x2e16
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dfa:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2e16:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11762,
		block_size=10,
		insn_addrs="[11762, 11766, 11768, 11770]"
	];
	11762 -> { 11798 };


	11772 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002dfc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002dfc: ldrsb.w r5,[r1,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2dfc:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r1, 0xe])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9ad00:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r5, in=[unique[9ad00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e00: ldrsb.w r6,[r3,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0xe])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9ad00:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r6, in=[unique[9ad00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e04: cmp    r5,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e04:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r6, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r5, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e06: beq    0x2e26
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e06:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2e26:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11772,
		block_size=12,
		insn_addrs="[11772, 11776, 11780, 11782]"
	];
	11772 -> { 11814, 11784 };


	11784 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002e08</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002e08: cmp    r6,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e08:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r6, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e0a: ble    0x2e26
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e0a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84800:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84900:1], in=[ZR, unique[84800:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2e26:4], unique[84900:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11784,
		block_size=4,
		insn_addrs="[11784, 11786]"
	];
	11784 -> { 11814, 11788 };


	11788 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002e0c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002e0c: ldr    r0,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e0c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e0e: strd   r3,r0,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e0e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e12: str    r1,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e12:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e14: str    r1,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e14:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11788,
		block_size=10,
		insn_addrs="[11788, 11790, 11794, 11796]"
	];
	11788 -> { 11798 };


	11798 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002e16</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002e16: ldr    r0,[r2,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e16:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e18: subs   r3,r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e18:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e1a: rsbs   r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e1a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpCY, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e1c: pop.w  {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e1c:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e20: adcs   r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e20:2]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93480:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93500:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[unique[93480:4], unique[93500:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e22: b.w    0x2c10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e22:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2c10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11798,
		block_size=16,
		insn_addrs="[11798, 11800, 11802, 11804, 11808, 11810]"
	];
	11798 -> { 11280 };


	11814 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002e26</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002e26: cmp    r4,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e26:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e28: beq    0x2df2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e28:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2df2:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11814,
		block_size=4,
		insn_addrs="[11814, 11816]"
	];
	11814 -> { 11762, 11818 };


	11818 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002e2a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002e2a: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e2a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e2c: b      0x2df0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e2c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2df0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11818,
		block_size=4,
		insn_addrs="[11818, 11820]"
	];
	11818 -> { 11760 };


	11828 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002e34</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002e34: push   {r3,r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e34:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e36: ldr    r3,[0x2e80]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e36:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2e80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e38: mov    r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e38:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e3a: mov    r1,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e3a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e3c: ldr    r2,[0x2e84]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e3c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[2e84:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e3e: ldr    r0,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e3e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e40: str    r0,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e40:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e42: ldrd   r7,r6,[sp,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e42:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e46: mrs    r2,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e46:4]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2e4a:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r2, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e4a: movs   r2,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e4a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e4c: msr    basepri_max,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e4c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2e50:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2e50:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r2])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2e50:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e50: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e50:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e54: ldr    r5,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e54:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e56: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e56:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e58: bl     0x4146
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e58:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2e5c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4146:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11828,
		block_size=40,
		insn_addrs="[11828, 11830, 11832, 11834, 11836, 11838, 11840, 11842, 11846, 11850, 11852, 11856, 11860, 11862, 11864]"
	];
	11828 -> { 16710, 11868 };


	11868 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002e5c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002e5c: cmp.w  r6,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e5c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87880:4], r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r6, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e60: it     eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e60:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e62: cmp.w  r7,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e62:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2e66:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87880:4], r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r7, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e66: beq    0x2e76
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e66:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2e76:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11868,
		block_size=12,
		insn_addrs="[11868, 11872, 11874, 11878]"
	];
	11868 -> { 11894, 11880 };


	11880 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002e68</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002e68: ldr    r1,[0x2e88]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e68:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[2e88:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e6a: mov    r2,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e6a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e6c: mov    r3,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e6c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e6e: add.w  r0,r5,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e6e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x18])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e72: bl     0x32a4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e72:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2e76, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[32a4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11880,
		block_size=14,
		insn_addrs="[11880, 11882, 11884, 11886, 11890]"
	];
	11880 -> { 12964, 11894 };


	11894 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002e76</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002e76: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e76:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e78: pop.w  {r3,r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e78:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e7c: b.w    0x798
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e7c:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[798:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11894,
		block_size=10,
		insn_addrs="[11894, 11896, 11900]"
	];
	11894 -> { 1944 };


	11916 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002e8c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002e8c: cbnz   r1,0x2ea2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e8c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2ea2:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11916,
		block_size=2,
		insn_addrs="[11916]"
	];
	11916 -> { 11938, 11918 };


	11918 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002e8e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002e8e: mrs    r0,ipsr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e8e:4]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9ea00:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9ea80:1], in=[unique[9ea00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[0x4, unique[9ea80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9eb80:4], in=[0x132])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9ec00:4], in=[unique[9eb80:4], 0x1f])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, unique[9ec00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e92: cbnz   r0,0x2ea2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e92:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2ea2:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11918,
		block_size=6,
		insn_addrs="[11918, 11922]"
	];
	11918 -> { 11938, 11924 };


	11924 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002e94</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002e94: ldr    r3,[0x2eac]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e94:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2eac:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e96: ldr    r2,[r3,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e96:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e98: ldr    r3,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e98:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e9a: cmp    r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e9a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002e9c: beq    0x2ea2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e9c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2ea2:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11924,
		block_size=10,
		insn_addrs="[11924, 11926, 11928, 11930, 11932]"
	];
	11924 -> { 11938, 11934 };


	11934 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002e9e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002e9e: b.w    0x798
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2e9e:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[798:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11934,
		block_size=4,
		insn_addrs="[11934]"
	];
	11934 -> { 1944 };


	11938 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ea2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ea2: msr    basepri,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ea2:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2ea6:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ea6: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ea6:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002eaa: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2eaa:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11938,
		block_size=10,
		insn_addrs="[11938, 11942, 11946]"
	];
	11938 -> { 10974 };


	11952 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002eb0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002eb0: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2eb0:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002eb2: mrs    r4,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2eb2:4]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2eb6:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r4, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002eb6: movs   r2,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2eb6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002eb8: msr    basepri_max,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2eb8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2ebc:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2ebc:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r2])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2ebc:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ebc: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ebc:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ec0: ldrb   r2,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ec0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ec2: lsls   r1,r2,#0x1d
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ec2:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1d, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1d, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1d, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r2, 0x1d])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ec4: bmi    0x2ed0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ec4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83d80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2ed0:4], unique[83d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11952,
		block_size=22,
		insn_addrs="[11952, 11954, 11958, 11960, 11964, 11968, 11970, 11972]"
	];
	11952 -> { 11984, 11974 };


	11974 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ec6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ec6: msr    basepri,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ec6:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2eca:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002eca: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2eca:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ece: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ece:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11974,
		block_size=10,
		insn_addrs="[11974, 11978, 11982]"
	];



	11984 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ed0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ed0: bic    r2,r2,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ed0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x4])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ed4: strb   r2,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ed4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ed6: bl     0x2c7c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ed6:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2eda, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2c7c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11984,
		block_size=10,
		insn_addrs="[11984, 11988, 11990]"
	];
	11984 -> { 11388, 11994 };


	11994 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002eda</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002eda: mov    r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2eda:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002edc: ldr    r0,[0x2ee8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2edc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[2ee8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ede: pop.w  {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ede:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ee2: b.w    0x2e8c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ee2:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2e8c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=11994,
		block_size=12,
		insn_addrs="[11994, 11996, 11998, 12002]"
	];
	11994 -> { 11916 };


	12012 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002eec</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002eec: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2eec:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002eee: cbnz   r0,0x2f04
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2eee:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f04:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12012,
		block_size=4,
		insn_addrs="[12012, 12014]"
	];
	12012 -> { 12036, 12016 };


	12016 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ef0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ef0: mrs    r2,ipsr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ef0:4]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9ea00:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9ea80:1], in=[unique[9ea00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[0x4, unique[9ea80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9eb80:4], in=[0x132])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9ec00:4], in=[unique[9eb80:4], 0x1f])<br/>
			&nbsp;&nbsp;INT_OR(out=r2, in=[r2, unique[9ec00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ef4: cbnz   r2,0x2f04
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ef4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f04:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12016,
		block_size=6,
		insn_addrs="[12016, 12020]"
	];
	12016 -> { 12036, 12022 };


	12022 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ef6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ef6: ldr    r2,[0x2f10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ef6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[2f10:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ef8: ldr    r1,[r2,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ef8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002efa: ldr    r2,[r2,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2efa:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002efc: cmp    r1,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2efc:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r1, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002efe: beq    0x2f04
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2efe:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f04:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12022,
		block_size=10,
		insn_addrs="[12022, 12024, 12026, 12028, 12030]"
	];
	12022 -> { 12036, 12032 };


	12032 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002f00</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002f00: b.w    0x798
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f00:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[798:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12032,
		block_size=4,
		insn_addrs="[12032]"
	];
	12032 -> { 1944 };


	12036 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002f04</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002f04: msr    basepri,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f04:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f08:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f08: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f08:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f0c: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f0c:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12036,
		block_size=10,
		insn_addrs="[12036, 12040, 12044]"
	];



	12052 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002f14</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002f14: mrs    r1,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f14:4]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f18:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r1, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f18: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f18:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f1a: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f1a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f1e:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f1e:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f1e:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f1e: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f1e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f22: ldr    r3,[0x2f38]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f22:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2f38:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f24: ldr    r2,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f24:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f26: ldrb   r3,[r2,#0xf]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f26:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r2, 0xf])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f28: subs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f28:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f2a: strb   r3,[r2,#0xf]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f2a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r2, 0xf])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f2c: msr    basepri,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f2c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f30:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f30: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f30:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f34: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f34:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12052,
		block_size=34,
		insn_addrs="[12052, 12056, 12058, 12062, 12066, 12068, 12070, 12072, 12074, 12076, 12080, 12084]"
	];



	12092 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002f3c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002f3c: push   {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f3c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f3e: mrs    r5,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f3e:4]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f42:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r5, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f42: movs   r4,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f42:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f44: msr    basepri_max,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f44:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f48:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f48:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r4])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f48:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f48: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f48:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f4c: ldr    r3,[0x2f78]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f4c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2f78:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f4e: ldr    r2,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f4e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f50: ldrb   r3,[r2,#0xf]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f50:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r2, 0xf])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f52: adds   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f52:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f54: strb   r3,[r2,#0xf]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f54:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r2, 0xf])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f56: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f56:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f58: bl     0x2c10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f58:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2f5c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2c10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12092,
		block_size=32,
		insn_addrs="[12092, 12094, 12098, 12100, 12104, 12108, 12110, 12112, 12114, 12116, 12118, 12120]"
	];
	12092 -> { 11280, 12124 };


	12124 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002f5c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002f5c: msr    basepri,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f5c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f60:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f60: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f60:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f64: mrs    r0,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f64:4]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f68:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r0, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f68: msr    basepri_max,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f68:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f6c:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f6c:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r4])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f6c:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f6c: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f6c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f70: pop.w  {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f70:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f74: b.w    0x2eec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f74:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2eec:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12124,
		block_size=28,
		insn_addrs="[12124, 12128, 12132, 12136, 12140, 12144, 12148]"
	];
	12124 -> { 12012 };


	12156 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002f7c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002f7c: ldr    r3,[0x2f88]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f7c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[2f88:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f7e: add.w  r2,r3,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f7e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x18])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f82: strd   r2,r2,[r3,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f82:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x18])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f86: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f86:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12156,
		block_size=12,
		insn_addrs="[12156, 12158, 12162, 12166]"
	];



	12172 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002f8c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002f8c: push   {r3,r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f8c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f8e: mrs    r5,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f8e:4]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f92:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r5, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f92: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f92:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f94: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f94:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f98:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f98:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2f98:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f98: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f98:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f9c: ldr    r1,[0x3004]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f9c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[3004:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002f9e: ldr    r0,[r1,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2f9e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fa0: ldrb   r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fa0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fa2: and    r3,r3,#0x7f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fa2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fa6: strb   r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fa6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fa8: bl     0x4122
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fa8:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2fac, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4122:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12172,
		block_size=32,
		insn_addrs="[12172, 12174, 12178, 12180, 12184, 12188, 12190, 12192, 12194, 12198, 12200]"
	];
	12172 -> { 16674, 12204 };


	12204 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002fac</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002fac: ldr    r3,[r1,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fac:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fae: ldrb   r2,[r3,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fae:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fb0: mov    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fb0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fb2: orn    r2,r2,#0x7f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fb2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[a1880:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=r2, in=[r2, unique[a1880:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fb6: strb   r2,[r3,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fb6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fb8: ldr.w  r2,[r0,#0x18]!
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fb8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91f00:4], in=[r0, 0x18])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[91f00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91f00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fbc: ldr    r4,[r1,#0x1c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fbc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x1c])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fbe: cmp    r2,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fbe:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r2, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fc0: it     eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fc0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fc2: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fc2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2fc4:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12204,
		block_size=24,
		insn_addrs="[12204, 12206, 12208, 12210, 12214, 12216, 12220, 12222, 12224, 12226]"
	];
	12204 -> { 12228 };


	12228 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002fc4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002fc4: cbnz   r2,0x2fd0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fc4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2fd0:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12228,
		block_size=2,
		insn_addrs="[12228]"
	];
	12228 -> { 12240, 12230 };


	12230 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002fc6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002fc6: strd   r0,r4,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fc6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fca: str    r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fca:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fcc: str    r3,[r1,#0x1c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fcc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x1c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fce: b      0x2fea
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fce:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2fea:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12230,
		block_size=10,
		insn_addrs="[12230, 12234, 12236, 12238]"
	];
	12230 -> { 12266 };


	12240 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002fd0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002fd0: ldrsb.w r6,[r3,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fd0:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0xe])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9ad00:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r6, in=[unique[9ad00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fd4: ldrsb.w r7,[r2,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fd4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0xe])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9ad00:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r7, in=[unique[9ad00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fd8: cmp    r6,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fd8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r7, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r6, r7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fda: beq    0x2ffa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fda:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2ffa:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12240,
		block_size=12,
		insn_addrs="[12240, 12244, 12248, 12250]"
	];
	12240 -> { 12282, 12252 };


	12252 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002fdc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002fdc: cmp    r7,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fdc:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r6, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r7, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fde: ble    0x2ffa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fde:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84800:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84900:1], in=[ZR, unique[84800:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2ffa:4], unique[84900:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12252,
		block_size=4,
		insn_addrs="[12252, 12254]"
	];
	12252 -> { 12282, 12256 };


	12256 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002fe0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002fe0: ldr    r1,[r2,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fe0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fe2: strd   r2,r1,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fe2:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fe6: str    r3,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fe6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fe8: str    r3,[r2,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fe8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12256,
		block_size=10,
		insn_addrs="[12256, 12258, 12262, 12264]"
	];
	12256 -> { 12266 };


	12266 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002fea</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002fea: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fea:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002fec: bl     0x2c10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2fec:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x2ff0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2c10:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12266,
		block_size=6,
		insn_addrs="[12266, 12268]"
	];
	12266 -> { 11280, 12272 };


	12272 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ff0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ff0: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ff0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ff2: pop.w  {r3,r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ff2:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ff6: b.w    0x798
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ff6:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[798:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12272,
		block_size=10,
		insn_addrs="[12272, 12274, 12278]"
	];
	12272 -> { 1944 };


	12282 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ffa</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ffa: cmp    r2,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ffa:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r4, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r2, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00002ffc: beq    0x2fc6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ffc:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[2fc6:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12282,
		block_size=4,
		insn_addrs="[12282, 12284]"
	];
	12282 -> { 12230, 12286 };


	12286 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00002ffe</b></td></tr>
			<tr><td align="left" balign="left">
			0x00002ffe: ldr    r2,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[2ffe:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003000: b      0x2fc4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3000:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2fc4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12286,
		block_size=4,
		insn_addrs="[12286, 12288]"
	];
	12286 -> { 12228 };


	12296 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003008</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003008: orrs.w r3,r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3008:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r0, r1])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000300c: push   {r4,r5,r6,r7,r8,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[300c:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003010: mov    r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3010:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003012: mov    r6,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3012:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003014: bne    0x301e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3014:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[301e:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12296,
		block_size=14,
		insn_addrs="[12296, 12300, 12304, 12306, 12308]"
	];
	12296 -> { 12318, 12310 };


	12310 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003016</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003016: bl     0x2f8c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3016:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x301a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2f8c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12310,
		block_size=4,
		insn_addrs="[12310]"
	];
	12310 -> { 12172, 12314 };


	12314 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000301a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000301a: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[301a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000301c: b      0x3076
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[301c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3076:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12314,
		block_size=4,
		insn_addrs="[12314, 12316]"
	];
	12314 -> { 12406 };


	12318 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000301e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000301e: adds   r3,r0,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[301e:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x2])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r0, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003020: sbcs   r3,r1,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3020:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r1, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[unique[87880:4], r1])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r1, unique[87880:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2480:4], in=[r1, unique[87880:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2500:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2580:4], in=[unique[b2500:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[unique[b2480:4], unique[b2580:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003024: blt    0x307a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3024:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[307a:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12318,
		block_size=8,
		insn_addrs="[12318, 12320, 12324]"
	];
	12318 -> { 12410, 12326 };


	12326 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003026</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003026: bl     0x42d6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3026:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x302a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[42d6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12326,
		block_size=4,
		insn_addrs="[12326]"
	];
	12326 -> { 17110, 12330 };


	12330 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000302a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000302a: adds   r4,r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[302a:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, r0])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r5, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12330,
		block_size=2,
		insn_addrs="[12330]"
	];
	12330 -> { 12332 };


	12332 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000302c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000302c: mrs    r8,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[302c:4]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3030:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r8, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003030: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3030:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003032: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3032:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3036:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3036:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3036:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003036: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3036:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000303a: ldr    r7,[0x3084]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[303a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[ram[3084:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000303c: ldr    r3,[0x3088]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[303c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[3088:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000303e: ldr    r0,[r7,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[303e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r7, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003040: str    r0,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3040:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003042: bl     0x2c4c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3042:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3046, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2c4c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12332,
		block_size=26,
		insn_addrs="[12332, 12336, 12338, 12342, 12346, 12348, 12350, 12352, 12354]"
	];
	12332 -> { 11340, 12358 };


	12358 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003046</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003046: ldr    r0,[r7,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3046:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r7, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003048: ldr    r1,[0x308c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3048:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[308c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000304a: mov    r2,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[304a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000304c: mov    r3,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[304c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000304e: adds   r0,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[304e:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x18])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x18])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x18])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003050: bl     0x32a4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3050:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3054, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[32a4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12358,
		block_size=14,
		insn_addrs="[12358, 12360, 12362, 12364, 12366, 12368]"
	];
	12358 -> { 12964, 12372 };


	12372 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003054</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003054: ldr    r2,[r7,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3054:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r7, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003056: ldrb   r3,[r2,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3056:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r2, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003058: orr    r3,r3,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3058:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000305c: strb   r3,[r2,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[305c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r2, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000305e: mov    r0,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[305e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003060: bl     0x798
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3060:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3064, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[798:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12372,
		block_size=16,
		insn_addrs="[12372, 12374, 12376, 12380, 12382, 12384]"
	];
	12372 -> { 1944, 12388 };


	12388 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003064</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003064: bl     0x42d6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3064:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3068, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[42d6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12388,
		block_size=4,
		insn_addrs="[12388]"
	];
	12388 -> { 17110, 12392 };


	12392 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003068</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003068: subs   r0,r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3068:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r4, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000306a: sbc.w  r3,r3,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[306a:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r3, r3])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[r3, r3])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r3, r3])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2680:4], in=[r3, r3])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2700:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2780:4], in=[unique[b2700:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[unique[b2680:4], unique[b2780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000306e: cmp    r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[306e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003070: sbcs   r3,r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3070:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[unique[87700:4], r3])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2480:4], in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2500:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2580:4], in=[unique[b2500:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[unique[b2480:4], unique[b2580:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003074: blt    0x301a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3074:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[301a:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12392,
		block_size=14,
		insn_addrs="[12392, 12394, 12398, 12400, 12404]"
	];
	12392 -> { 12314, 12406 };


	12406 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003076</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003076: pop.w  {r4,r5,r6,r7,r8,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3076:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12406,
		block_size=4,
		insn_addrs="[12406]"
	];



	12410 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000307a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000307a: mvn    r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[307a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r4, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000307e: subs   r4,r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[307e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r4, in=[r4, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003080: b      0x302c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3080:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[302c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12410,
		block_size=8,
		insn_addrs="[12410, 12414, 12416]"
	];
	12410 -> { 12332 };


	12432 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003090</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003090: cmp.w  r1,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3090:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87880:4], r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r1, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003094: it     eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3094:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003096: cmp.w  r0,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3096:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[309a:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87880:4], r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r0, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000309a: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[309a:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000309c: bne    0x30ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[309c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[30ac:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12432,
		block_size=14,
		insn_addrs="[12432, 12436, 12438, 12442, 12444]"
	];
	12432 -> { 12460, 12446 };


	12446 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000309e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000309e: ldr    r3,[0x30c8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[309e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[30c8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000030a0: ldr    r0,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30a0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000030a2: bl     0x41b4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30a2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x30a6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[41b4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12446,
		block_size=8,
		insn_addrs="[12446, 12448, 12450]"
	];
	12446 -> { 16820, 12454 };


	12454 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000030a6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000030a6: mov.w  r0,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30a6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12454,
		block_size=4,
		insn_addrs="[12454]"
	];
	12454 -> { 12458 };


	12458 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000030aa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000030aa: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30aa:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12458,
		block_size=2,
		insn_addrs="[12458]"
	];



	12460 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000030ac</b></td></tr>
			<tr><td align="left" balign="left">
			0x000030ac: bl     0x3008
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30ac:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x30b0, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3008:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12460,
		block_size=4,
		insn_addrs="[12460]"
	];
	12460 -> { 12296, 12464 };


	12464 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000030b0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000030b0: mov.w  r1,#0x3e8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30b0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x3e8])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000030b4: movw   r3,#0x7fff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30b4:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[0x7fff])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000030b8: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30b8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000030ba: smlal  r3,r2,r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30ba:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=unique[b8c80:8], in=[r2])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[b8d00:8], in=[unique[b8c80:8], 0x20])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b8d80:8], in=[r3])<br/>
			&nbsp;&nbsp;INT_OR(out=unique[b8e80:8], in=[unique[b8d00:8], unique[b8d80:8]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=unique[b8f00:8], in=[r0])<br/>
			&nbsp;&nbsp;INT_SEXT(out=unique[b8f80:8], in=[r1])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[b9000:8], in=[unique[b8f00:8], unique[b8f80:8]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[b9100:8], in=[unique[b9000:8], unique[b8e80:8]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=r3, in=[unique[b9100:8], 0x0])<br/>
			&nbsp;&nbsp;SUBPIECE(out=r2, in=[unique[b9100:8], 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000030be: lsrs   r0,r3,#0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30be:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0xf])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r0, in=[r3, 0xf])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000030c0: orr.w  r0,r0,r2, lsl #0x11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30c0:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x11])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r2, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r2, 0x11])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000030c4: b      0x30aa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30c4:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[30aa:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12464,
		block_size=22,
		insn_addrs="[12464, 12468, 12472, 12474, 12478, 12480, 12484]"
	];
	12464 -> { 12458 };


	12492 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000030cc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000030cc: ldr    r3,[0x30d4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30cc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[30d4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000030ce: ldr    r0,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30ce:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000030d0: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30d0:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12492,
		block_size=6,
		insn_addrs="[12492, 12494, 12496]"
	];



	12536 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000030f8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000030f8: ldrh   r3,[r0,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30f8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r0, 0xe])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000030fa: cmp    r3,#0x7f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30fa:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x7f, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x7f])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x7f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000030fc: bhi    0x3124
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30fc:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3124:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12536,
		block_size=6,
		insn_addrs="[12536, 12538, 12540]"
	];
	12536 -> { 12580, 12542 };


	12542 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000030fe</b></td></tr>
			<tr><td align="left" balign="left">
			0x000030fe: ldr    r3,[0x3128]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[30fe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[3128:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003100: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3100:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003102: cbz    r3,0x311e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3102:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[311e:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12542,
		block_size=6,
		insn_addrs="[12542, 12544, 12546]"
	];
	12542 -> { 12574, 12548 };


	12548 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003104</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003104: ldr    r3,[0x312c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3104:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[312c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003106: ldrsb.w r2,[r0,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3106:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0xe])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9ad00:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r2, in=[unique[9ad00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000310a: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[310a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000310c: cmp    r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[310c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000310e: blt    0x3124
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[310e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3124:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12548,
		block_size=12,
		insn_addrs="[12548, 12550, 12554, 12556, 12558]"
	];
	12548 -> { 12580, 12560 };


	12560 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003110</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003110: ldrb   r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3110:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003112: lsls   r3,r3,#0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3112:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1b, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x1b])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003114: bne    0x3124
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3114:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3124:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12560,
		block_size=6,
		insn_addrs="[12560, 12562, 12564]"
	];
	12560 -> { 12580, 12566 };


	12566 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003116</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003116: ldr    r3,[0x3130]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3116:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[3130:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003118: subs   r3,r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3118:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000311a: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[311a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000311c: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[311c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[311e:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12566,
		block_size=8,
		insn_addrs="[12566, 12568, 12570, 12572]"
	];
	12566 -> { 12574 };


	12574 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000311e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000311e: and    r0,r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[311e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003122: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3122:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12574,
		block_size=6,
		insn_addrs="[12574, 12578]"
	];



	12580 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003124</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003124: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3124:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003126: b      0x311e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3126:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[311e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12580,
		block_size=4,
		insn_addrs="[12580, 12582]"
	];
	12580 -> { 12574 };


	12596 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003134</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003134: push   {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3134:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003136: ldr    r3,[0x3170]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3136:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[3170:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003138: ldr    r4,[0x3174]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3138:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[ram[3174:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000313a: ldrb   r6,[r3,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[313a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r6, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000313c: add.w  r3,r6,r6, lsl #0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[313c:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r6, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r6, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r6, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r6, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003140: add.w  r4,r4,r3, lsl #0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3140:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x3])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r3, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r3, 0x3])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003144: mov    r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3144:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003146: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3146:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003148: bl     0x42ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3148:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x314c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[42ac:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12596,
		block_size=24,
		insn_addrs="[12596, 12598, 12600, 12602, 12604, 12608, 12612, 12614, 12616]"
	];
	12596 -> { 17068, 12620 };


	12620 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000314c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000314c: ldr    r3,[0x3178]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[314c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[3178:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000314e: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[314e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003150: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3150:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003152: strb   r2,[r3,r6]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3152:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r3, r6])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2e80:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92900:4], unique[c2e80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003154: bl     0x30f8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3154:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3158, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[30f8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12620,
		block_size=12,
		insn_addrs="[12620, 12622, 12624, 12626, 12628]"
	];
	12620 -> { 12536, 12632 };


	12632 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003158</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003158: cbz    r0,0x316e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3158:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[316e:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12632,
		block_size=2,
		insn_addrs="[12632]"
	];
	12632 -> { 12654, 12634 };


	12634 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000315a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000315a: ldr    r3,[0x317c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[315a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[317c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000315c: ldr    r1,[0x3180]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[315c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[3180:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000315e: ldr    r2,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[315e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003160: subs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3160:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r2, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003162: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3162:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003164: asrs   r3,r2,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3164:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[94280:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=unique[94300:4], in=[r2, unique[94280:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[94400:4], in=[unique[94300:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[94480:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[94500:1], in=[unique[94480:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[94580:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[94600:1], in=[unique[94400:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[94680:1], in=[unique[94580:1], unique[94600:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[94500:1], unique[94680:1]])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=r3, in=[r2, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003166: pop.w  {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3166:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000316a: b.w    0x32a4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[316a:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[32a4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12634,
		block_size=20,
		insn_addrs="[12634, 12636, 12638, 12640, 12642, 12644, 12646, 12650]"
	];
	12634 -> { 12964 };


	12654 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000316e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000316e: pop    {r4,r5,r6,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[316e:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12654,
		block_size=2,
		insn_addrs="[12654]"
	];



	12676 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003184</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003184: push   {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3184:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003186: mrs    r5,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3186:4]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[318a:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r5, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000318a: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[318a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000318c: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[318c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3190:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3190:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3190:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003190: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3190:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003194: ldr    r3,[0x31d8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3194:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[31d8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003196: ldr    r2,[0x31dc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3196:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[31dc:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003198: ldr    r4,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3198:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000319a: ldr    r0,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[319a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000319c: cmp    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[319c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r4, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000319e: bne    0x31ae
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[319e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[31ae:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12676,
		block_size=28,
		insn_addrs="[12676, 12678, 12682, 12684, 12688, 12692, 12694, 12696, 12698, 12700, 12702]"
	];
	12676 -> { 12718, 12704 };


	12704 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000031a0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000031a0: bl     0x3134
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31a0:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x31a4, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3134:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12704,
		block_size=4,
		insn_addrs="[12704]"
	];
	12704 -> { 12596, 12708 };


	12708 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000031a4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000031a4: msr    basepri,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31a4:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[31a8:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031a8: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31a8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031ac: pop    {r3,r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31ac:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12708,
		block_size=10,
		insn_addrs="[12708, 12712, 12716]"
	];



	12718 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000031ae</b></td></tr>
			<tr><td align="left" balign="left">
			0x000031ae: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31ae:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031b0: ldrb   r3,[r3,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31b0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031b2: str    r1,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31b2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031b4: ldr    r2,[0x31e0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31b4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[31e0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031b6: ldrb   r3,[r2,r3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31b6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r2, r3])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97a00:1], in=[0x600000f0c300, unique[92900:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97a00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031b8: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31b8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031ba: beq    0x31a4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31ba:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[31a4:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12718,
		block_size=14,
		insn_addrs="[12718, 12720, 12722, 12724, 12726, 12728, 12730]"
	];
	12718 -> { 12708, 12732 };


	12732 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000031bc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000031bc: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031be: bl     0x30f8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31be:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x31c2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[30f8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12732,
		block_size=6,
		insn_addrs="[12732, 12734]"
	];
	12732 -> { 12536, 12738 };


	12738 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000031c2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000031c2: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31c2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031c4: beq    0x31a4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31c4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[31a4:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12738,
		block_size=4,
		insn_addrs="[12738, 12740]"
	];
	12738 -> { 12708, 12742 };


	12742 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000031c6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000031c6: ldrb   r3,[r4,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31c6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031c8: lsls   r3,r3,#0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31c8:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1b, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x1b])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031ca: bne    0x31d2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31ca:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[31d2:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12742,
		block_size=6,
		insn_addrs="[12742, 12744, 12746]"
	];
	12742 -> { 12754, 12748 };


	12748 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000031cc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000031cc: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31cc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031ce: bl     0x2dc0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31ce:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x31d2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2dc0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12748,
		block_size=6,
		insn_addrs="[12748, 12750]"
	];
	12748 -> { 11712, 12754 };


	12754 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000031d2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000031d2: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31d2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031d4: b      0x31a0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31d4:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[31a0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12754,
		block_size=4,
		insn_addrs="[12754, 12756]"
	];
	12754 -> { 12704 };


	12772 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000031e4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000031e4: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31e4:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031e6: ldr    r0,[0x3200]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31e6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[3200:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031e8: ldr    r2,[0x3204]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31e8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[3204:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031ea: ldr    r1,[0x3208]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31ea:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[3208:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031ec: subs   r2,r2,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31ec:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r2, in=[r2, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031ee: bl     0x40f6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31ee:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x31f2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[40f6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12772,
		block_size=14,
		insn_addrs="[12772, 12774, 12776, 12778, 12780, 12782]"
	];
	12772 -> { 16630, 12786 };


	12786 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000031f2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000031f2: pop.w  {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31f2:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031f6: ldr    r2,[0x320c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31f6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[320c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031f8: ldr    r1,[0x3210]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31f8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[3210:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031fa: ldr    r0,[0x3214]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31fa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[3214:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000031fc: b.w    0x40f6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[31fc:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[40f6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12786,
		block_size=14,
		insn_addrs="[12786, 12790, 12792, 12794, 12796]"
	];
	12786 -> { 16630 };


	12824 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003218</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003218: ldr    r3,[0x3228]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3218:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[3228:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000321a: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[321a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000321c: cbnz   r3,0x3222
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[321c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3222:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12824,
		block_size=6,
		insn_addrs="[12824, 12826, 12828]"
	];
	12824 -> { 12834, 12830 };


	12830 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000321e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000321e: b.w    0x1b5c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[321e:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1b5c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12830,
		block_size=4,
		insn_addrs="[12830]"
	];
	12830 -> { 7004 };


	12834 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003222</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003222: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3222:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003224: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3224:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12834,
		block_size=4,
		insn_addrs="[12834, 12836]"
	];



	12844 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000322c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000322c: push   {r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[322c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000322e: cbz    r0,0x324e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[322e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[324e:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12844,
		block_size=4,
		insn_addrs="[12844, 12846]"
	];
	12844 -> { 12878, 12848 };


	12848 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003230</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003230: ldr    r3,[0x3260]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3230:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[3260:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003232: ldr    r3,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3232:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003234: cmp    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3234:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003236: beq    0x324e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3236:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[324e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12848,
		block_size=8,
		insn_addrs="[12848, 12850, 12852, 12854]"
	];
	12848 -> { 12878, 12856 };


	12856 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003238</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003238: ldr    r3,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3238:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000323a: cbz    r3,0x324e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[323a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[324e:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12856,
		block_size=4,
		insn_addrs="[12856, 12858]"
	];
	12856 -> { 12878, 12860 };


	12860 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000323c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000323c: ldrd   r2,r1,[r3,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[323c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003240: ldrd   r4,r5,[r0,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3240:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r0, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003244: adds   r2,r2,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3244:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, r4])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, r4])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003246: adc.w  r1,r1,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3246:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r1, r5])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r1, r5])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r1, r5])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93780:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93880:4], in=[r5, unique[93780:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r1, unique[93880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000324a: strd   r2,r1,[r3,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[324a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r3, 0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r1])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12860,
		block_size=18,
		insn_addrs="[12860, 12864, 12868, 12870, 12874]"
	];
	12860 -> { 12878 };


	12878 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000324e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000324e: ldrd   r3,r2,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[324e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003252: str    r3,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3252:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003254: str    r2,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3254:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003256: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3256:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003258: strd   r3,r3,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3258:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000325c: pop    {r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[325c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12878,
		block_size=16,
		insn_addrs="[12878, 12882, 12884, 12886, 12888, 12892]"
	];



	12900 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003264</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003264: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3264:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003266: ldr    r3,[0x32a0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3266:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[32a0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003268: ldr    r4,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3268:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000326a: cmp    r4,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[326a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000326c: bne    0x3278
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[326c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3278:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12900,
		block_size=10,
		insn_addrs="[12900, 12902, 12904, 12906, 12908]"
	];
	12900 -> { 12920, 12910 };


	12910 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000326e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000326e: bl     0x3218
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[326e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3272, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3218:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12910,
		block_size=4,
		insn_addrs="[12910]"
	];
	12910 -> { 12824, 12914 };


	12914 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003272</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003272: mvn    r0,#0x80000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3272:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x80000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12914,
		block_size=4,
		insn_addrs="[12914]"
	];
	12914 -> { 12918 };


	12918 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003276</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003276: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3276:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12918,
		block_size=2,
		insn_addrs="[12918]"
	];



	12920 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003278</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003278: bl     0x3218
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3278:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x327c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3218:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12920,
		block_size=4,
		insn_addrs="[12920]"
	];
	12920 -> { 12824, 12924 };


	12924 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000327c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000327c: cmp    r4,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[327c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000327e: beq    0x3272
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[327e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3272:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12924,
		block_size=4,
		insn_addrs="[12924, 12926]"
	];
	12924 -> { 12914, 12928 };


	12928 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003280</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003280: ldrd   r3,r2,[r4,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3280:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003284: subs   r3,r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3284:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003286: sbc.w  r2,r2,r0, asr #0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3286:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[88a80:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88b00:4], in=[r0, unique[88a80:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88c00:4], in=[unique[88b00:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=unique[88d80:4], in=[r0, 0x1f])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r2, unique[88d80:4]])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[unique[88d80:4], r2])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r2, unique[88d80:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2680:4], in=[r2, unique[88d80:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2700:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2780:4], in=[unique[b2700:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r2, in=[unique[b2680:4], unique[b2780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000328a: cmp.w  r3,#0x80000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[328a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x80000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87900:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000328e: sbcs   r1,r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[328e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[unique[87700:4], r2])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2480:4], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2500:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2580:4], in=[unique[b2500:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r1, in=[unique[b2480:4], unique[b2580:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003292: bge    0x3272
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3292:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3272:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12928,
		block_size=20,
		insn_addrs="[12928, 12932, 12934, 12938, 12942, 12946]"
	];
	12928 -> { 12914, 12948 };


	12948 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003294</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003294: cmp    r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3294:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003296: ite    ge
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3296:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86580:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003298: mov    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3298:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[d80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[d80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[329a:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000329a: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[329a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[e80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[e80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[329c:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000329c: b      0x3276
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[329c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3276:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12948,
		block_size=10,
		insn_addrs="[12948, 12950, 12952, 12954, 12956]"
	];
	12948 -> { 12918 };


	12964 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000032a4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000032a4: cmp.w  r3,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32a4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87880:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r3, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032a8: it     eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32a8:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032aa: cmp.w  r2,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32aa:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[32ae:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87880:4], r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r2, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032ae: push   {r3,r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32ae:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032b0: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32b0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032b2: mov    r5,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32b2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032b4: mov    r6,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32b4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032b6: beq    0x3376
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32b6:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3376:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12964,
		block_size=20,
		insn_addrs="[12964, 12968, 12970, 12974, 12976, 12978, 12980, 12982]"
	];
	12964 -> { 13174, 12984 };


	12984 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000032b8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000032b8: str    r1,[r0,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32b8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032ba: mrs    r7,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32ba:4]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[32be:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r7, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032be: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32be:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032c0: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32c0:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[32c4:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[32c4:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[32c4:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032c4: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32c4:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032c8: adds   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32c8:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032ca: sbcs   r3,r5,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32ca:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r5, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[unique[87880:4], r5])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r5, unique[87880:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2480:4], in=[r5, unique[87880:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2500:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2580:4], in=[unique[b2500:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[unique[b2480:4], unique[b2580:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032ce: bge    0x331a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32ce:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[331a:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=12984,
		block_size=24,
		insn_addrs="[12984, 12986, 12990, 12992, 12996, 13000, 13002, 13006]"
	];
	12984 -> { 13082, 13008 };


	13008 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000032d0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000032d0: ldr    r1,[0x338c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32d0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[ram[338c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032d2: ldrd   r2,r0,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32d2:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032d6: mvn    r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32d6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r3, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032da: subs   r3,r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32da:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032dc: mov.w  r2,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32dc:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032e0: sbc.w  r0,r2,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32e0:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r2, r0])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[r0, r2])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r2, r0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2680:4], in=[r2, r0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2700:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2780:4], in=[unique[b2700:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[unique[b2680:4], unique[b2780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032e4: subs   r6,r3,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32e4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r6, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=r6, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032e6: sbc.w  r0,r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32e6:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r0, r5])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[r5, r0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r0, r5])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2680:4], in=[r0, r5])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2700:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2780:4], in=[unique[b2700:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[unique[b2680:4], unique[b2780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032ea: cmp    r6,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32ea:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032ec: sbcs   r3,r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32ec:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[unique[87700:4], r0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2480:4], in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2500:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2580:4], in=[unique[b2500:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[unique[b2480:4], unique[b2580:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032f0: bge    0x32f6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32f0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[32f6:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13008,
		block_size=34,
		insn_addrs="[13008, 13010, 13014, 13018, 13020, 13024, 13028, 13030, 13034, 13036, 13040]"
	];
	13008 -> { 13046, 13042 };


	13042 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000032f2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000032f2: movs   r6,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32f2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032f4: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32f4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13042,
		block_size=4,
		insn_addrs="[13042, 13044]"
	];
	13042 -> { 13046 };


	13046 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000032f6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000032f6: strd   r6,r0,[r4,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32f6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r6])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032fa: ldr    r6,[0x3390]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32fa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[ram[3390:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000032fc: ldr.w  r12,[r6,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[32fc:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r12, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003300: ldr    r5,[r6,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3300:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003302: cmp    r12,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3302:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r6, r12])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r12, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r12, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003304: it     eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3304:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003306: mov.w  r12,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3306:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[330a:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13046,
		block_size=20,
		insn_addrs="[13046, 13050, 13052, 13056, 13058, 13060, 13062]"
	];
	13046 -> { 13066 };


	13066 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000330a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000330a: cmp.w  r12,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[330a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r12])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r12, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r12, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000330e: bne    0x332c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[330e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[332c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13066,
		block_size=6,
		insn_addrs="[13066, 13070]"
	];
	13066 -> { 13100, 13072 };


	13072 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003310</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003310: strd   r6,r5,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3310:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r6])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003314: str    r4,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3314:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003316: str    r4,[r6,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3316:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003318: b      0x3354
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3318:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3354:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13072,
		block_size=10,
		insn_addrs="[13072, 13076, 13078, 13080]"
	];
	13072 -> { 13140 };


	13082 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000331a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000331a: bl     0x3218
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[331a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x331e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3218:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13082,
		block_size=4,
		insn_addrs="[13082]"
	];
	13082 -> { 12824, 13086 };


	13086 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000331e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000331e: adds   r6,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[331e:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r6, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r6, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r6, in=[r6, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003320: adc    r5,r5,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3320:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93600:4], in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93680:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[unique[93600:4], unique[93680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003324: adds   r6,r6,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3324:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r6, r0])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r6, r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=r6, in=[r6, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003326: adc.w  r0,r5,r0, asr #0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3326:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[88a80:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88b00:4], in=[r0, unique[88a80:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88c00:4], in=[unique[88b00:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=unique[88d80:4], in=[r0, 0x1f])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r5, unique[88d80:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r5, unique[88d80:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r5, unique[88d80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93780:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93880:4], in=[unique[88d80:4], unique[93780:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r5, unique[93880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000332a: b      0x32f6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[332a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[32f6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13086,
		block_size=14,
		insn_addrs="[13086, 13088, 13092, 13094, 13098]"
	];
	13086 -> { 13046 };


	13100 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000332c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000332c: ldrd   r2,r0,[r12,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[332c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r12, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003330: ldrd   r3,r1,[r4,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3330:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003334: cmp    r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3334:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003336: sbcs.w lr,r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3336:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r1, r0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2680:4], in=[r1, r0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2700:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2780:4], in=[unique[b2700:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=lr, in=[unique[b2680:4], unique[b2780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[lr, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[lr, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000333a: bge    0x3378
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[333a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3378:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13100,
		block_size=16,
		insn_addrs="[13100, 13104, 13108, 13110, 13114]"
	];
	13100 -> { 13176, 13116 };


	13116 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000333c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000333c: subs   r2,r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[333c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=r2, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000333e: ldr.w  r3,[r12,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[333e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r12, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003342: sbc.w  r0,r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3342:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r0, r1])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2680:4], in=[r0, r1])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2700:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2780:4], in=[unique[b2700:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[unique[b2680:4], unique[b2780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003346: strd   r2,r0,[r12,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3346:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r12, 0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000334a: strd   r12,r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[334a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r12])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000334e: str    r4,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[334e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003350: str.w  r4,[r12,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3350:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r12, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13116,
		block_size=24,
		insn_addrs="[13116, 13118, 13122, 13126, 13130, 13134, 13136]"
	];
	13116 -> { 13140 };


	13140 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003354</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003354: ldr    r3,[r6,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3354:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003356: cmp    r3,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3356:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r6, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003358: beq    0x336e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3358:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[336e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13140,
		block_size=6,
		insn_addrs="[13140, 13142, 13144]"
	];
	13140 -> { 13166, 13146 };


	13146 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000335a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000335a: cmp    r4,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[335a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000335c: bne    0x336e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[335c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[336e:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13146,
		block_size=4,
		insn_addrs="[13146, 13148]"
	];
	13146 -> { 13166, 13150 };


	13150 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000335e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000335e: ldr    r3,[0x3394]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[335e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[3394:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003360: ldr    r4,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3360:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003362: cbnz   r4,0x336e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3362:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[336e:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13150,
		block_size=6,
		insn_addrs="[13150, 13152, 13154]"
	];
	13150 -> { 13166, 13156 };


	13156 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003364</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003364: bl     0x3264
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3364:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3368, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3264:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13156,
		block_size=4,
		insn_addrs="[13156]"
	];
	13156 -> { 12900, 13160 };


	13160 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003368</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003368: mov    r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3368:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000336a: bl     0x1b00
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[336a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x336e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1b00:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13160,
		block_size=6,
		insn_addrs="[13160, 13162]"
	];
	13160 -> { 6912, 13166 };


	13166 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000336e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000336e: msr    basepri,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[336e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3372:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003372: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3372:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13166,
		block_size=8,
		insn_addrs="[13166, 13170]"
	];
	13166 -> { 13174 };


	13174 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003376</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003376: pop    {r3,r4,r5,r6,r7,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3376:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13174,
		block_size=2,
		insn_addrs="[13174]"
	];



	13176 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003378</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003378: subs   r3,r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3378:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000337a: sbc.w  r1,r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[337a:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r1, r0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2680:4], in=[r1, r0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2700:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2780:4], in=[unique[b2700:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r1, in=[unique[b2680:4], unique[b2780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000337e: cmp    r12,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[337e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r12])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r12, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r12, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003380: strd   r3,r1,[r4,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3380:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003384: beq    0x3310
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3384:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3310:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13176,
		block_size=14,
		insn_addrs="[13176, 13178, 13182, 13184, 13188]"
	];
	13176 -> { 13072, 13190 };


	13190 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003386</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003386: ldr.w  r12,[r12,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3386:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r12, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r12, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000338a: b      0x330a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[338a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[330a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13190,
		block_size=6,
		insn_addrs="[13190, 13194]"
	];
	13190 -> { 13066 };


	13208 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003398</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003398: push   {r3,r4,r5,r6,r7,r8,r9,r10,r11,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3398:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r11])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r10])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r9])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000339c: mrs    r12,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[339c:4]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[33a0:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r12, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033a0: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33a0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033a2: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33a2:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[33a6:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[33a6:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[33a6:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033a6: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33a6:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033aa: ldr.w  r10,[0x345c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33aa:4]])<br/>
			&nbsp;&nbsp;COPY(out=r10, in=[ram[345c:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033ae: ldr.w  r9,[0x3460]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33ae:4]])<br/>
			&nbsp;&nbsp;COPY(out=r9, in=[ram[3460:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033b2: ldr    r7,[0x3464]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33b2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[ram[3464:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033b4: str.w  r0,[r9,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33b4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r9, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033b8: ldr.w  r0,[r10,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33b8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r10, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033bc: movs   r4,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033be: cmp    r0,r10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33be:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r10, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r10])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r0, r10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033c0: it     eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33c0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033c2: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33c2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[33c4:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033c4: movs   r5,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33c4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13208,
		block_size=46,
		insn_addrs="[13208, 13212, 13216, 13218, 13222, 13226, 13230, 13234, 13236, 13240, 13244, 13246, 13248, 13250, 13252]"
	];
	13208 -> { 13254 };


	13254 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000033c6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000033c6: ldrd   r2,r1,[r7,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33c6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033ca: ldr.w  r3,[r9,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33ca:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r9, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033ce: mov    r8,r12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33ce:2]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[r12])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033d0: cbz    r0,0x3432
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33d0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3432:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13254,
		block_size=12,
		insn_addrs="[13254, 13258, 13262, 13264]"
	];
	13254 -> { 13362, 13266 };


	13266 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000033d2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000033d2: ldrd   r6,r12,[r0,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33d2:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r0, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r12, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033d6: asr.w  lr,r3, asr #0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33d6:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[88a80:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88b00:4], in=[r3, unique[88a80:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88c00:4], in=[unique[88b00:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=unique[88d80:4], in=[r3, 0x1f])<br/>
			&nbsp;&nbsp;COPY(out=lr, in=[unique[88d80:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[lr, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[lr, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033da: cmp    r3,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33da:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r6, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033dc: sbcs.w r11,lr,r12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33dc:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[lr, r12])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[r12, lr])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[lr, r12])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2680:4], in=[lr, r12])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2700:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2780:4], in=[unique[b2700:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r11, in=[unique[b2680:4], unique[b2780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033e0: bge    0x33ee
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33e0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[33ee:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13266,
		block_size=16,
		insn_addrs="[13266, 13270, 13274, 13276, 13280]"
	];
	13266 -> { 13294, 13282 };


	13282 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000033e2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000033e2: subs   r6,r6,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33e2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=r6, in=[r6, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033e4: sbc.w  r4,r12,lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33e4:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r12, lr])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[lr, r12])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r12, lr])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2680:4], in=[r12, lr])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2700:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2780:4], in=[unique[b2700:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r4, in=[unique[b2680:4], unique[b2780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033e8: strd   r6,r4,[r0,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33e8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r0, 0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r6])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033ec: b      0x3432
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33ec:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3432:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13282,
		block_size=12,
		insn_addrs="[13282, 13284, 13288, 13292]"
	];
	13282 -> { 13362 };


	13294 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000033ee</b></td></tr>
			<tr><td align="left" balign="left">
			0x000033ee: adds   r2,r6,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33ee:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r6, r2])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r6, r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r6, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033f0: adc.w  r1,r1,r6, asr #0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33f0:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[88a80:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88b00:4], in=[r6, unique[88a80:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88c00:4], in=[unique[88b00:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=unique[88d80:4], in=[r6, 0x1f])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r1, unique[88d80:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r1, unique[88d80:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r1, unique[88d80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93780:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93880:4], in=[unique[88d80:4], unique[93780:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r1, unique[93880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033f4: strd   r4,r5,[r0,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33f4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r0, 0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r4])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033f8: strd   r2,r1,[r7,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33f8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000033fc: bl     0x322c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[33fc:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3400, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[322c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13294,
		block_size=18,
		insn_addrs="[13294, 13296, 13300, 13304, 13308]"
	];
	13294 -> { 12844, 13312 };


	13312 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003400</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003400: msr    basepri,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3400:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3404:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003404: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3404:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003408: ldr    r3,[r0,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3408:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000340a: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[340a:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x340c, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13312,
		block_size=12,
		insn_addrs="[13312, 13316, 13320, 13322]"
	];
	13312 -> { 13324 };


	13324 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000340c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000340c: mrs    r8,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[340c:4]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3410:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r8, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003410: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3410:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003412: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3412:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3416:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3416:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3416:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003416: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3416:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000341a: ldr.w  r3,[r9,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[341a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r9, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000341e: ldr.w  r0,[r10,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[341e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r10, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003422: subs   r3,r3,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3422:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r6, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003424: cmp    r0,r10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3424:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r10, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r10])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r0, r10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003426: mov    r12,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3426:2]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003428: str.w  r3,[r9,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3428:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r9, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000342c: bne    0x33c6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[342c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[33c6:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13324,
		block_size=34,
		insn_addrs="[13324, 13328, 13330, 13334, 13338, 13342, 13346, 13348, 13350, 13352, 13356]"
	];
	13324 -> { 13254, 13358 };


	13358 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000342e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000342e: ldrd   r2,r1,[r7,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[342e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13358,
		block_size=4,
		insn_addrs="[13358]"
	];
	13358 -> { 13362 };


	13362 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003432</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003432: adds   r2,r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3432:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003434: adc.w  r3,r1,r3, asr #0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3434:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[88a80:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88b00:4], in=[r3, unique[88a80:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88c00:4], in=[unique[88b00:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=unique[88d80:4], in=[r3, 0x1f])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r1, unique[88d80:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r1, unique[88d80:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r1, unique[88d80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93780:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93880:4], in=[unique[88d80:4], unique[93780:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r1, unique[93880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003438: movs   r4,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3438:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000343a: strd   r2,r3,[r7,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[343a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000343e: str.w  r4,[r9,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[343e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r9, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003442: bl     0x3264
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3442:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3446, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3264:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13362,
		block_size=20,
		insn_addrs="[13362, 13364, 13368, 13370, 13374, 13378]"
	];
	13362 -> { 12900, 13382 };


	13382 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003446</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003446: mov    r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3446:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003448: bl     0x1b00
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3448:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x344c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1b00:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13382,
		block_size=6,
		insn_addrs="[13382, 13384]"
	];
	13382 -> { 6912, 13388 };


	13388 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000344c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000344c: msr    basepri,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[344c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3450:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003450: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3450:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003454: pop.w  {r3,r4,r5,r6,r7,r8,r9,r10,r11,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3454:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r9, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r10, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r11, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003458: b.w    0x3184
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3458:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3184:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13388,
		block_size=16,
		insn_addrs="[13388, 13392, 13396, 13400]"
	];
	13388 -> { 12676 };


	13416 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003468</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003468: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3468:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000346a: mrs    r4,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[346a:4]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[346e:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r4, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000346e: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[346e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003470: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3470:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3474:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3474:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3474:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003474: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3474:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003478: bl     0x3218
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3478:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x347c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3218:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13416,
		block_size=20,
		insn_addrs="[13416, 13418, 13422, 13424, 13428, 13432]"
	];
	13416 -> { 12824, 13436 };


	13436 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000347c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000347c: ldr    r2,[0x3494]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[347c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[ram[3494:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000347e: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[347e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003480: ldrd   r0,r1,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3480:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003484: adds   r0,r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3484:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003486: adc.w  r1,r1,r3, asr #0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3486:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[88a80:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88b00:4], in=[r3, unique[88a80:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88c00:4], in=[unique[88b00:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=unique[88d80:4], in=[r3, 0x1f])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r1, unique[88d80:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r1, unique[88d80:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r1, unique[88d80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93780:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93880:4], in=[unique[88d80:4], unique[93780:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r1, unique[93880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000348a: msr    basepri,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[348a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[348e:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000348e: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[348e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003492: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3492:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13436,
		block_size=24,
		insn_addrs="[13436, 13438, 13440, 13444, 13446, 13450, 13454, 13458]"
	];



	13464 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003498</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003498: ldr    r0,[0x34a0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3498:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[34a0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000349a: b.w    0x3a58
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[349a:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3a58:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13464,
		block_size=6,
		insn_addrs="[13464, 13466]"
	];
	13464 -> { 14936 };


	13476 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000034a4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000034a4: push   {r0,r1,r2,r3}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34a4:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034a6: push   {r0,r1,r2,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34a6:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034a8: ldr    r3,[0x34c4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34a8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[34c4:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034aa: add    r2,sp,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34aa:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x10])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034ac: ldr    r0,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34ac:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034ae: ldr.w  r1,[r2],#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34ae:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91b80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034b2: str    r2,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34b2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034b4: bl     0x34c8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34b4:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x34b8, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[34c8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13476,
		block_size=20,
		insn_addrs="[13476, 13478, 13480, 13482, 13484, 13486, 13490, 13492]"
	];
	13476 -> { 13512, 13496 };


	13496 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000034b8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000034b8: add    sp,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34b8:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0xc])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034ba: pop.w  lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34ba:4]])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, sp])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034be: add    sp,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34be:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x10])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034c0: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34c0:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13496,
		block_size=10,
		insn_addrs="[13496, 13498, 13502, 13504]"
	];



	13512 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000034c8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000034c8: push   {r4,r5,r6,r7,r8,r9,r10,r11,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34c8:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r11])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r10])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r9])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034cc: sub    sp,#0x34
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34cc:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x34])<br/>
			&nbsp;&nbsp;INT_SUB(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034ce: ldr    r3,[r0,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34ce:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034d0: str    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34d0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034d2: ldrb   r3,[r0,#0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34d2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0x2])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034d4: mov    r5,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34d4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034d6: lsls   r2,r3,#0x1e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34d6:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1e, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r3, 0x1e])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034d8: mov    r8,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34d8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034da: bpl.w  0x36f8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34da:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84f00:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36f8:4], unique[84f00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13512,
		block_size=22,
		insn_addrs="[13512, 13516, 13518, 13520, 13522, 13524, 13526, 13528, 13530]"
	];
	13512 -> { 14072, 13534 };


	13534 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000034de</b></td></tr>
			<tr><td align="left" balign="left">
			0x000034de: movs   r4,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34de:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13534,
		block_size=2,
		insn_addrs="[13534]"
	];
	13534 -> { 13536 };


	13536 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000034e0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000034e0: ldrb   r6,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34e0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r6, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034e2: cmp    r6,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34e2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034e4: beq.w  0x36fc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34e4:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84a00:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36fc:4], unique[84a00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13536,
		block_size=8,
		insn_addrs="[13536, 13538, 13540]"
	];
	13536 -> { 14076, 13544 };


	13544 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000034e8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000034e8: cmp    r6,#0x25
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34e8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x25, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x25])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x25])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034ea: beq    0x3504
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34ea:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3504:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13544,
		block_size=4,
		insn_addrs="[13544, 13546]"
	];
	13544 -> { 13572, 13548 };


	13548 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000034ec</b></td></tr>
			<tr><td align="left" balign="left">
			0x000034ec: adds   r3,r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34ec:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034ee: str    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34ee:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13548,
		block_size=4,
		insn_addrs="[13548, 13550]"
	];
	13548 -> { 13552 };


	13552 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000034f0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000034f0: adds   r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34f0:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13552,
		block_size=2,
		insn_addrs="[13552]"
	];
	13552 -> { 13554 };


	13554 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000034f2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000034f2: ldr    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34f2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034f4: mov    r1,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34f4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034f6: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34f6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034f8: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34f8:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x34fa, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13554,
		block_size=8,
		insn_addrs="[13554, 13556, 13558, 13560]"
	];
	13554 -> { 13562 };


	13562 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000034fa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000034fa: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34fa:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000034fc: blt.w  0x36ec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[34fc:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85600:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36ec:4], unique[85600:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13562,
		block_size=6,
		insn_addrs="[13562, 13564]"
	];
	13562 -> { 14060, 13568 };


	13568 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003500</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003500: ldr    r1,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3500:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003502: b      0x34e0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3502:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[34e0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13568,
		block_size=4,
		insn_addrs="[13568, 13570]"
	];
	13568 -> { 13536 };


	13572 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003504</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003504: ldrb   r6,[r1,#0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3504:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r1, 0x1])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r6, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003506: adds   r3,r1,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3506:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r1, 0x2])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r1, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r1, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003508: cmp    r6,#0x25
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3508:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x25, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x25])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x25])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000350a: str    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[350a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000350c: beq    0x34f0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[350c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[34f0:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13572,
		block_size=10,
		insn_addrs="[13572, 13574, 13576, 13578, 13580]"
	];
	13572 -> { 13552, 13582 };


	13582 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000350e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000350e: movs   r7,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[350e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003510: mov    r9,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3510:2]])<br/>
			&nbsp;&nbsp;COPY(out=r9, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003512: mov    r11,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3512:2]])<br/>
			&nbsp;&nbsp;COPY(out=r11, in=[r7])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13582,
		block_size=6,
		insn_addrs="[13582, 13584, 13586]"
	];
	13582 -> { 13588 };


	13588 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003514</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003514: cmp.w  r11,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3514:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r11])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003518: bhi    0x358c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3518:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[358c:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13588,
		block_size=6,
		insn_addrs="[13588, 13592]"
	];
	13588 -> { 13708, 13594 };


	13594 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000351a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000351a: sub.w  r3,r6,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[351a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000351e: cmp    r3,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[351e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x10, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x10])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003520: bhi    0x3538
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3520:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3538:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13594,
		block_size=8,
		insn_addrs="[13594, 13598, 13600]"
	];
	13594 -> { 13624, 13602 };


	13602 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003522</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003522: tbb    [pc,r3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3522:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[c9980:4], in=[r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c9980:4], in=[0x3526, unique[c9980:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[c9b00:1], in=[0x600000f0c300, unique[c9980:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[c9980:4], in=[unique[c9b00:1]])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[c9f00:4], in=[unique[c9980:4], 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=pc, in=[0x3526, unique[c9f00:4]])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13602,
		block_size=4,
		insn_addrs="[13602]"
	];
	13602 -> { 13690, 13624, 13702, 13672, 13686, 13696, 13668 };


	13624 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003538</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003538: sub.w  r3,r6,#0x30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3538:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x30])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000353c: cmp    r3,#0x9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[353c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x9, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x9])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x9])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000353e: bls    0x35a8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[353e:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84280:1], in=[CY])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84380:1], in=[unique[84280:1], ZR])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[35a8:4], unique[84380:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13624,
		block_size=8,
		insn_addrs="[13624, 13628, 13630]"
	];
	13624 -> { 13736, 13632 };


	13632 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003540</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003540: cmp    r6,#0x2a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3540:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x2a, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x2a])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x2a])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003542: bne    0x35b4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3542:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[35b4:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13632,
		block_size=4,
		insn_addrs="[13632, 13634]"
	];
	13632 -> { 13748, 13636 };


	13636 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003544</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003544: tst    r11,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3544:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x40])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003548: ldr.w  r3,[r5],#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3548:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r5])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91b80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000354c: bne.w  0x3654
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[354c:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84b00:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3654:4], unique[84b00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13636,
		block_size=12,
		insn_addrs="[13636, 13640, 13644]"
	];
	13636 -> { 13908, 13648 };


	13648 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003550</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003550: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3550:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003552: ittee  ge
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3552:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86580:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003554: orr    r11,r11,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3554:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[d80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[d80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3558:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003558: mov    r9,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3558:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[d80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[d80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[355a:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r9, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000355a: rsb.w  r9,r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[355a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[e80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[e80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[355e:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[unique[87700:4], r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=r9, in=[unique[87700:4], r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r9, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r9, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000355e: orr    r11,r11,#0x28
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[355e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x28])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[e80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[e80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3562:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003562: b      0x3568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3562:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3568:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13648,
		block_size=20,
		insn_addrs="[13648, 13650, 13652, 13656, 13658, 13662, 13666]"
	];
	13648 -> { 13672 };


	13668 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003564</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003564: orr    r11,r11,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3564:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13668,
		block_size=4,
		insn_addrs="[13668]"
	];
	13668 -> { 13672 };


	13672 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003568</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003568: ldr    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3568:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000356a: ldrb.w r6,[r3],#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[356a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;LOAD(out=unique[99000:1], in=[0x600000f0c300, unique[91b80:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r6, in=[unique[99000:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000356e: str    r3,[sp,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[356e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003570: cmp    r6,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3570:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003572: bne    0x3514
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3572:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3514:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13672,
		block_size=12,
		insn_addrs="[13672, 13674, 13678, 13680, 13682]"
	];
	13672 -> { 13588, 13684 };


	13684 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003574</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003574: b      0x35d8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3574:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[35d8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13684,
		block_size=2,
		insn_addrs="[13684]"
	];
	13684 -> { 13784 };


	13686 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003576</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003576: orr    r11,r11,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3576:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13686,
		block_size=4,
		insn_addrs="[13686]"
	];
	13686 -> { 13690 };


	13690 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000357a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000357a: orr    r11,r11,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[357a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x4])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000357e: b      0x3568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[357e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3568:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13690,
		block_size=6,
		insn_addrs="[13690, 13694]"
	];
	13690 -> { 13672 };


	13696 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003580</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003580: orr    r11,r11,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3580:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003584: b      0x3568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3584:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3568:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13696,
		block_size=6,
		insn_addrs="[13696, 13700]"
	];
	13696 -> { 13672 };


	13702 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003586</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003586: orr    r11,r11,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3586:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000358a: b      0x3568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[358a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3568:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13702,
		block_size=6,
		insn_addrs="[13702, 13706]"
	];
	13702 -> { 13672 };


	13708 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000358c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000358c: cmp.w  r11,#0x7f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[358c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r11])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003590: bhi    0x35c6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3590:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[35c6:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13708,
		block_size=6,
		insn_addrs="[13708, 13712]"
	];
	13708 -> { 13766, 13714 };


	13714 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003592</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003592: sub.w  r3,r6,#0x30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3592:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x30])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003596: cmp    r3,#0x9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3596:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x9, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x9])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x9])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003598: bhi    0x3540
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3598:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3540:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13714,
		block_size=8,
		insn_addrs="[13714, 13718, 13720]"
	];
	13714 -> { 13632, 13722 };


	13722 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000359a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000359a: tst    r11,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[359a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x40])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000359e: beq    0x35a8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[359e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[35a8:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13722,
		block_size=6,
		insn_addrs="[13722, 13726]"
	];
	13722 -> { 13736, 13728 };


	13728 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000035a0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000035a0: movs   r1,#0xa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35a0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0xa])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035a2: mla    r7,r1,r7,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35a2:4]])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[a1500:4], in=[r1, r7])<br/>
			&nbsp;&nbsp;INT_ADD(out=r7, in=[unique[a1500:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035a6: b      0x3568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35a6:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3568:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13728,
		block_size=8,
		insn_addrs="[13728, 13730, 13734]"
	];
	13728 -> { 13672 };


	13736 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000035a8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000035a8: movs   r1,#0xa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35a8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0xa])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035aa: mla    r9,r1,r9,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35aa:4]])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[a1500:4], in=[r1, r9])<br/>
			&nbsp;&nbsp;INT_ADD(out=r9, in=[unique[a1500:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035ae: orr    r11,r11,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35ae:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035b2: b      0x3568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35b2:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3568:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13736,
		block_size=12,
		insn_addrs="[13736, 13738, 13742, 13746]"
	];
	13736 -> { 13672 };


	13748 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000035b4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000035b4: cmp    r6,#0x2e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35b4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x2e, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x2e])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x2e])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035b6: bne    0x35c6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35b6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[35c6:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13748,
		block_size=4,
		insn_addrs="[13748, 13750]"
	];
	13748 -> { 13766, 13752 };


	13752 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000035b8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000035b8: tst    r11,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35b8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x40])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035bc: bne.w  0x36fc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35bc:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84b00:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36fc:4], unique[84b00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13752,
		block_size=8,
		insn_addrs="[13752, 13756]"
	];
	13752 -> { 14076, 13760 };


	13760 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000035c0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000035c0: orr    r11,r11,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35c0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x40])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035c4: b      0x3568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35c4:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3568:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13760,
		block_size=6,
		insn_addrs="[13760, 13764]"
	];
	13760 -> { 13672 };


	13766 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000035c6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000035c6: cmp    r6,#0x6c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35c6:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x6c, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x6c])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x6c])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035c8: beq    0x362e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35c8:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[362e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13766,
		block_size=4,
		insn_addrs="[13766, 13768]"
	];
	13766 -> { 13870, 13770 };


	13770 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000035ca</b></td></tr>
			<tr><td align="left" balign="left">
			0x000035ca: bhi    0x3624
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35ca:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3624:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13770,
		block_size=2,
		insn_addrs="[13770]"
	];
	13770 -> { 13860, 13772 };


	13772 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000035cc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000035cc: cmp    r6,#0x68
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35cc:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x68, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x68])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x68])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035ce: beq    0x363e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35ce:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[363e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13772,
		block_size=4,
		insn_addrs="[13772, 13774]"
	];
	13772 -> { 13886, 13776 };


	13776 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000035d0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000035d0: cmp    r6,#0x6a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35d0:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x6a, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x6a])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x6a])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035d2: beq    0x364e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35d2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[364e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13776,
		block_size=4,
		insn_addrs="[13776, 13778]"
	];
	13776 -> { 13902, 13780 };


	13780 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000035d4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000035d4: cmp    r6,#0x4c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35d4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x4c, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x4c])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x4c])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035d6: beq    0x364e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35d6:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[364e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13780,
		block_size=4,
		insn_addrs="[13780, 13782]"
	];
	13780 -> { 13902, 13784 };


	13784 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000035d8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000035d8: cmp    r7,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35d8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035da: orr    r3,r6,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35da:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x20])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035de: it     lt
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35de:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86680:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035e0: bic    r2,r11,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35e0:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[e80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[e80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[35e4:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x40])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r11, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035e4: sub.w  r1,r3,#0x65
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35e4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x65])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r1, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035e8: itt    lt
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35e8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86680:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035ea: uxth.w r11, r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35ea:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[e80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[e80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[35ee:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8d00:2], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r11, in=[unique[d8d00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035ee: movs   r7,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35ee:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[e80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[e80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[35f0:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035f0: cmp    r1,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35f0:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x2, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035f2: bls    0x35f8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35f2:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84280:1], in=[CY])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84380:1], in=[unique[84280:1], ZR])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[35f8:4], unique[84380:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13784,
		block_size=28,
		insn_addrs="[13784, 13786, 13790, 13792, 13796, 13800, 13802, 13806, 13808, 13810]"
	];
	13784 -> { 13816, 13812 };


	13812 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000035f4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000035f4: cmp    r3,#0x61
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35f4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x61, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x61])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x61])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035f6: bne    0x3658
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35f6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3658:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13812,
		block_size=4,
		insn_addrs="[13812, 13814]"
	];
	13812 -> { 13912, 13816 };


	13816 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000035f8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000035f8: adds   r5,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35f8:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, 0x7])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, 0x7])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, 0x7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035fa: bic    r5,r5,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35fa:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r5, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000035fe: ldr.w  r10,[0x38ac]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[35fe:4]])<br/>
			&nbsp;&nbsp;COPY(out=r10, in=[ram[38ac:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003602: adds   r5,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3602:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, 0x8])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, 0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003604: movs   r7,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3604:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[0x7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13816,
		block_size=14,
		insn_addrs="[13816, 13818, 13822, 13826, 13828]"
	];
	13816 -> { 13830 };


	13830 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003606</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003606: tst    r11,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3606:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x8])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000360a: beq    0x36da
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[360a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36da:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13830,
		block_size=6,
		insn_addrs="[13830, 13834]"
	];
	13830 -> { 14042, 13836 };


	13836 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000360c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000360c: add.w  r11,r10,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[360c:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[r7])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r10, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r10, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r11, in=[r10, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003610: mov    r6,r10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3610:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r10])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13836,
		block_size=6,
		insn_addrs="[13836, 13840]"
	];
	13836 -> { 13842 };


	13842 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003612</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003612: cmp    r6,r11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3612:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r11, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, r11])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r6, r11])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003614: bne    0x36de
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3614:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36de:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13842,
		block_size=4,
		insn_addrs="[13842, 13844]"
	];
	13842 -> { 14046, 13846 };


	13846 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003616</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003616: sub.w  r10,r4,r10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3616:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=unique[c5100:4], in=[r10])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[c5100:4], r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r10, in=[r4, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r10, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r10, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000361a: add.w  r2,r6,r10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[361a:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[r10])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r6, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r6, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r6, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000361e: sub.w  r9,r9,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[361e:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=unique[c5100:4], in=[r7])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[c5100:4], r9])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r9, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r9, in=[r9, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r9, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r9, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003622: b      0x3904
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3622:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3904:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13846,
		block_size=14,
		insn_addrs="[13846, 13850, 13854, 13858]"
	];
	13846 -> { 14596 };


	13860 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003624</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003624: cmp    r6,#0x74
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3624:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x74, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x74])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x74])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003626: beq    0x3568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3626:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3568:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13860,
		block_size=4,
		insn_addrs="[13860, 13862]"
	];
	13860 -> { 13672, 13864 };


	13864 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003628</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003628: cmp    r6,#0x7a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3628:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x7a, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x7a])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x7a])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000362a: beq    0x3568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[362a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3568:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13864,
		block_size=4,
		insn_addrs="[13864, 13866]"
	];
	13864 -> { 13672, 13868 };


	13868 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000362c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000362c: b      0x35d8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[362c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[35d8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13868,
		block_size=2,
		insn_addrs="[13868]"
	];
	13868 -> { 13784 };


	13870 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000362e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000362e: tst    r11,#0x80
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[362e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x80])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003632: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3632:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003634: orr    r11,r11,#0x200
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3634:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x200])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3638:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003638: orr    r11,r11,#0x80
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3638:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x80])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000363c: b      0x3568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[363c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3568:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13870,
		block_size=16,
		insn_addrs="[13870, 13874, 13876, 13880, 13884]"
	];
	13870 -> { 13672 };


	13886 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000363e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000363e: tst    r11,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[363e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r11, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003642: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3642:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003644: orr    r11,r11,#0x200
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3644:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x200])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3648:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003648: orr    r11,r11,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3648:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000364c: b      0x3568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[364c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3568:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13886,
		block_size=16,
		insn_addrs="[13886, 13890, 13892, 13896, 13900]"
	];
	13886 -> { 13672 };


	13902 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000364e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000364e: orr    r11,r11,#0x280
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[364e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x280])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003652: b      0x3568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3652:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3568:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13902,
		block_size=6,
		insn_addrs="[13902, 13906]"
	];
	13902 -> { 13672 };


	13908 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003654</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003654: mov    r7,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3654:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003656: b      0x3568
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3656:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3568:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13908,
		block_size=4,
		insn_addrs="[13908, 13910]"
	];
	13908 -> { 13672 };


	13912 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003658</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003658: sub.w  r1,r6,#0x63
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3658:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x63])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r1, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000365c: cmp    r1,#0x12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[365c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x12, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x12])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x12])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000365e: bhi.w  0x3842
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[365e:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[85180:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[85280:1], in=[CY, unique[85180:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3842:4], unique[85280:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13912,
		block_size=10,
		insn_addrs="[13912, 13916, 13918]"
	];
	13912 -> { 14402, 13922 };


	13922 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003662</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003662: tbh    [pc,r1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3662:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[c9c00:4], in=[r1])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[c9c80:4], in=[unique[c9c00:4], 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c9c00:4], in=[0x3666, unique[c9c80:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[c9e00:2], in=[0x600000f0c300, unique[c9c00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[c9c00:4], in=[unique[c9e00:2]])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[ca000:4], in=[unique[c9c00:4], 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=pc, in=[0x3666, unique[ca000:4]])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13922,
		block_size=4,
		insn_addrs="[13922]"
	];
	13922 -> { 13964, 14084, 14402, 14434, 14392, 13980, 14276 };


	13964 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000368c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000368c: ldr.w  r3,[r5],#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[368c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r5])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91b80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003690: strb.w r3,[sp,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3690:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x18])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003694: movs   r7,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3694:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003696: add.w  r10,sp,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3696:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x18])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r10, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r10, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r10, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000369a: b      0x3606
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[369a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3606:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13964,
		block_size=16,
		insn_addrs="[13964, 13968, 13972, 13974, 13978]"
	];
	13964 -> { 13830 };


	13980 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000369c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000369c: ldr.w  r10,[r5],#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[369c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r5])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r10, in=[0x600000f0c300, unique[91b80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036a0: ldr    r3,[0x38b0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36a0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[ram[38b0:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036a2: cmp.w  r10,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36a2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r10])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r10, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r10, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036a6: it     eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36a6:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036a8: mov    r10,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36a8:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36aa:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r10, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036aa: tst    r11,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36aa:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x40])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036ae: ite    ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36ae:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036b0: mov    r1,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36b0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36b2:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036b2: mov.w  r1,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36b2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36b6:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036b6: mov    r0,r10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36b6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r10])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036b8: bl     0x42de
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36b8:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x36bc, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[42de:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=13980,
		block_size=32,
		insn_addrs="[13980, 13984, 13986, 13990, 13992, 13994, 13998, 14000, 14002, 14006, 14008]"
	];
	13980 -> { 17118, 14012 };


	14012 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000036bc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000036bc: mov    r7,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036be: b      0x3606
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36be:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3606:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14012,
		block_size=4,
		insn_addrs="[14012, 14014]"
	];
	14012 -> { 13830 };


	14016 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000036c0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000036c0: ldr    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36c0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036c2: mov    r1,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36c2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036c4: movs   r0,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36c4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036c6: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36c6:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x36c8, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14016,
		block_size=8,
		insn_addrs="[14016, 14018, 14020, 14022]"
	];
	14016 -> { 14024 };


	14024 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000036c8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000036c8: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36c8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036ca: blt    0x36ec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36ca:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36ec:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14024,
		block_size=4,
		insn_addrs="[14024, 14026]"
	];
	14024 -> { 14060, 14028 };


	14028 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000036cc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000036cc: subs   r6,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36cc:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r6, in=[r6, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14028,
		block_size=2,
		insn_addrs="[14028]"
	];
	14028 -> { 14030 };


	14030 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000036ce</b></td></tr>
			<tr><td align="left" balign="left">
			0x000036ce: cmp    r7,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36ce:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r6, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r7, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036d0: bcc    0x36c0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36d0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83c80:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36c0:4], unique[83c80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14030,
		block_size=4,
		insn_addrs="[14030, 14032]"
	];
	14030 -> { 14016, 14034 };


	14034 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000036d2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000036d2: add    r4,r9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36d2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, r9])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036d4: subs   r4,r4,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36d4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r6, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=r4, in=[r4, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036d6: mov    r9,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36d6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r9, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036d8: b      0x360c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36d8:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[360c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14034,
		block_size=8,
		insn_addrs="[14034, 14036, 14038, 14040]"
	];
	14034 -> { 13836 };


	14042 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000036da</b></td></tr>
			<tr><td align="left" balign="left">
			0x000036da: mov    r6,r9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36da:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r9])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036dc: b      0x36ce
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36dc:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[36ce:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14042,
		block_size=4,
		insn_addrs="[14042, 14044]"
	];
	14042 -> { 14030 };


	14046 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000036de</b></td></tr>
			<tr><td align="left" balign="left">
			0x000036de: ldrb.w r0,[r6],#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36de:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r6])<br/>
			&nbsp;&nbsp;INT_ADD(out=r6, in=[r6, 0x1])<br/>
			&nbsp;&nbsp;LOAD(out=unique[99000:1], in=[0x600000f0c300, unique[91b80:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[99000:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036e2: ldr    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36e2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036e4: mov    r1,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36e4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036e6: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36e6:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x36e8, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14046,
		block_size=10,
		insn_addrs="[14046, 14050, 14052, 14054]"
	];
	14046 -> { 14056 };


	14056 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000036e8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000036e8: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36e8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036ea: bge    0x3612
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36ea:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3612:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14056,
		block_size=4,
		insn_addrs="[14056, 14058]"
	];
	14056 -> { 13842, 14060 };


	14060 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000036ec</b></td></tr>
			<tr><td align="left" balign="left">
			0x000036ec: ldrb.w r3,[r8,#0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36ec:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r8, 0x2])<br/>
			&nbsp;&nbsp;LOAD(out=unique[98e80:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[98e80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036f0: orr    r3,r3,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36f0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x4])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036f4: strb.w r3,[r8,#0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36f4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r8, 0x2])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14060,
		block_size=12,
		insn_addrs="[14060, 14064, 14068]"
	];
	14060 -> { 14072 };


	14072 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000036f8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000036f8: mov.w  r4,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36f8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14072,
		block_size=4,
		insn_addrs="[14072]"
	];
	14072 -> { 14076 };


	14076 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000036fc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000036fc: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36fc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000036fe: add    sp,#0x34
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[36fe:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x34])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003700: pop.w  {r4,r5,r6,r7,r8,r9,r10,r11,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3700:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r9, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r10, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r11, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14076,
		block_size=8,
		insn_addrs="[14076, 14078, 14080]"
	];



	14084 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003704</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003704: tst    r11,#0x80
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3704:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x80])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003708: beq    0x3774
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3708:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3774:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14084,
		block_size=6,
		insn_addrs="[14084, 14088]"
	];
	14084 -> { 14196, 14090 };


	14090 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000370a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000370a: tst    r11,#0x200
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[370a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x200])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r11, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000370e: beq    0x376a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[370e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[376a:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14090,
		block_size=6,
		insn_addrs="[14090, 14094]"
	];
	14090 -> { 14186, 14096 };


	14096 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003710</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003710: adds   r5,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3710:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, 0x7])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, 0x7])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, 0x7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003712: bic    r5,r5,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3712:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r5, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003716: mov    r10,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3716:2]])<br/>
			&nbsp;&nbsp;COPY(out=r10, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003718: ldr    r1,[r5,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3718:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000371a: ldr.w  r0,[r10],#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[371a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r10])<br/>
			&nbsp;&nbsp;INT_ADD(out=r10, in=[r10, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91b80:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14096,
		block_size=14,
		insn_addrs="[14096, 14098, 14102, 14104, 14106]"
	];
	14096 -> { 14110 };


	14110 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000371e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000371e: bic    r5,r11,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[371e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r11, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003722: cmp    r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3722:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003724: uxth   r5, r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3724:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8800:2], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[d8800:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003726: bge    0x3798
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3726:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3798:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14110,
		block_size=10,
		insn_addrs="[14110, 14114, 14116, 14118]"
	];
	14110 -> { 14232, 14120 };


	14120 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003728</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003728: rsbs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3728:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpCY, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000372a: sbc.w  r1,r1,r1, lsl #0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[372a:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r1, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[81780:4], in=[r1, unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81800:1], in=[unique[88200:4], r1])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81880:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_LESS(out=unique[81900:1], in=[unique[81780:4], unique[81880:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81800:1], unique[81900:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81a00:1], in=[r1, unique[88200:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[81a80:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81b00:4], in=[unique[81a80:1]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=unique[81b80:1], in=[unique[81780:4], unique[81b00:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81a00:1], unique[81b80:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2680:4], in=[r1, unique[88200:4]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[b2700:1], in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[b2780:4], in=[unique[b2700:1]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r1, in=[unique[b2680:4], unique[b2780:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000372e: orr    r5,r5,#0x400
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[372e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x400])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_OR(out=r5, in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14120,
		block_size=10,
		insn_addrs="[14120, 14122, 14126]"
	];
	14120 -> { 14130 };


	14130 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003732</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003732: add.w  r11,sp,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3732:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x18])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r11, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003736: movs   r3,#0xa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3736:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0xa])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14130,
		block_size=6,
		insn_addrs="[14130, 14134]"
	];
	14130 -> { 14136 };


	14136 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003738</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003738: mov    r2,r11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3738:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r11])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000373a: bl     0x42f6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[373a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x373e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[42f6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14136,
		block_size=6,
		insn_addrs="[14136, 14138]"
	];
	14136 -> { 17142, 14142 };


	14142 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000373e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000373e: sub.w  r3,r0,r11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[373e:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=unique[c5100:4], in=[r11])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[c5100:4], r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r0, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003742: str    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3742:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003744: lsls   r3,r5,#0x19
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3744:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x19, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r5, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x19, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x19, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r5, 0x19])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003746: bpl    0x380e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3746:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[380e:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14142,
		block_size=10,
		insn_addrs="[14142, 14146, 14148, 14150]"
	];
	14142 -> { 14350, 14152 };


	14152 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003748</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003748: ldr    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3748:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000374a: bic    r1,r5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[374a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r5, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000374e: cmp    r7,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[374e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r7, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003750: uxth   r1, r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3750:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8800:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[d8800:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003752: ble.w  0x3898
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3752:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85880:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[85980:1], in=[ZR, unique[85880:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3898:4], unique[85980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14152,
		block_size=14,
		insn_addrs="[14152, 14154, 14158, 14160, 14162]"
	];
	14152 -> { 14488, 14166 };


	14166 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003756</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003756: cmp    r6,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3756:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003758: beq.w  0x388e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3758:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84a00:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[388e:4], unique[84a00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14166,
		block_size=6,
		insn_addrs="[14166, 14168]"
	];
	14166 -> { 14478, 14172 };


	14172 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000375c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000375c: ands   r2,r5,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[375c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003760: bne.w  0x389c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3760:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84b00:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[389c:4], unique[84b00:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14172,
		block_size=8,
		insn_addrs="[14172, 14176]"
	];
	14172 -> { 14492, 14180 };


	14180 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003764</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003764: mov    r11,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3764:2]])<br/>
			&nbsp;&nbsp;COPY(out=r11, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003766: mov    r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3766:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003768: b      0x37b2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3768:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[37b2:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14180,
		block_size=6,
		insn_addrs="[14180, 14182, 14184]"
	];
	14180 -> { 14258 };


	14186 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000376a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000376a: mov    r10,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[376a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r10, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000376c: ldr.w  r0,[r10],#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[376c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r10])<br/>
			&nbsp;&nbsp;INT_ADD(out=r10, in=[r10, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91b80:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14186,
		block_size=6,
		insn_addrs="[14186, 14188]"
	];
	14186 -> { 14192 };


	14192 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003770</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003770: asrs   r1,r0,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3770:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[94280:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=unique[94300:4], in=[r0, unique[94280:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[94400:4], in=[unique[94300:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[94480:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[94500:1], in=[unique[94480:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[94580:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[94600:1], in=[unique[94400:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[94680:1], in=[unique[94580:1], unique[94600:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[94500:1], unique[94680:1]])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=r1, in=[r0, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003772: b      0x371e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3772:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[371e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14192,
		block_size=4,
		insn_addrs="[14192, 14194]"
	];
	14192 -> { 14110 };


	14196 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003774</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003774: mov    r10,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3774:2]])<br/>
			&nbsp;&nbsp;COPY(out=r10, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003776: tst    r11,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3776:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r11, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000377a: ldr.w  r1,[r10],#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[377a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r10])<br/>
			&nbsp;&nbsp;INT_ADD(out=r10, in=[r10, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91b80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000377e: bne    0x3784
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[377e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3784:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14196,
		block_size=12,
		insn_addrs="[14196, 14198, 14202, 14206]"
	];
	14196 -> { 14212, 14208 };


	14208 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003780</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003780: mov    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3780:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003782: b      0x3770
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3782:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3770:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14208,
		block_size=4,
		insn_addrs="[14208, 14210]"
	];
	14208 -> { 14192 };


	14212 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003784</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003784: tst    r11,#0x200
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3784:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x200])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r11, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003788: itete  ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3788:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000378a: sxtb   r0, r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[378a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[378c:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c7700:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r0, in=[unique[c7700:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000378c: sxth   r0, r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[378c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[378e:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c8c00:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r0, in=[unique[c8c00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000378e: sbfx   r1,r1,#0x7,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[378e:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3792:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[b2880:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2980:4], in=[0x1f, unique[b2880:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r1, unique[b2980:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2980:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=r1, in=[r1, unique[b2980:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003792: sbfx   r1,r1,#0xf,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3792:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3796:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0xf])<br/>
			&nbsp;&nbsp;COPY(out=unique[87e00:4], in=[0x0])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[b2880:4], in=[unique[87d00:4], unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2980:4], in=[0x1f, unique[b2880:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r1, unique[b2980:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[b2980:4], in=[0x1f, unique[87e00:4]])<br/>
			&nbsp;&nbsp;INT_SRIGHT(out=r1, in=[r1, unique[b2980:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003796: b      0x371e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3796:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[371e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14212,
		block_size=20,
		insn_addrs="[14212, 14216, 14218, 14220, 14222, 14226, 14230]"
	];
	14212 -> { 14110 };


	14232 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003798</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003798: orrs.w r3,r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3798:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r0, r1])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000379c: bne    0x3732
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[379c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3732:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14232,
		block_size=6,
		insn_addrs="[14232, 14236]"
	];
	14232 -> { 14130, 14238 };


	14238 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000379e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000379e: tst    r11,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[379e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x40])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037a2: beq    0x3732
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37a2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3732:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14238,
		block_size=6,
		insn_addrs="[14238, 14242]"
	];
	14238 -> { 14130, 14244 };


	14244 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000037a4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000037a4: cmp    r7,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37a4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037a6: bne    0x3732
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37a6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3732:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14244,
		block_size=4,
		insn_addrs="[14244, 14246]"
	];
	14244 -> { 14130, 14248 };


	14248 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000037a8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000037a8: bic    r2,r11,#0x11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37a8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x11])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r11, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037ac: uxth   r5, r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37ac:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8800:2], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[d8800:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037ae: mov    r11,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37ae:2]])<br/>
			&nbsp;&nbsp;COPY(out=r11, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037b0: str    r7,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37b0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r7])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14248,
		block_size=10,
		insn_addrs="[14248, 14252, 14254, 14256]"
	];
	14248 -> { 14258 };


	14258 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000037b2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000037b2: movw   r1,#0x406
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37b2:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[0x406])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037b6: ands.w r2,r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37b6:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r5, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037ba: itt    ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37ba:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037bc: add.w  r11,r11,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37bc:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[37c0:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r11, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037c0: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37c0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[37c2:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037c2: b      0x381e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37c2:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[381e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14258,
		block_size=18,
		insn_addrs="[14258, 14262, 14266, 14268, 14272, 14274]"
	];
	14258 -> { 14366 };


	14276 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000037c4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000037c4: bic    r2,r11,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37c4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r11, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037c8: uxth.w r11, r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37c8:4]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8d00:2], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r11, in=[unique[d8d00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037cc: movs   r3,#0xa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37cc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0xa])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14276,
		block_size=10,
		insn_addrs="[14276, 14280, 14284]"
	];
	14276 -> { 14286 };


	14286 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000037ce</b></td></tr>
			<tr><td align="left" balign="left">
			0x000037ce: ands   r12,r11,#0x80
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37ce:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x80])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r12, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037d2: beq    0x3868
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37d2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3868:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14286,
		block_size=6,
		insn_addrs="[14286, 14290]"
	];
	14286 -> { 14440, 14292 };


	14292 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000037d4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000037d4: ands   r1,r11,#0x200
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37d4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x200])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r11, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037d8: ittte  ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37d8:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037da: adds   r5,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37da:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[37dc:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, 0x7])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, 0x7])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, 0x7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037dc: bic    r5,r5,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37dc:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[37e0:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r5, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037e0: mov    r10,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37e0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[37e2:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r10, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037e2: mov    r10,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37e2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[37e4:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r10, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037e4: itte   ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37e4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037e6: ldr.w  r0,[r10],#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37e6:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[37ea:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r10])<br/>
			&nbsp;&nbsp;INT_ADD(out=r10, in=[r10, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91b80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037ea: ldr    r1,[r5,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37ea:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[37ec:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037ec: ldr.w  r0,[r10],#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37ec:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[37f0:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r10])<br/>
			&nbsp;&nbsp;INT_ADD(out=r10, in=[r10, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91b80:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14292,
		block_size=28,
		insn_addrs="[14292, 14296, 14298, 14300, 14304, 14306, 14308, 14310, 14314, 14316]"
	];
	14292 -> { 14320 };


	14320 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000037f0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000037f0: orrs.w r5,r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37f0:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r5, in=[r0, r1])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037f4: bne    0x3882
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37f4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3882:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14320,
		block_size=6,
		insn_addrs="[14320, 14324]"
	];
	14320 -> { 14466, 14326 };


	14326 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000037f6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000037f6: bic    r5,r11,#0x16
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37f6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x16])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r11, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037fa: tst    r11,#0x40
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37fa:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x40])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000037fe: uxth   r5, r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[37fe:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8800:2], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[d8800:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003800: beq    0x3888
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3800:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3888:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14326,
		block_size=12,
		insn_addrs="[14326, 14330, 14334, 14336]"
	];
	14326 -> { 14472, 14338 };


	14338 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003802</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003802: cmp    r7,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3802:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003804: bne    0x3888
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3804:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3888:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14338,
		block_size=4,
		insn_addrs="[14338, 14340]"
	];
	14338 -> { 14472, 14342 };


	14342 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003806</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003806: bic    r2,r11,#0x17
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3806:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x17])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r11, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000380a: uxth   r5, r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[380a:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8800:2], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[d8800:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000380c: str    r7,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[380c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r7])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14342,
		block_size=8,
		insn_addrs="[14342, 14346, 14348]"
	];
	14342 -> { 14350 };


	14350 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000380e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000380e: ands   r2,r5,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[380e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003812: beq    0x38a6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3812:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[38a6:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14350,
		block_size=6,
		insn_addrs="[14350, 14354]"
	];
	14350 -> { 14502, 14356 };


	14356 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003814</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003814: ldr    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3814:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003816: cmp    r6,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3816:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003818: bne    0x38a0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3818:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[38a0:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14356,
		block_size=6,
		insn_addrs="[14356, 14358, 14360]"
	];
	14356 -> { 14496, 14362 };


	14362 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000381a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000381a: add.w  r11,r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[381a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r11, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14362,
		block_size=4,
		insn_addrs="[14362]"
	];
	14362 -> { 14366 };


	14366 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000381e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000381e: lsls   r1,r5,#0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[381e:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1c, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r5, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1c, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1c, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r5, 0x1c])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003820: bmi    0x38d8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3820:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83d80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[38d8:4], unique[83d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14366,
		block_size=4,
		insn_addrs="[14366, 14368]"
	];
	14366 -> { 14552, 14370 };


	14370 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003822</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003822: lsls   r3,r5,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3822:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r5, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r5, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003824: bpl    0x3834
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3824:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3834:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14370,
		block_size=4,
		insn_addrs="[14370, 14372]"
	];
	14370 -> { 14388, 14374 };


	14374 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003826</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003826: cmp    r9,r11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3826:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r11, r9])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r9, r11])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r9, r11])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003828: ble    0x390a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3828:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84800:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84900:1], in=[ZR, unique[84800:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[390a:4], unique[84900:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14374,
		block_size=4,
		insn_addrs="[14374, 14376]"
	];
	14374 -> { 14602, 14378 };


	14378 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000382a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000382a: ldr    r1,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[382a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000382c: sub.w  r3,r9,r11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[382c:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=unique[c5100:4], in=[r11])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[c5100:4], r9])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r9, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r9, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003830: adds   r7,r3,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3830:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, r1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r7, in=[r3, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003832: mov    r11,r9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3832:2]])<br/>
			&nbsp;&nbsp;COPY(out=r11, in=[r9])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14378,
		block_size=10,
		insn_addrs="[14378, 14380, 14384, 14386]"
	];
	14378 -> { 14388 };


	14388 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003834</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003834: mov    r3,r11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3834:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r11])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003836: b      0x38cc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3836:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[38cc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14388,
		block_size=4,
		insn_addrs="[14388, 14390]"
	];
	14388 -> { 14540 };


	14392 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003838</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003838: orr    r11,r11,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3838:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r11, in=[r11, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000383c: movs   r3,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[383c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000383e: movs   r6,#0x78
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[383e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x78])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003840: b      0x37ce
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3840:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[37ce:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14392,
		block_size=10,
		insn_addrs="[14392, 14396, 14398, 14400]"
	];
	14392 -> { 14286 };


	14402 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003842</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003842: cmp    r3,#0x78
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3842:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x78, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x78])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x78])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003844: bne    0x3850
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3844:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3850:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14402,
		block_size=4,
		insn_addrs="[14402, 14404]"
	];
	14402 -> { 14416, 14406 };


	14406 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003846</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003846: rsb.w  r3,r6,#0x78
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3846:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x78])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[unique[87700:4], r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[unique[87700:4], r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000384a: orr    r3,r3,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[384a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000384e: b      0x37ce
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[384e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[37ce:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14406,
		block_size=10,
		insn_addrs="[14406, 14410, 14414]"
	];
	14406 -> { 14286 };


	14416 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003850</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003850: ldr    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3850:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003852: mov    r1,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3852:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003854: movs   r0,#0x25
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3854:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x25])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003856: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3856:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3858, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14416,
		block_size=8,
		insn_addrs="[14416, 14418, 14420, 14422]"
	];
	14416 -> { 14424 };


	14424 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003858</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003858: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3858:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000385a: blt.w  0x36ec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[385a:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85600:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36ec:4], unique[85600:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14424,
		block_size=6,
		insn_addrs="[14424, 14426]"
	];
	14424 -> { 14060, 14430 };


	14430 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000385e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000385e: adds   r4,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[385e:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x2])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003860: b      0x34f2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3860:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[34f2:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14430,
		block_size=4,
		insn_addrs="[14430, 14432]"
	];
	14430 -> { 13554 };


	14434 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003862</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003862: movs   r3,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3862:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003864: movs   r6,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3864:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003866: b      0x37ce
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3866:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[37ce:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14434,
		block_size=6,
		insn_addrs="[14434, 14436, 14438]"
	];
	14434 -> { 14286 };


	14440 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003868</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003868: mov    r10,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3868:2]])<br/>
			&nbsp;&nbsp;COPY(out=r10, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000386a: ands   r1,r11,#0x100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[386a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x100])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r11, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000386e: ldr.w  r0,[r10],#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[386e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r10])<br/>
			&nbsp;&nbsp;INT_ADD(out=r10, in=[r10, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91b80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003872: beq    0x37f0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3872:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[37f0:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14440,
		block_size=12,
		insn_addrs="[14440, 14442, 14446, 14450]"
	];
	14440 -> { 14320, 14452 };


	14452 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003874</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003874: ands   r1,r11,#0x200
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3874:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x200])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=r1, in=[r11, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003878: itte   ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3878:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000387a: uxtb   r0, r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[387a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[387c:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000387c: mov    r1,r12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[387c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[387e:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r12])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000387e: uxth   r0, r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[387e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3880:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8800:2], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[d8800:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003880: b      0x37f0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3880:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[37f0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14452,
		block_size=14,
		insn_addrs="[14452, 14456, 14458, 14460, 14462, 14464]"
	];
	14452 -> { 14320 };


	14466 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003882</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003882: bic    r2,r11,#0x6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3882:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x6])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r11, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003886: uxth   r5, r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3886:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8800:2], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[d8800:2]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14466,
		block_size=6,
		insn_addrs="[14466, 14470]"
	];
	14466 -> { 14472 };


	14472 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003888</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003888: add.w  r11,sp,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3888:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x18])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r11, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000388c: b      0x3738
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[388c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3738:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14472,
		block_size=6,
		insn_addrs="[14472, 14476]"
	];
	14472 -> { 14136 };


	14478 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000388e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000388e: bic    r5,r5,#0x11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[388e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x11])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r5, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003892: uxth   r5, r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3892:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8800:2], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[d8800:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003894: mov    r11,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3894:2]])<br/>
			&nbsp;&nbsp;COPY(out=r11, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003896: b      0x37b2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3896:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[37b2:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14478,
		block_size=10,
		insn_addrs="[14478, 14482, 14484, 14486]"
	];
	14478 -> { 14258 };


	14488 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003898</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003898: mov    r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3898:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000389a: b      0x380e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[389a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[380e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14488,
		block_size=4,
		insn_addrs="[14488, 14490]"
	];
	14488 -> { 14350 };


	14492 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000389c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000389c: mov    r3,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[389c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000389e: mov    r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[389e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r1])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14492,
		block_size=4,
		insn_addrs="[14492, 14494]"
	];
	14492 -> { 14496 };


	14496 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038a0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038a0: add.w  r11,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38a0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r11, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r11, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r11, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038a4: b      0x381e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38a4:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[381e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14496,
		block_size=6,
		insn_addrs="[14496, 14500]"
	];
	14496 -> { 14366 };


	14502 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038a6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038a6: ldr.w  r11,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38a6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r11, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038aa: b      0x37b2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38aa:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[37b2:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14502,
		block_size=6,
		insn_addrs="[14502, 14506]"
	];
	14502 -> { 14258 };


	14516 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038b4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038b4: strd   r3,r2,[sp,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38b4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x10])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038b8: mov    r1,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38b8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038ba: ldr    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38ba:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038bc: movs   r0,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038be: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38be:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x38c0, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14516,
		block_size=12,
		insn_addrs="[14516, 14520, 14522, 14524, 14526]"
	];
	14516 -> { 14528 };


	14528 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038c0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038c0: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38c0:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038c2: blt.w  0x36ec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38c2:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85600:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36ec:4], unique[85600:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14528,
		block_size=6,
		insn_addrs="[14528, 14530]"
	];
	14528 -> { 14060, 14534 };


	14534 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038c6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038c6: ldr    r3,[sp,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38c6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038c8: ldr    r2,[sp,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38c8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x14])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038ca: adds   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38ca:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14534,
		block_size=6,
		insn_addrs="[14534, 14536, 14538]"
	];
	14534 -> { 14540 };


	14540 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038cc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038cc: cmp    r9,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38cc:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r9])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r9, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[97080:4], in=[r9, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[97080:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038ce: bgt    0x38b4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38ce:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84600:1], in=[ZR])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84680:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84780:1], in=[unique[84600:1], unique[84680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[38b4:4], unique[84780:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14540,
		block_size=4,
		insn_addrs="[14540, 14542]"
	];
	14540 -> { 14516, 14544 };


	14544 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038d0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038d0: sub.w  r1,r4,r11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38d0:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=unique[c5100:4], in=[r11])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[c5100:4], r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r1, in=[r4, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038d4: adds   r4,r1,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38d4:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r1, r3])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r1, r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r1, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038d6: mov    r11,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38d6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r11, in=[r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14544,
		block_size=8,
		insn_addrs="[14544, 14548, 14550]"
	];
	14544 -> { 14552 };


	14552 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038d8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038d8: cbz    r2,0x391e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38d8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[391e:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14552,
		block_size=2,
		insn_addrs="[14552]"
	];
	14552 -> { 14622, 14554 };


	14554 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038da</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038da: ldr    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38da:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038dc: mov    r1,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38dc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038de: movs   r0,#0x30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38de:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x30])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038e0: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38e0:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x38e2, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14554,
		block_size=8,
		insn_addrs="[14554, 14556, 14558, 14560]"
	];
	14554 -> { 14562 };


	14562 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038e2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038e2: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38e2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038e4: blt.w  0x36ec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38e4:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85600:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36ec:4], unique[85600:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14562,
		block_size=6,
		insn_addrs="[14562, 14564]"
	];
	14562 -> { 14060, 14568 };


	14568 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038e8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038e8: cbnz   r6,0x390e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38e8:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[390e:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14568,
		block_size=2,
		insn_addrs="[14568]"
	];
	14568 -> { 14606, 14570 };


	14570 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038ea</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038ea: adds   r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38ea:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14570,
		block_size=2,
		insn_addrs="[14570]"
	];
	14570 -> { 14572 };


	14572 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038ec</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038ec: add    r7,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38ec:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r7, in=[r7, r4])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14572,
		block_size=2,
		insn_addrs="[14572]"
	];
	14572 -> { 14574 };


	14574 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038ee</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038ee: ldr    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38ee:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038f0: subs   r1,r7,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38f0:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r4, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=r1, in=[r7, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038f2: cmp    r1,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38f2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r1, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038f4: bgt    0x3940
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38f4:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84600:1], in=[ZR])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84680:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84780:1], in=[unique[84600:1], unique[84680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3940:4], unique[84780:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14574,
		block_size=8,
		insn_addrs="[14574, 14576, 14578, 14580]"
	];
	14574 -> { 14656, 14582 };


	14582 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038f6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038f6: mov    r5,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38f6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r3])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14582,
		block_size=2,
		insn_addrs="[14582]"
	];
	14582 -> { 14584 };


	14584 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038f8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038f8: cbnz   r5,0x3952
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38f8:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3952:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14584,
		block_size=2,
		insn_addrs="[14584]"
	];
	14584 -> { 14674, 14586 };


	14586 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000038fa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000038fa: ldr    r2,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38fa:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000038fc: sub.w  r9,r9,r11
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[38fc:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=unique[c5100:4], in=[r11])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[c5100:4], r9])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r9, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r9, in=[r9, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r9, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r9, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003900: add    r2,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3900:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003902: mov    r5,r10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3902:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r10])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14586,
		block_size=10,
		insn_addrs="[14586, 14588, 14592, 14594]"
	];
	14586 -> { 14596 };


	14596 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003904</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003904: mov    r4,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3904:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003906: add    r9,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3906:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r9, in=[r9, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003908: b      0x3976
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3908:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3976:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14596,
		block_size=6,
		insn_addrs="[14596, 14598, 14600]"
	];
	14596 -> { 14710 };


	14602 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000390a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000390a: ldr    r7,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[390a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000390c: b      0x3834
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[390c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3834:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14602,
		block_size=4,
		insn_addrs="[14602, 14604]"
	];
	14602 -> { 14388 };


	14606 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000390e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000390e: adds   r4,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[390e:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x2])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003910: mov    r1,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3910:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003912: mov    r0,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3912:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r6])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14606,
		block_size=6,
		insn_addrs="[14606, 14608, 14610]"
	];
	14606 -> { 14612 };


	14612 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003914</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003914: ldr    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3914:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003916: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3916:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3918, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14612,
		block_size=4,
		insn_addrs="[14612, 14614]"
	];
	14612 -> { 14616 };


	14616 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003918</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003918: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3918:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000391a: bge    0x38ec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[391a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[38ec:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14616,
		block_size=4,
		insn_addrs="[14616, 14618]"
	];
	14616 -> { 14572, 14620 };


	14620 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000391c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000391c: b      0x36ec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[391c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[36ec:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14620,
		block_size=2,
		insn_addrs="[14620]"
	];
	14620 -> { 14060 };


	14622 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000391e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000391e: movw   r1,#0x406
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[391e:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[0x406])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003922: tst    r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3922:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca180:4], in=[r5, r1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca180:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca180:4], 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003924: beq    0x38ec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3924:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[38ec:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14622,
		block_size=8,
		insn_addrs="[14622, 14626, 14628]"
	];
	14622 -> { 14572, 14630 };


	14630 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003926</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003926: tst    r5,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3926:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000392a: ite    ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[392a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000392c: movs   r0,#0x2b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[392c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[392e:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x2b])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000392e: movs   r0,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[392e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3930:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003930: tst    r5,#0x400
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3930:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x400])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r5, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003934: add.w  r4,r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3934:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003938: mov    r1,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3938:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000393a: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[393a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000393c: movs   r0,#0x2d
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[393c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[393e:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x2d])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000393e: b      0x3914
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[393e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3914:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14630,
		block_size=26,
		insn_addrs="[14630, 14634, 14636, 14638, 14640, 14644, 14648, 14650, 14652, 14654]"
	];
	14630 -> { 14612 };


	14656 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003940</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003940: ldr    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3940:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003942: mov    r1,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3942:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003944: movs   r0,#0x30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3944:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x30])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003946: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3946:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3948, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14656,
		block_size=8,
		insn_addrs="[14656, 14658, 14660, 14662]"
	];
	14656 -> { 14664 };


	14664 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003948</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003948: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3948:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000394a: add.w  r4,r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[394a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000394e: bge    0x38ee
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[394e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[38ee:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14664,
		block_size=8,
		insn_addrs="[14664, 14666, 14670]"
	];
	14664 -> { 14574, 14672 };


	14672 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003950</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003950: b      0x36ec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3950:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[36ec:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14672,
		block_size=2,
		insn_addrs="[14672]"
	];
	14672 -> { 14060 };


	14674 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003952</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003952: add    r3,sp,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3952:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x18])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003954: subs   r5,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3954:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r5, in=[r5, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003956: mov    r1,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3956:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003958: ldrb   r0,[r3,r5]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3958:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r3, r5])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97a00:1], in=[0x600000f0c300, unique[92900:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[97a00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000395a: ldr    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[395a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000395c: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[395c:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x395e, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14674,
		block_size=12,
		insn_addrs="[14674, 14676, 14678, 14680, 14682, 14684]"
	];
	14674 -> { 14686 };


	14686 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000395e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000395e: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[395e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003960: bge    0x38f8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3960:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84480:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[38f8:4], unique[84480:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14686,
		block_size=4,
		insn_addrs="[14686, 14688]"
	];
	14686 -> { 14584, 14690 };


	14690 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003962</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003962: b      0x36ec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3962:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[36ec:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14690,
		block_size=2,
		insn_addrs="[14690]"
	];
	14690 -> { 14060 };


	14692 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003964</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003964: ldr    r3,[sp,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3964:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003966: mov    r1,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3966:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003968: movs   r0,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3968:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000396a: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[396a:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x396c, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14692,
		block_size=8,
		insn_addrs="[14692, 14694, 14696, 14698]"
	];
	14692 -> { 14700 };


	14700 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000396c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000396c: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[396c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000396e: add.w  r4,r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[396e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003972: blt.w  0x36ec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3972:4]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85600:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[36ec:4], unique[85600:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14700,
		block_size=10,
		insn_addrs="[14700, 14702, 14706]"
	];
	14700 -> { 14060, 14710 };


	14710 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003976</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003976: sub.w  r3,r9,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3976:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=unique[c5100:4], in=[r4])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[c5100:4], r9])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r9, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r9, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000397a: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[397a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000397c: bgt    0x3964
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[397c:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84600:1], in=[ZR])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[84680:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84780:1], in=[unique[84600:1], unique[84680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3964:4], unique[84780:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14710,
		block_size=8,
		insn_addrs="[14710, 14714, 14716]"
	];
	14710 -> { 14692, 14718 };


	14718 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000397e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000397e: b      0x3500
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[397e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3500:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14718,
		block_size=2,
		insn_addrs="[14718]"
	];
	14718 -> { 13568 };


	14722 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003982</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003982: add.w  r0,r0,r1, lsl #0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3982:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x3])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r1, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r1, 0x3])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003986: ldrh   r0,[r0,#0x2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3986:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r0, 0x2])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003988: lsrs   r0,r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3988:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r0, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r0, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000398a: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[398a:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14722,
		block_size=10,
		insn_addrs="[14722, 14726, 14728, 14730]"
	];



	14732 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000398c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000398c: push   {r3,r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[398c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000398e: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[398e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003990: bl     0x3982
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3990:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3994, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3982:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14732,
		block_size=8,
		insn_addrs="[14732, 14734, 14736]"
	];
	14732 -> { 14722, 14740 };


	14740 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003994</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003994: clz    r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3994:4]])<br/>
			&nbsp;&nbsp;LZCOUNT(out=r0, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003998: rsb.w  r0,r0,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3998:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[unique[87700:4], r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[unique[87700:4], r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000399c: add.w  r12,r3,r0, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[399c:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r0, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r0, 0x2])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r12, in=[r3, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039a0: lsls   r2,r1,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39a0:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x3, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r1, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x3, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x3, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r1, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039a2: ldr.w  r6,[r12,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39a2:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r12, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039a6: adds   r7,r2,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39a6:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, 0x4])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=r7, in=[r2, 0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039a8: mov    r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39a8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039aa: adds   r2,#0x6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39aa:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, 0x6])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, 0x6])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, 0x6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039ac: uxth   r5, r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39ac:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8800:2], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[d8800:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039ae: cbnz   r6,0x39c6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39ae:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[39c6:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14740,
		block_size=28,
		insn_addrs="[14740, 14744, 14748, 14752, 14754, 14758, 14760, 14762, 14764, 14766]"
	];
	14740 -> { 14790, 14768 };


	14768 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000039b0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000039b0: movs   r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39b0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039b2: lsl.w  r0,r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39b2:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9d100:4], in=[r0, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9d100:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r1, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9d100:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r1, unique[9d100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039b6: ldr    r1,[r3,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39b6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039b8: orrs   r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39b8:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039ba: str    r1,[r3,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39ba:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039bc: str.w  r4,[r12,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39bc:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r12, 0x10])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039c0: strh   r5,[r3,r7]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39c0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r3, r7])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3080:2], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92900:4], unique[c3080:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039c2: strh   r5,[r3,r2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39c2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r3, r2])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3080:2], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92900:4], unique[c3080:2]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14768,
		block_size=20,
		insn_addrs="[14768, 14770, 14774, 14776, 14778, 14780, 14784, 14786]"
	];
	14768 -> { 14788 };


	14788 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000039c4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000039c4: pop    {r3,r4,r5,r6,r7,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39c4:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14788,
		block_size=2,
		insn_addrs="[14788]"
	];



	14790 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000039c6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000039c6: lsls   r1,r6,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39c6:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x3, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r6, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x3, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x3, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r6, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039c8: adds   r1,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39c8:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r1, 0x4])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r1, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r1, 0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039ca: ldrh   r0,[r3,r1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39ca:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r3, r1])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97c00:2], in=[0x600000f0c300, unique[92900:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[97c00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039cc: strh   r0,[r3,r7]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39cc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r3, r7])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3080:2], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92900:4], unique[c3080:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039ce: add.w  r0,r3,r0, lsl #0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39ce:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x3])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r0, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r0, 0x3])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r3, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039d2: strh   r6,[r3,r2]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39d2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r3, r2])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3080:2], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92900:4], unique[c3080:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039d4: strh   r5,[r0,#0x6]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39d4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r0, 0x6])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039d6: strh   r5,[r3,r1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39d6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92900:4], in=[r3, r1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3080:2], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92900:4], unique[c3080:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000039d8: b      0x39c4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[39d8:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[39c4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14790,
		block_size=20,
		insn_addrs="[14790, 14792, 14794, 14796, 14798, 14802, 14804, 14806, 14808]"
	];
	14790 -> { 14788 };


	14936 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003a58</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003a58: push   {r0,r1,r2,r3}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a58:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a5a: push   {r0,r1,r2,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a5a:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a5c: add    r1,sp,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a5c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x10])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a5e: ldr.w  r0,[r1],#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a5e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r1, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91b80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a62: str    r1,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a62:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a64: bl     0x18c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a64:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3a68, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[18c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14936,
		block_size=16,
		insn_addrs="[14936, 14938, 14940, 14942, 14946, 14948]"
	];
	14936 -> { 396, 14952 };


	14952 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003a68</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003a68: add    sp,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a68:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0xc])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a6a: pop.w  lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a6a:4]])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, sp])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a6e: add    sp,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a6e:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x10])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a70: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a70:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14952,
		block_size=10,
		insn_addrs="[14952, 14954, 14958, 14960]"
	];



	14962 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003a72</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003a72: ldrh   r3,[r0,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a72:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r0, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a74: ands   r3,r3,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a74:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a78: bne    0x3a86
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a78:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3a86:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14962,
		block_size=8,
		insn_addrs="[14962, 14964, 14968]"
	];
	14962 -> { 14982, 14970 };


	14970 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003a7a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003a7a: ldr    r3,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a7a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a7c: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a7c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a7e: ite    eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a7e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a80: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a80:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3a82:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a82: movs   r0,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a82:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3a84:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a84: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a84:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14970,
		block_size=12,
		insn_addrs="[14970, 14972, 14974, 14976, 14978, 14980]"
	];



	14982 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003a86</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003a86: cmp    r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a86:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x2, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a88: bne    0x3a96
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a88:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3a96:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14982,
		block_size=4,
		insn_addrs="[14982, 14984]"
	];
	14982 -> { 14998, 14986 };


	14986 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003a8a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003a8a: ldrh   r0,[r0,#0x1a]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a8a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r0, 0x1a])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a8c: clz    r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a8c:4]])<br/>
			&nbsp;&nbsp;LZCOUNT(out=r0, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a90: lsrs   r0,r0,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a90:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r0, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r0, in=[r0, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a92: lsls   r0,r0,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a92:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x2, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r0, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r0, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a94: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a94:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14986,
		block_size=12,
		insn_addrs="[14986, 14988, 14992, 14994, 14996]"
	];



	14998 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003a96</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003a96: cmp    r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a96:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a98: bne    0x3aa6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a98:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3aa6:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=14998,
		block_size=4,
		insn_addrs="[14998, 15000]"
	];
	14998 -> { 15014, 15002 };


	15002 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003a9a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003a9a: ldr    r3,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a9a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a9c: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a9c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003a9e: ite    eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3a9e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003aa0: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3aa0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3aa2:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003aa2: movs   r0,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3aa2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3aa4:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003aa4: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3aa4:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15002,
		block_size=12,
		insn_addrs="[15002, 15004, 15006, 15008, 15010, 15012]"
	];



	15014 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003aa6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003aa6: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3aa6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003aa8: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3aa8:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15014,
		block_size=4,
		insn_addrs="[15014, 15016]"
	];



	15018 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003aaa</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003aaa: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3aaa:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003aac: mov    r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3aac:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003aae: cbz    r0,0x3ab2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3aae:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3ab2:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15018,
		block_size=6,
		insn_addrs="[15018, 15020, 15022]"
	];
	15018 -> { 15026, 15024 };


	15024 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ab0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ab0: cbnz   r1,0x3ab8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ab0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3ab8:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15024,
		block_size=2,
		insn_addrs="[15024]"
	];
	15024 -> { 15032, 15026 };


	15026 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ab2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ab2: mvn    r0,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ab2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x15])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15026,
		block_size=4,
		insn_addrs="[15026]"
	];
	15026 -> { 15030 };


	15030 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ab6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ab6: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ab6:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15030,
		block_size=2,
		insn_addrs="[15030]"
	];



	15032 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ab8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ab8: adds   r0,r1,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ab8:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r1, 0x4])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r1, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r1, 0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003aba: bl     0x3be4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3aba:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3abe, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3be4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15032,
		block_size=6,
		insn_addrs="[15032, 15034]"
	];
	15032 -> { 15332, 15038 };


	15038 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003abe</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003abe: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3abe:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ac0: bne    0x3ab6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ac0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3ab6:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15038,
		block_size=4,
		insn_addrs="[15038, 15040]"
	];
	15038 -> { 15030, 15042 };


	15042 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ac2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ac2: ldr    r3,[r4,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ac2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ac4: cmp    r3,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ac4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x3, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ac6: bls    0x3ab6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ac6:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84280:1], in=[CY])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84380:1], in=[unique[84280:1], ZR])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3ab6:4], unique[84380:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15042,
		block_size=6,
		insn_addrs="[15042, 15044, 15046]"
	];
	15042 -> { 15030, 15048 };


	15048 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ac8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ac8: b      0x3ab2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ac8:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3ab2:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15048,
		block_size=2,
		insn_addrs="[15048]"
	];
	15048 -> { 15026 };


	15050 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003aca</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003aca: push   {r4,r5,r6,r7,r8,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3aca:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r8])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[mult_addr, 0x4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ace: mov    r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ace:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ad0: mov    r7,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ad0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r7, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ad2: mov    r1,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ad2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ad4: adds   r0,r5,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ad4:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, 0x4])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, 0x4])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r5, 0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ad6: mov    r8,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ad6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r8, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ad8: mov    r6,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ad8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ada: bl     0x3c06
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ada:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3ade, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3c06:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15050,
		block_size=20,
		insn_addrs="[15050, 15054, 15056, 15058, 15060, 15062, 15064, 15066]"
	];
	15050 -> { 15366, 15070 };


	15070 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ade</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ade: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ade:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ae0: cbz    r0,0x3af2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ae0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3af2:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15070,
		block_size=4,
		insn_addrs="[15070, 15072]"
	];
	15070 -> { 15090, 15074 };


	15074 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ae2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ae2: mov    r3,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ae2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ae4: mov    r2,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ae4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ae6: mov    r1,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ae6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ae8: mov    r0,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ae8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003aea: mov    r12,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3aea:2]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003aec: pop.w  {r4,r5,r6,r7,r8,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3aec:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003af0: bx     r12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3af0:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r12, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r12, 0xfffffffe])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15074,
		block_size=16,
		insn_addrs="[15074, 15076, 15078, 15080, 15082, 15084, 15088]"
	];



	15090 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003af2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003af2: pop.w  {r4,r5,r6,r7,r8,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3af2:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r8, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15090,
		block_size=4,
		insn_addrs="[15090]"
	];



	15094 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003af6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003af6: push   {r4}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3af6:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003af8: mrs    r2,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3af8:4]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3afc:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r2, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003afc: movs   r4,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3afc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003afe: msr    basepri_max,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3afe:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b02:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b02:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r4])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b02:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b02: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b02:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b06: str    r1,[r0,#0x14]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b06:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x14])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b08: pop    {r4}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b08:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b0a: movs   r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b0a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b0c: b.w    0x1f0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b0c:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1f0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15094,
		block_size=26,
		insn_addrs="[15094, 15096, 15100, 15102, 15106, 15110, 15112, 15114, 15116]"
	];
	15094 -> { 496 };


	15120 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b10</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b10: push   {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b10:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b12: mov    r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b12:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b14: mov    r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b14:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b16: cbz    r0,0x3b30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b16:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b30:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15120,
		block_size=8,
		insn_addrs="[15120, 15122, 15124, 15126]"
	];
	15120 -> { 15152, 15128 };


	15128 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b18</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b18: cbz    r1,0x3b30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b18:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b30:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15128,
		block_size=2,
		insn_addrs="[15128]"
	];
	15128 -> { 15152, 15130 };


	15130 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b1a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b1a: ldr    r3,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b1a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b1c: cbz    r3,0x3b30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b1c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b30:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15130,
		block_size=4,
		insn_addrs="[15130, 15132]"
	];
	15130 -> { 15152, 15134 };


	15134 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b1e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b1e: ldr    r3,[r1,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b1e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b20: cbz    r3,0x3b30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b20:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b30:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15134,
		block_size=4,
		insn_addrs="[15134, 15136]"
	];
	15134 -> { 15152, 15138 };


	15138 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b22</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b22: movs   r2,#0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b22:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1c])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b24: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b24:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b26: bl     0x43c0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b26:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3b2a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[43c0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15138,
		block_size=8,
		insn_addrs="[15138, 15140, 15142]"
	];
	15138 -> { 17344, 15146 };


	15146 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b2a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b2a: str    r4,[r5,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b2a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x10])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b2c: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b2c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15146,
		block_size=4,
		insn_addrs="[15146, 15148]"
	];
	15146 -> { 15150 };


	15150 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b2e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b2e: pop    {r3,r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b2e:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15150,
		block_size=2,
		insn_addrs="[15150]"
	];



	15152 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b30</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b30: mvn    r0,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b30:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x15])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b34: b      0x3b2e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b34:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3b2e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15152,
		block_size=6,
		insn_addrs="[15152, 15156]"
	];
	15152 -> { 15150 };


	15158 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b36</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b36: push   {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b36:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b38: mov    r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b38:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b3a: mov    r6,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b3a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b3c: bl     0x3aaa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b3c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3b40, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3aaa:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15158,
		block_size=10,
		insn_addrs="[15158, 15160, 15162, 15164]"
	];
	15158 -> { 15018, 15168 };


	15168 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b40</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b40: subs   r4,r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b40:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r4, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b42: blt    0x3b6e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b42:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84580:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b6e:4], unique[84580:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15168,
		block_size=4,
		insn_addrs="[15168, 15170]"
	];
	15168 -> { 15214, 15172 };


	15172 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b44</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b44: mrs    r2,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b44:4]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b48:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r2, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b48: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b48:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b4a: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b4a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b4e:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b4e:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b4e:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b4e: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b4e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b52: ldrh   r3,[r5,#0x1a]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b52:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r5, 0x1a])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b54: ldrh   r4,[r5,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b54:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r5, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97b00:2], in=[0x600000f0c300, unique[92700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r4, in=[unique[97b00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b56: movw   r1,#0xffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b56:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[0xffff])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b5a: cmp    r3,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b5a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r1, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r3, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b5c: and    r4,r4,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b5c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r4, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b60: bne    0x3b72
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b60:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b72:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15172,
		block_size=30,
		insn_addrs="[15172, 15176, 15178, 15182, 15186, 15188, 15190, 15194, 15196, 15200]"
	];
	15172 -> { 15218, 15202 };


	15202 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b62</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b62: msr    basepri,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b62:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b66:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b66: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b66:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b6a: mvn    r4,#0xa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b6a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xa])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r4, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15202,
		block_size=12,
		insn_addrs="[15202, 15206, 15210]"
	];
	15202 -> { 15214 };


	15214 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b6e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b6e: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b6e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b70: pop    {r4,r5,r6,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b70:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15214,
		block_size=4,
		insn_addrs="[15214, 15216]"
	];



	15218 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b72</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b72: cmp    r4,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b72:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x2, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, 0x2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r4, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b74: bne    0x3b90
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b74:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b90:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15218,
		block_size=4,
		insn_addrs="[15218, 15220]"
	];
	15218 -> { 15248, 15222 };


	15222 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b76</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b76: adds   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b76:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b78: strh   r3,[r5,#0x1a]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b78:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92700:4], in=[r5, 0x1a])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2f80:2], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92700:4], unique[c2f80:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b7a: msr    basepri,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b7a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3b7e:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b7e: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b7e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b82: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b82:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b84: mov    r2,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b84:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b86: mov    r1,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b86:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b88: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b88:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b8a: bl     0x3aca
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b8a:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3b8e, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3aca:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15222,
		block_size=24,
		insn_addrs="[15222, 15224, 15226, 15230, 15234, 15236, 15238, 15240, 15242]"
	];
	15222 -> { 15050, 15246 };


	15246 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b8e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b8e: b      0x3b6e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b8e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3b6e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15246,
		block_size=2,
		insn_addrs="[15246]"
	];
	15246 -> { 15214 };


	15248 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b90</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b90: cmp    r4,#0x6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b90:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x6, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, 0x6])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r4, 0x6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003b92: bhi    0x3bbe
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b92:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3bbe:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15248,
		block_size=4,
		insn_addrs="[15248, 15250]"
	];
	15248 -> { 15294, 15252 };


	15252 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003b94</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003b94: tbb    [pc,r4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3b94:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[c9980:4], in=[r4])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c9980:4], in=[0x3b98, unique[c9980:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[c9b00:1], in=[0x600000f0c300, unique[c9980:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[c9980:4], in=[unique[c9b00:1]])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[c9f00:4], in=[unique[c9980:4], 0x2])<br/>
			&nbsp;&nbsp;INT_ADD(out=pc, in=[0x3b98, unique[c9f00:4]])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15252,
		block_size=4,
		insn_addrs="[15252]"
	];
	15252 -> { 15264, 15294, 15308 };


	15264 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ba0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ba0: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ba0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ba2: str    r3,[r6,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ba2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ba4: ldr    r3,[r5,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ba4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ba6: cbnz   r3,0x3bb8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ba6:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3bb8:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15264,
		block_size=8,
		insn_addrs="[15264, 15266, 15268, 15270]"
	];
	15264 -> { 15288, 15272 };


	15272 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ba8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ba8: strd   r6,r6,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ba8:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r6])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r6])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15272,
		block_size=4,
		insn_addrs="[15272]"
	];
	15272 -> { 15276 };


	15276 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003bac</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003bac: cbnz   r4,0x3bda
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bac:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3bda:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15276,
		block_size=2,
		insn_addrs="[15276]"
	];
	15276 -> { 15322, 15278 };


	15278 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003bae</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003bae: movs   r1,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bae:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bb0: mov    r0,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bb0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bb2: bl     0x1f0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bb2:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3bb6, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[1f0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15278,
		block_size=8,
		insn_addrs="[15278, 15280, 15282]"
	];
	15278 -> { 496, 15286 };


	15286 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003bb6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003bb6: b      0x3b6e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bb6:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3b6e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15286,
		block_size=2,
		insn_addrs="[15286]"
	];
	15286 -> { 15214 };


	15288 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003bb8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003bb8: str    r6,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bb8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bba: str    r6,[r5,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bba:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bbc: b      0x3bac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bbc:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3bac:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15288,
		block_size=6,
		insn_addrs="[15288, 15290, 15292]"
	];
	15288 -> { 15276 };


	15294 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003bbe</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003bbe: msr    basepri,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bbe:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3bc2:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bc2: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bc2:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bc6: mvn    r4,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bc6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x4])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r4, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bca: b      0x3b6e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bca:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3b6e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15294,
		block_size=14,
		insn_addrs="[15294, 15298, 15302, 15306]"
	];
	15294 -> { 15214 };


	15308 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003bcc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003bcc: msr    basepri,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bcc:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3bd0:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bd0: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bd0:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bd4: mvn    r4,#0x85
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bd4:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x85])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r4, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bd8: b      0x3b6e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bd8:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3b6e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15308,
		block_size=14,
		insn_addrs="[15308, 15312, 15316, 15320]"
	];
	15308 -> { 15214 };


	15322 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003bda</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003bda: msr    basepri,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bda:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3bde:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bde: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bde:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003be2: b      0x3b6e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3be2:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3b6e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15322,
		block_size=10,
		insn_addrs="[15322, 15326, 15330]"
	];
	15322 -> { 15214 };


	15332 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003be4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003be4: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3be4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003be6: cbz    r0,0x3c00
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3be6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3c00:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15332,
		block_size=4,
		insn_addrs="[15332, 15334]"
	];
	15332 -> { 15360, 15336 };


	15336 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003be8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003be8: ldr    r2,[r0,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3be8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bea: and    r2,r2,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bea:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x3])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bee: cmp    r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bee:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bf0: beq    0x3bfa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bf0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3bfa:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15336,
		block_size=10,
		insn_addrs="[15336, 15338, 15342, 15344]"
	];
	15336 -> { 15354, 15346 };


	15346 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003bf2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003bf2: cmp    r2,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bf2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x3, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bf4: bne    0x3c00
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bf4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3c00:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15346,
		block_size=4,
		insn_addrs="[15346, 15348]"
	];
	15346 -> { 15360, 15350 };


	15350 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003bf6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003bf6: ldr    r2,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bf6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bf8: cbz    r2,0x3c00
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bf8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3c00:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15350,
		block_size=4,
		insn_addrs="[15350, 15352]"
	];
	15350 -> { 15360, 15354 };


	15354 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003bfa</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003bfa: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bfa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bfc: str    r0,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bfc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003bfe: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3bfe:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15354,
		block_size=6,
		insn_addrs="[15354, 15356, 15358]"
	];



	15360 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c00</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c00: mvn    r0,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c00:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x15])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c04: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c04:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15360,
		block_size=6,
		insn_addrs="[15360, 15364]"
	];



	15366 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c06</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c06: ldr    r2,[r0,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c06:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c08: str    r1,[r0,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c08:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c0a: and    r2,r2,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c0a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x3])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c0e: cmp    r2,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c0e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x3, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c10: mov.w  r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c10:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c14: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c14:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c16: ite    eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c16:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c18: ldr    r0,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c18:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3c1a:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c1a: mov    r0,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c1a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3c1c:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c1c: str    r2,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c1c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c1e: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c1e:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15366,
		block_size=26,
		insn_addrs="[15366, 15368, 15370, 15374, 15376, 15380, 15382, 15384, 15386, 15388, 15390]"
	];



	15394 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c22</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c22: cmp    r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c22:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c24: bne    0x3c2a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c24:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3c2a:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15394,
		block_size=4,
		insn_addrs="[15394, 15396]"
	];
	15394 -> { 15402, 15398 };


	15398 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c26</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c26: mrs    r3,ipsr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c26:4]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9ea00:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9ea80:1], in=[unique[9ea00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[0x4, unique[9ea80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9eb80:4], in=[0x132])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9ec00:4], in=[unique[9eb80:4], 0x1f])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[9ec00:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15398,
		block_size=4,
		insn_addrs="[15398]"
	];
	15398 -> { 15402 };


	15402 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c2a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c2a: b.w    0x2860
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c2a:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2860:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15402,
		block_size=4,
		insn_addrs="[15402]"
	];
	15402 -> { 10336 };


	15406 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c2e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c2e: mov    r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c2e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c30: ldr    r0,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c30:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c32: b.w    0x3c22
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c32:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3c22:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15406,
		block_size=8,
		insn_addrs="[15406, 15408, 15410]"
	];
	15406 -> { 15394 };


	15414 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c36</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c36: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c36:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15414,
		block_size=2,
		insn_addrs="[15414]"
	];
	15414 -> { 15416 };


	15416 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c38</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c38: bl     0x418
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c38:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3c3c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[418:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15416,
		block_size=4,
		insn_addrs="[15416]"
	];
	15416 -> { 1048, 15420 };


	15420 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c3c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c3c: pop.w  {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c3c:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c40: b.w    0x460
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c40:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[460:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15420,
		block_size=8,
		insn_addrs="[15420, 15424]"
	];
	15420 -> { 1120 };


	15428 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c44</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c44: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c44:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c46: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c46:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c48: b.w    0x3c22
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c48:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3c22:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15428,
		block_size=8,
		insn_addrs="[15428, 15430, 15432]"
	];
	15428 -> { 15394 };


	15436 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c4c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c4c: cpsie  f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c4c:2]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x1e])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c4e: cpsie  i
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c4e:2]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x1d])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c50: msr    basepri,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c50:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3c54:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c54: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c54:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c58: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c58:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15436,
		block_size=14,
		insn_addrs="[15436, 15438, 15440, 15444, 15448]"
	];



	15450 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c5a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c5a: cpsid  i
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c5a:2]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x20])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c5c: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c5c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c5e: msr    basepri,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c5e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3c62:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c62: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c62:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c66: dsb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c66:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2d, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c6a: wfi    
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c6a:2]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x30])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c6c: cpsie  i
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c6c:2]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x1d])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c6e: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c6e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c72: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c72:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15450,
		block_size=26,
		insn_addrs="[15450, 15452, 15454, 15458, 15462, 15466, 15468, 15470, 15474]"
	];



	15476 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c74</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c74: cpsid  i
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c74:2]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x20])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c76: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c76:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c78: msr    basepri,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c78:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3c7c:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c7c: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c7c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c80: dsb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c80:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2d, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c84: wfe    
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c84:2]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x2f])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c86: msr    basepri,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c86:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3c8a:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c8a: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c8a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c8e: cpsie  i
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c8e:2]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x1d])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c90: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c90:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15476,
		block_size=30,
		insn_addrs="[15476, 15478, 15480, 15484, 15488, 15492, 15494, 15498, 15502, 15504]"
	];



	15506 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c92</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c92: cmp    r0,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c92:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x20, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x20])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c94: bls    0x3caa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c94:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84280:1], in=[CY])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84380:1], in=[unique[84280:1], ZR])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3caa:4], unique[84380:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15506,
		block_size=4,
		insn_addrs="[15506, 15508]"
	];
	15506 -> { 15530, 15510 };


	15510 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c96</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c96: cmp.w  r0,#0x80000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c96:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x80000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87900:4], r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c9a: bhi    0x3cae
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c9a:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84100:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[84200:1], in=[CY, unique[84100:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3cae:4], unique[84200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15510,
		block_size=6,
		insn_addrs="[15510, 15514]"
	];
	15510 -> { 15534, 15516 };


	15516 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003c9c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003c9c: subs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c9c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x1, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003c9e: clz    r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3c9e:4]])<br/>
			&nbsp;&nbsp;LZCOUNT(out=r0, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ca2: rsb.w  r0,r0,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ca2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[unique[87700:4], r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[unique[87700:4], r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ca6: lsls   r0,r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ca6:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r0, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ca8: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ca8:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15516,
		block_size=14,
		insn_addrs="[15516, 15518, 15522, 15526, 15528]"
	];



	15530 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003caa</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003caa: movs   r0,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3caa:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cac: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cac:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15530,
		block_size=4,
		insn_addrs="[15530, 15532]"
	];



	15534 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003cae</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003cae: movs   r0,#0x3e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cae:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x3e])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cb0: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cb0:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15534,
		block_size=4,
		insn_addrs="[15534, 15536]"
	];



	15538 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003cb2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003cb2: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cb2:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cb4: bl     0xcb0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cb4:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3cb8, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[cb0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15538,
		block_size=6,
		insn_addrs="[15538, 15540]"
	];
	15538 -> { 3248, 15544 };


	15544 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003cb8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003cb8: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cb8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cba: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cba:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15544,
		block_size=4,
		insn_addrs="[15544, 15546]"
	];



	15566 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003cce</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003cce: push   {r4,r5,r6,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cce:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cd0: uxtb   r1, r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cd0:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cd2: ldr    r3,[r0,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cd2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cd4: mrs    r5,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cd4:4]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3cd8:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r5, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cd8: movs   r4,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cd8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cda: msr    basepri_max,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cda:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3cde:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3cde:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r4])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3cde:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cde: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cde:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ce2: movs   r6,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ce2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0xc])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ce4: mla    r4,r6,r1,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ce4:4]])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[a1500:4], in=[r6, r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[unique[a1500:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ce8: ldr    r4,[r4,#0x40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ce8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x40])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cea: ands   r4,r4,#0xc0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cea:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xc0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r4, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cee: beq    0x3d02
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cee:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3d02:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15566,
		block_size=34,
		insn_addrs="[15566, 15568, 15570, 15572, 15576, 15578, 15582, 15586, 15588, 15592, 15594, 15598]"
	];
	15566 -> { 15618, 15600 };


	15600 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003cf0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003cf0: cmp    r2,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cf0:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r4, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r2, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cf2: beq    0x3d02
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cf2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3d02:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15600,
		block_size=4,
		insn_addrs="[15600, 15602]"
	];
	15600 -> { 15618, 15604 };


	15604 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003cf4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003cf4: msr    basepri,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cf4:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3cf8:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cf8: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cf8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003cfc: mov.w  r0,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3cfc:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15604,
		block_size=12,
		insn_addrs="[15604, 15608, 15612]"
	];
	15604 -> { 15616 };


	15616 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003d00</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003d00: pop    {r4,r5,r6,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d00:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15616,
		block_size=2,
		insn_addrs="[15616]"
	];



	15618 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003d02</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003d02: mla    r3,r6,r1,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d02:4]])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[a1500:4], in=[r6, r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[unique[a1500:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d06: movs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d06:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d08: str    r2,[r3,#0x40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d08:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x40])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d0a: msr    basepri,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d0a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3d0e:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d0e: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d0e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d12: ldr    r3,[r0,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d12:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d14: add.w  r3,r3,r1, lsl #0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d14:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x3])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r1, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r1, 0x3])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d18: ldr    r3,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d18:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d1a: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d1a:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3d1c, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15618,
		block_size=26,
		insn_addrs="[15618, 15622, 15624, 15626, 15630, 15634, 15636, 15640, 15642]"
	];
	15618 -> { 15644 };


	15644 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003d1c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003d1c: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d1c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d1e: b      0x3d00
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d1e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3d00:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15644,
		block_size=4,
		insn_addrs="[15644, 15646]"
	];
	15644 -> { 15616 };


	15648 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003d20</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003d20: movs   r2,#0x80
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d20:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x80])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d22: b.w    0x3cce
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d22:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3cce:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15648,
		block_size=6,
		insn_addrs="[15648, 15650]"
	];
	15648 -> { 15566 };


	15654 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003d26</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003d26: push   {r3,r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d26:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d28: ldr    r7,[sp,#0x18]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d28:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x18])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d2a: ldr    r4,[r0,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d2a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d2c: uxtb   r1, r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d2c:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d2e: mrs    r6,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d2e:4]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3d32:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r6, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d32: movs   r5,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d32:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d34: msr    basepri_max,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d34:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3d38:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3d38:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r5])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3d38:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d38: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d38:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d3c: movs   r5,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d3c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0xc])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d3e: mla    r4,r5,r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d3e:4]])<br/>
			&nbsp;&nbsp;INT_MULT(out=unique[a1500:4], in=[r5, r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[unique[a1500:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d42: ldr    r5,[r4,#0x40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d42:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x40])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d44: and    r12,r5,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d44:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r12, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d48: cmp.w  r12,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d48:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r12])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r12, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96d80:4], in=[r12, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96d80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d4c: bne    0x3d68
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d4c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3d68:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15654,
		block_size=40,
		insn_addrs="[15654, 15656, 15658, 15660, 15662, 15666, 15668, 15672, 15676, 15678, 15682, 15684, 15688, 15692]"
	];
	15654 -> { 15720, 15694 };


	15694 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003d4e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003d4e: str    r7,[r4,#0x40]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d4e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x40])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r7])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d50: msr    basepri,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d50:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3d54:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d54: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d54:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d58: strd   r2,r3,[r4,#0x38]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d58:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x38])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d5c: ldr    r3,[r0,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d5c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d5e: ldr.w  r3,[r3,r1,lsl #0x3]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d5e:4]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[98a00:4], in=[r1, 0x3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[98b00:4], in=[r3, unique[98a00:4]])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[98b00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d62: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d62:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3d64, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15694,
		block_size=22,
		insn_addrs="[15694, 15696, 15700, 15704, 15708, 15710, 15714]"
	];
	15694 -> { 15716 };


	15716 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003d64</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003d64: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d64:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15716,
		block_size=2,
		insn_addrs="[15716]"
	];
	15716 -> { 15718 };


	15718 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003d66</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003d66: pop    {r3,r4,r5,r6,r7,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d66:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15718,
		block_size=2,
		insn_addrs="[15718]"
	];



	15720 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003d68</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003d68: and    r5,r5,#0xc0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d68:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xc0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d6c: cmp    r7,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d6c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r5, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r7, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d6e: msr    basepri,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d6e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3d72:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r6])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d72: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d72:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d76: ite    eq
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d76:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85a80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d78: mvn    r0,#0x77
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d78:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x77])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3d7c:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d7c: mov.w  r0,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d7c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3d80:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d80: b      0x3d66
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d80:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3d66:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15720,
		block_size=26,
		insn_addrs="[15720, 15724, 15726, 15730, 15734, 15736, 15740, 15744]"
	];
	15720 -> { 15718 };


	15746 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003d82</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003d82: push   {r0,r1,r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d82:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d84: movs   r4,#0x80
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d84:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x80])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d86: str    r4,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d86:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d88: bl     0x3d26
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d88:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3d8c, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3d26:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15746,
		block_size=10,
		insn_addrs="[15746, 15748, 15750, 15752]"
	];
	15746 -> { 15654, 15756 };


	15756 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003d8c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003d8c: add    sp,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d8c:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003d8e: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3d8e:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15756,
		block_size=4,
		insn_addrs="[15756, 15758]"
	];



	15778 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003da2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003da2: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3da2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003da4: b.w    0x1efc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3da4:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1efc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15778,
		block_size=6,
		insn_addrs="[15778, 15780]"
	];
	15778 -> { 7932 };


	15784 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003da8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003da8: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3da8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003daa: b.w    0x3f7a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3daa:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3f7a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15784,
		block_size=6,
		insn_addrs="[15784, 15786]"
	];
	15784 -> { 16250 };


	15858 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003df2</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003df2: ldr    r3,[r0,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3df2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003df4: ldr    r2,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3df4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003df6: ldr.w  r3,[r2,#0x504]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3df6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x504])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003dfa: bic.w  r0,r1,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3dfa:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95780:4], in=[r3])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r1, unique[95780:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003dfe: ands   r3,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3dfe:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e00: str.w  r0,[r2,#0x508]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x508])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e04: str.w  r3,[r2,#0x50c]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e04:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x50c])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e08: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e08:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e0a: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e0a:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15858,
		block_size=26,
		insn_addrs="[15858, 15860, 15862, 15866, 15870, 15872, 15876, 15880, 15882]"
	];



	15884 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e0c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e0c: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e0c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e0e: ldr    r3,[r0,#0x10]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e0e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x10])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e10: ldr    r0,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e10:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e12: cbz    r0,0x3e54
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e12:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3e54:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15884,
		block_size=8,
		insn_addrs="[15884, 15886, 15888, 15890]"
	];
	15884 -> { 15956, 15892 };


	15892 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e14</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e14: cmp    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e14:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e16: bne    0x3e4c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e16:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3e4c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15892,
		block_size=4,
		insn_addrs="[15892, 15894]"
	];
	15892 -> { 15948, 15896 };


	15896 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e18</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e18: ldr    r4,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e18:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e1a: ldr    r0,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e1a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e1c: str    r0,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e1c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e1e: cmp    r1,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e1e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r4, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r1, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e20: bne    0x3e24
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e20:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3e24:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15896,
		block_size=10,
		insn_addrs="[15896, 15898, 15900, 15902, 15904]"
	];
	15896 -> { 15908, 15906 };


	15906 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e22</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e22: str    r0,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e22:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15906,
		block_size=2,
		insn_addrs="[15906]"
	];
	15906 -> { 15908 };


	15908 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e24</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e24: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e24:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e26: str    r0,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e26:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e28: cbz    r2,0x3e36
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e28:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3e36:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15908,
		block_size=6,
		insn_addrs="[15908, 15910, 15912]"
	];
	15908 -> { 15926, 15914 };


	15914 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e2a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e2a: ldr    r2,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e2a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e2c: str    r2,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e2c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e2e: ldr    r2,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e2e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e30: str    r1,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e30:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e32: cbnz   r2,0x3e36
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e32:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3e36:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15914,
		block_size=10,
		insn_addrs="[15914, 15916, 15918, 15920, 15922]"
	];
	15914 -> { 15926, 15924 };


	15924 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e34</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e34: str    r1,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e34:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r1])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15924,
		block_size=2,
		insn_addrs="[15924]"
	];
	15924 -> { 15926 };


	15926 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e36</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e36: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e36:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e38: b      0x3e5c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e38:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3e5c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15926,
		block_size=4,
		insn_addrs="[15926, 15928]"
	];
	15926 -> { 15964 };


	15930 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e3a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e3a: cmp    r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e3a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e3c: bne    0x3e4c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e3c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3e4c:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15930,
		block_size=4,
		insn_addrs="[15930, 15932]"
	];
	15930 -> { 15948, 15934 };


	15934 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e3e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e3e: ldr    r0,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e3e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e40: str    r0,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e40:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e42: ldr    r0,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e42:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e44: cmp    r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e44:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r1, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e46: bne    0x3e24
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e46:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3e24:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15934,
		block_size=10,
		insn_addrs="[15934, 15936, 15938, 15940, 15942]"
	];
	15934 -> { 15908, 15944 };


	15944 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e48</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e48: str    r4,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e48:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e4a: b      0x3e24
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e4a:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3e24:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15944,
		block_size=4,
		insn_addrs="[15944, 15946]"
	];
	15944 -> { 15908 };


	15948 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e4c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e4c: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e4c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e4e: ldr    r0,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e4e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e50: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e50:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e52: bne    0x3e3a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e52:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3e3a:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15948,
		block_size=8,
		insn_addrs="[15948, 15950, 15952, 15954]"
	];
	15948 -> { 15930, 15956 };


	15956 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e54</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e54: cmp    r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e54:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e56: bne    0x3e2a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e56:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3e2a:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15956,
		block_size=4,
		insn_addrs="[15956, 15958]"
	];
	15956 -> { 15914, 15960 };


	15960 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e58</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e58: mvn    r0,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e58:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x15])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15960,
		block_size=4,
		insn_addrs="[15960]"
	];
	15960 -> { 15964 };


	15964 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e5c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e5c: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e5c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15964,
		block_size=2,
		insn_addrs="[15964]"
	];



	15966 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e5e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e5e: push   {r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e5e:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e60: ldr    r3,[r0,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e60:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15966,
		block_size=4,
		insn_addrs="[15966, 15968]"
	];
	15966 -> { 15970 };


	15970 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e62</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e62: str    r3,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e62:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e64: ldrb   r5,[r0,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e64:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e66: ldr    r4,[r0,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e66:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e68: add.w  r4,r4,r5, lsl #0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e68:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x3])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r5, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r5, 0x3])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e6c: cmp    r3,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e6c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r4, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r3, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e6e: bcc    0x3e76
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e6e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83c80:1], in=[CY, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3e76:4], unique[83c80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15970,
		block_size=14,
		insn_addrs="[15970, 15972, 15974, 15976, 15980, 15982]"
	];
	15970 -> { 15990, 15984 };


	15984 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e70</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e70: mvn    r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e70:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15984,
		block_size=4,
		insn_addrs="[15984]"
	];
	15984 -> { 15988 };


	15988 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e74</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e74: pop    {r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e74:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15988,
		block_size=2,
		insn_addrs="[15988]"
	];



	15990 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e76</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e76: ldrb   r4,[r3,#0x5]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e76:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x5])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r4, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e78: cmp    r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e78:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r1, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r4, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e7a: beq    0x3e80
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e7a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3e80:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15990,
		block_size=6,
		insn_addrs="[15990, 15992, 15994]"
	];
	15990 -> { 16000, 15996 };


	15996 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e7c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e7c: adds   r3,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e7c:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, 0x8])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, 0x8])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e7e: b      0x3e62
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e7e:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3e62:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=15996,
		block_size=4,
		insn_addrs="[15996, 15998]"
	];
	15996 -> { 15970 };


	16000 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003e80</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003e80: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e80:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003e82: b      0x3e74
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3e82:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[3e74:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16000,
		block_size=4,
		insn_addrs="[16000, 16002]"
	];
	16000 -> { 15988 };


	16058 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003eba</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003eba: ldr    r2,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3eba:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ebc: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ebc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ebe: ldr.w  r0,[r2,#0x158]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ebe:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x158])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ec2: cbnz   r0,0x3ed6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ec2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3ed6:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16058,
		block_size=10,
		insn_addrs="[16058, 16060, 16062, 16066]"
	];
	16058 -> { 16086, 16068 };


	16068 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ec4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ec4: ldr    r3,[r3,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ec4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ec6: lsls   r3,r3,#0x1e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ec6:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1e, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1e, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x1e])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ec8: bmi    0x3ed8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ec8:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83d80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3ed8:4], unique[83d80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16068,
		block_size=6,
		insn_addrs="[16068, 16070, 16072]"
	];
	16068 -> { 16088, 16074 };


	16074 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003eca</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003eca: ldr.w  r0,[r2,#0x120]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3eca:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x120])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ece: subs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ece:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ed0: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ed0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ed2: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ed2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3ed4:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ed4: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ed4:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16074,
		block_size=12,
		insn_addrs="[16074, 16078, 16080, 16082, 16084]"
	];



	16086 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ed6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ed6: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ed6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16086,
		block_size=2,
		insn_addrs="[16086]"
	];
	16086 -> { 16088 };


	16088 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ed8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ed8: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ed8:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16088,
		block_size=2,
		insn_addrs="[16088]"
	];



	16090 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003eda</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003eda: ldr    r2,[r0,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3eda:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003edc: ldr    r3,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3edc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ede: ldr.w  r1,[r3,#0x304]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ede:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x304])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ee2: lsls   r1,r1,#0x17
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ee2:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x17, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r1, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x17, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x17, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r1, in=[r1, 0x17])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ee4: bpl    0x3f16
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ee4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3f16:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16090,
		block_size=12,
		insn_addrs="[16090, 16092, 16094, 16098, 16100]"
	];
	16090 -> { 16150, 16102 };


	16102 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ee6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ee6: ldr.w  r1,[r3,#0x120]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ee6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x120])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003eea: cbz    r1,0x3f16
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3eea:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3f16:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16102,
		block_size=6,
		insn_addrs="[16102, 16106]"
	];
	16102 -> { 16150, 16108 };


	16108 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003eec</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003eec: mrs    r1,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3eec:4]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3ef0:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r1, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ef0: movs   r0,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ef0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ef2: msr    basepri_max,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ef2:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3ef6:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3ef6:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3ef6:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ef6: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ef6:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003efa: ldr.w  r0,[r3,#0x120]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3efa:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x120])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003efe: cbz    r0,0x3f0e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3efe:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3f0e:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16108,
		block_size=20,
		insn_addrs="[16108, 16112, 16114, 16118, 16122, 16126]"
	];
	16108 -> { 16142, 16128 };


	16128 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003f00</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003f00: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f00:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f02: str.w  r0,[r3,#0x120]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f02:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x120])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f06: ldr.w  r0,[r3,#0x120]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f06:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x120])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f0a: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f0a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f0c: str    r0,[r3,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f0c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0xc])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16128,
		block_size=14,
		insn_addrs="[16128, 16130, 16134, 16138, 16140]"
	];
	16128 -> { 16142 };


	16142 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003f0e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003f0e: msr    basepri,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f0e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3f12:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f12: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f12:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16142,
		block_size=8,
		insn_addrs="[16142, 16146]"
	];
	16142 -> { 16150 };


	16150 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003f16</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003f16: ldr    r2,[r2,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f16:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f18: lsls   r2,r2,#0x1b
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f18:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1b, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1b, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, 0x1b])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f1a: bpl    0x3f46
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f1a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3f46:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16150,
		block_size=6,
		insn_addrs="[16150, 16152, 16154]"
	];
	16150 -> { 16198, 16156 };


	16156 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003f1c</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003f1c: mrs    r2,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f1c:4]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3f20:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r2, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f20: movs   r1,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f20:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f22: msr    basepri_max,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f22:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3f26:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3f26:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r1])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3f26:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f26: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f26:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f2a: ldr.w  r1,[r3,#0x158]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f2a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x158])<br/>
			&nbsp;&nbsp;LOAD(out=r1, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f2e: cbz    r1,0x3f36
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f2e:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3f36:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16156,
		block_size=20,
		insn_addrs="[16156, 16160, 16162, 16166, 16170, 16174]"
	];
	16156 -> { 16182, 16176 };


	16176 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003f30</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003f30: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f30:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f32: str.w  r1,[r3,#0x500]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f32:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x500])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16176,
		block_size=6,
		insn_addrs="[16176, 16178]"
	];
	16176 -> { 16182 };


	16182 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003f36</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003f36: mov.w  r1,#0x400000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f36:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x400000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f3a: str.w  r1,[r3,#0x308]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f3a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x308])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f3e: msr    basepri,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f3e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3f42:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f42: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f42:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16182,
		block_size=16,
		insn_addrs="[16182, 16186, 16190, 16194]"
	];
	16182 -> { 16198 };


	16198 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003f46</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003f46: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f46:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16198,
		block_size=2,
		insn_addrs="[16198]"
	];



	16200 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003f48</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003f48: add.w  r3,r0,#0x50
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f48:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x50])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f4c: lsls   r3,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f4c:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x2, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f4e: uxth   r3, r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f4e:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d8800:2], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[d8800:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f50: add.w  r3,r3,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f50:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f54: add.w  r3,r3,#0x11000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f54:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x11000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f58: movs   r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f58:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f5a: str    r2,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f5a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f5c: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f5c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f5e: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f5e:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16200,
		block_size=24,
		insn_addrs="[16200, 16204, 16206, 16208, 16212, 16216, 16218, 16220, 16222]"
	];



	16226 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003f62</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003f62: b.w    0x408c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f62:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[408c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16226,
		block_size=4,
		insn_addrs="[16226]"
	];
	16226 -> { 16524 };


	16230 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003f66</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003f66: lsls   r0,r0,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f66:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x3, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r0, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x3, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x3, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r0, in=[r0, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f68: add.w  r0,r0,#0x40000000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f68:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87900:4], in=[0x40000000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87a00:4], in=[unique[87900:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87a00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, unique[87900:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f6c: add.w  r0,r0,#0x1f000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f6c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x1f000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f70: str.w  r1,[r0,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f70:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x510])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f74: str.w  r2,[r0,#0x514]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f74:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x514])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f78: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f78:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16230,
		block_size=20,
		insn_addrs="[16230, 16232, 16236, 16240, 16244, 16248]"
	];



	16250 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003f7a</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003f7a: b.w    0x1df4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f7a:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[1df4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16250,
		block_size=4,
		insn_addrs="[16250]"
	];
	16250 -> { 7668 };


	16254 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003f7e</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003f7e: push   {r0,r1,r2,r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f7e:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f80: str    r0,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f80:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f82: add    r0,sp,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f82:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[87280:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[unique[87280:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f84: ldrd   r4,r7,[sp,#0x20]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f84:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[sp, 0x20])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f88: mov    r6,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f88:2]])<br/>
			&nbsp;&nbsp;COPY(out=r6, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f8a: mov    r5,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f8a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f8c: bl     0x200c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f8c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x3f90, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[200c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16254,
		block_size=18,
		insn_addrs="[16254, 16256, 16258, 16260, 16264, 16266, 16268]"
	];
	16254 -> { 8204, 16272 };


	16272 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003f90</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003f90: ldr    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f90:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92a80:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f92: subs.w r12,r6,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f92:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r12, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f96: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f96:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f98: mov.w  r12,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f98:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3f9c:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003f9c: add.w  r0,r0,r3, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3f9c:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r3, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r3, 0x2])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fa0: subs   r3,r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fa0:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r3, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fa2: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fa2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fa4: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fa4:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3fa6:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fa6: cmp    r5,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fa6:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fa8: orr.w  r3,r3,r12, lsl #0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fa8:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r12, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r12, 0x1])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fac: ite    ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fac:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fae: mov.w  r12,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fae:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xc])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3fb2:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fb2: mov.w  r12,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fb2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3fb6:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fb6: cmp    r4,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fb6:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fb8: orr.w  r3,r3,r12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fb8:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r12])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fbc: ite    ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fbc:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fbe: mov.w  r12,#0x700
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fbe:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x700])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3fc2:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fc2: mov.w  r12,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fc2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3fc6:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fc6: cmp    r7,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fc6:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r7])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fc8: orr.w  r3,r3,r12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fc8:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r12])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fcc: ldr.w  r2,[r0,#0x700]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fcc:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x700])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fd0: ite    ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fd0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fd2: mov.w  r12,#0x30000
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fd2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87b00:4], in=[0x30000])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87c00:4], in=[unique[87b00:4], 0x1f])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[87c00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3fd6:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[unique[87b00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fd6: mov.w  r12,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fd6:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[280:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[280:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3fda:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r12, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r12, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fda: orr.w  r3,r3,r12
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fda:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, r12])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fde: bic.w  r3,r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fde:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95780:4], in=[r3])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r2, unique[95780:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fe2: cbz    r1,0x3fe6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fe2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3fe6:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16272,
		block_size=84,
		insn_addrs="[16272, 16274, 16278, 16280, 16284, 16288, 16290, 16292, 16294, 16296, 16300, 16302, 16306, 16310, 16312, 16316, 16318, 16322, 16326, 16328, 16332, 16336, 16338, 16342, 16346, 16350, 16354]"
	];
	16272 -> { 16358, 16356 };


	16356 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003fe4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003fe4: ldrb   r1,[r1,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fe4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r1, in=[unique[97900:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16356,
		block_size=2,
		insn_addrs="[16356]"
	];
	16356 -> { 16358 };


	16358 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003fe6</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003fe6: cbz    r6,0x3fec
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fe6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3fec:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16358,
		block_size=2,
		insn_addrs="[16358]"
	];
	16358 -> { 16364, 16360 };


	16360 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003fe8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003fe8: ldrb   r6,[r6,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fe8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r6, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r6, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fea: lsls   r6,r6,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fea:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r6, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r6, in=[r6, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r6, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16360,
		block_size=4,
		insn_addrs="[16360, 16362]"
	];
	16360 -> { 16364 };


	16364 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003fec</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003fec: orrs   r1,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fec:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003fee: cbz    r5,0x3ff4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3fee:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3ff4:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16364,
		block_size=4,
		insn_addrs="[16364, 16366]"
	];
	16364 -> { 16372, 16368 };


	16368 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ff0</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ff0: ldrb   r5,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ff0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ff2: lsls   r5,r5,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ff2:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x2, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r5, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x2, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r5, in=[r5, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16368,
		block_size=4,
		insn_addrs="[16368, 16370]"
	];
	16368 -> { 16372 };


	16372 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ff4</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ff4: orrs   r1,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ff4:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ff6: cbz    r4,0x3ffc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ff6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[3ffc:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16372,
		block_size=4,
		insn_addrs="[16372, 16374]"
	];
	16372 -> { 16380, 16376 };


	16376 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ff8</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ff8: ldrb   r4,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ff8:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r4, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ffa: lsls   r4,r4,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ffa:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x8, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r4, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x8, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x8, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r4, in=[r4, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16376,
		block_size=4,
		insn_addrs="[16376, 16378]"
	];
	16376 -> { 16380 };


	16380 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00003ffc</b></td></tr>
			<tr><td align="left" balign="left">
			0x00003ffc: orrs   r1,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ffc:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, r5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00003ffe: cbz    r7,0x4004
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[3ffe:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4004:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16380,
		block_size=4,
		insn_addrs="[16380, 16382]"
	];
	16380 -> { 16388, 16384 };


	16384 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004000</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004000: ldrb   r7,[r7,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4000:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r7, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004002: lsls   r7,r7,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4002:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x10, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r7, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x10, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x10, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r7, in=[r7, 0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16384,
		block_size=4,
		insn_addrs="[16384, 16386]"
	];
	16384 -> { 16388 };


	16388 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004004</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004004: orrs   r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4004:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r4, in=[r4, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004006: orrs   r4,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4006:2]])<br/>
			&nbsp;&nbsp;INT_OR(out=r4, in=[r4, r7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004008: str.w  r4,[r0,#0x700]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4008:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r0, 0x700])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000400c: add    sp,#0xc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[400c:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0xc])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000400e: pop    {r4,r5,r6,r7,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[400e:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16388,
		block_size=12,
		insn_addrs="[16388, 16390, 16392, 16396, 16398]"
	];



	16400 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004010</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004010: push   {r0,r1,r2,r3,r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4010:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r0])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004012: add.w  r3,sp,#0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4012:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xf])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[sp, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004016: str    r3,[sp,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4016:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004018: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4018:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000401a: strb.w r1,[sp,#0xf]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[401a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[sp, 0xf])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3400:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], unique[c3400:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000401e: str    r3,[sp,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[401e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92a80:4], in=[sp, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92a80:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004020: mov    r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4020:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004022: mov    r1,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4022:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004024: bl     0x3f7e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4024:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x4028, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3f7e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16400,
		block_size=24,
		insn_addrs="[16400, 16402, 16406, 16408, 16410, 16414, 16416, 16418, 16420]"
	];
	16400 -> { 16254, 16424 };


	16424 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004028</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004028: add    sp,#0x14
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4028:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87300:4], in=[0x14])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, unique[87300:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000402a: pop.w  pc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[402a:4]])<br/>
			&nbsp;&nbsp;LOAD(out=unique[a2380:4], in=[0x600000f0c300, sp])<br/>
			&nbsp;&nbsp;INT_ADD(out=sp, in=[sp, 0x4])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[unique[a2380:4], 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[unique[a2380:4], 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16424,
		block_size=6,
		insn_addrs="[16424, 16426]"
	];



	16430 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000402e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000402e: push   {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[402e:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004030: mov    r5,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4030:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004032: mov    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4032:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004034: mov    r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4034:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004036: bl     0x20b0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4036:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x403a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[20b0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16430,
		block_size=12,
		insn_addrs="[16430, 16432, 16434, 16436, 16438]"
	];
	16430 -> { 8368, 16442 };


	16442 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000403a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000403a: cbz    r0,0x406a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[403a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[406a:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16442,
		block_size=2,
		insn_addrs="[16442]"
	];
	16442 -> { 16490, 16444 };


	16444 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000403c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000403c: mov    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[403c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000403e: bl     0x2098
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[403e:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x4042, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2098:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16444,
		block_size=6,
		insn_addrs="[16444, 16446]"
	];
	16444 -> { 8344, 16450 };


	16450 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004042</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004042: cbnz   r0,0x406a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4042:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[406a:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16450,
		block_size=2,
		insn_addrs="[16450]"
	];
	16450 -> { 16490, 16452 };


	16452 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004044</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004044: mov    r0,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4044:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004046: bl     0x2080
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4046:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x404a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2080:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16452,
		block_size=6,
		insn_addrs="[16452, 16454]"
	];
	16452 -> { 8320, 16458 };


	16458 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000404a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000404a: ldr    r2,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[404a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000404c: movs   r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[404c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000404e: lsls   r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[404e:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c680:4], in=[r0, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[unique[9c680:4], 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[unique[9c680:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, unique[9c680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004050: str.w  r3,[r2,#0x308]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4050:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r2, 0x308])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004054: ldr    r2,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4054:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004056: sxth   r3, r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4056:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c8c00:2], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r3, in=[unique[c8c00:2]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004058: add.w  r3,r2,r3, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4058:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r3, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r3, 0x2])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r2, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000405c: ldr.w  r2,[r3,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[405c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x510])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[91a00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004060: bic    r2,r2,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4060:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x3])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004064: str.w  r2,[r3,#0x510]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4064:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0x510])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004068: pop    {r3,r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4068:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16458,
		block_size=32,
		insn_addrs="[16458, 16460, 16462, 16464, 16468, 16470, 16472, 16476, 16480, 16484, 16488]"
	];



	16490 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000406a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000406a: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[406a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000406c: movs   r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[406c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000406e: pop.w  {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[406e:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004072: b.w    0x4010
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4072:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[4010:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16490,
		block_size=12,
		insn_addrs="[16490, 16492, 16494, 16498]"
	];
	16490 -> { 16400 };


	16502 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004076</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004076: b.w    0x21bc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4076:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[21bc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16502,
		block_size=4,
		insn_addrs="[16502]"
	];
	16502 -> { 8636 };


	16506 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000407a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000407a: b.w    0x402e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[407a:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[402e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16506,
		block_size=4,
		insn_addrs="[16506]"
	];
	16506 -> { 16430 };


	16510 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000407e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000407e: b.w    0x27f8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[407e:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[27f8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16510,
		block_size=4,
		insn_addrs="[16510]"
	];
	16510 -> { 10232 };


	16514 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004082</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004082: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4082:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004084: bl     0x407e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4084:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x4088, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[407e:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16514,
		block_size=6,
		insn_addrs="[16514, 16516]"
	];
	16514 -> { 16510, 16520 };


	16520 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004088</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004088: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4088:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000408a: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[408a:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16520,
		block_size=4,
		insn_addrs="[16520, 16522]"
	];



	16524 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000408c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000408c: cbz    r0,0x4092
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[408c:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4092:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16524,
		block_size=2,
		insn_addrs="[16524]"
	];
	16524 -> { 16530, 16526 };


	16526 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000408e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000408e: b.w    0xd3c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[408e:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[d3c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16526,
		block_size=4,
		insn_addrs="[16526]"
	];
	16526 -> { 3388 };


	16530 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004092</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004092: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4092:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16530,
		block_size=2,
		insn_addrs="[16530]"
	];



	16532 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004094</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004094: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4094:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16532,
		block_size=2,
		insn_addrs="[16532]"
	];



	16534 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004096</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004096: cbz    r0,0x40aa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4096:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[40aa:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16534,
		block_size=2,
		insn_addrs="[16534]"
	];
	16534 -> { 16554, 16536 };


	16536 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004098</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004098: ldr    r3,[r0,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4098:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000409a: ldrb   r0,[r3,#0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[409a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000409c: ands   r0,r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[409c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r0, in=[r0, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040a0: ittt   ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40a0:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040a2: ldrb   r0,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40a2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[40a4:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r0, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040a4: clz    r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40a4:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[40a8:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;LZCOUNT(out=r0, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040a8: lsrs   r0,r0,#0x5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40a8:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[40aa:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x5])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r0, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r0, in=[r0, 0x5])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16536,
		block_size=18,
		insn_addrs="[16536, 16538, 16540, 16544, 16546, 16548, 16552]"
	];
	16536 -> { 16554 };


	16554 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040aa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040aa: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40aa:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16554,
		block_size=2,
		insn_addrs="[16554]"
	];



	16556 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040ac</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040ac: mrs    r3,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40ac:4]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[40b0:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r3, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040b0: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40b0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040b2: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40b2:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[40b6:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[40b6:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[40b6:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040b6: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40b6:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16556,
		block_size=14,
		insn_addrs="[16556, 16560, 16562, 16566]"
	];
	16556 -> { 16570 };


	16570 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040ba</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040ba: b      0x40ba
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40ba:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[40ba:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16570,
		block_size=2,
		insn_addrs="[16570]"
	];
	16570 -> { 16570 };


	16572 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040bc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040bc: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40bc:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040be: bl     0x40ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40be:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x40c2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[40ac:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16572,
		block_size=6,
		insn_addrs="[16572, 16574]"
	];
	16572 -> { 16556, 16578 };


	16578 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040c2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040c2: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40c2:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040c4: ldrd   r3,r4,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40c4:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040c8: cbnz   r3,0x40d8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40c8:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[40d8:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16578,
		block_size=8,
		insn_addrs="[16578, 16580, 16584]"
	];
	16578 -> { 16600, 16586 };


	16586 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040ca</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040ca: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40ca:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16586,
		block_size=2,
		insn_addrs="[16586]"
	];
	16586 -> { 16588 };


	16588 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040cc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040cc: ldr    r2,[r4,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40cc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040ce: ldrb   r3,[r2,#0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40ce:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r2, 0x1])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040d0: orr    r3,r3,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40d0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040d4: strb   r3,[r2,#0x1]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40d4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r2, 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040d6: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40d6:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16588,
		block_size=12,
		insn_addrs="[16588, 16590, 16592, 16596, 16598]"
	];



	16600 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040d8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040d8: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40d8:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040da: blx    r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40da:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r3, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x40dc, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16600,
		block_size=4,
		insn_addrs="[16600, 16602]"
	];
	16600 -> { 16604 };


	16604 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040dc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040dc: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40dc:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040de: beq    0x40ca
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40de:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[40ca:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16604,
		block_size=4,
		insn_addrs="[16604, 16606]"
	];
	16604 -> { 16586, 16608 };


	16608 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040e0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040e0: cmp    r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40e0:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040e2: it     lt
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40e2:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86680:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040e4: rsbs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40e4:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[e80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[e80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[40e6:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpCY, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040e6: ldr    r3,[r4,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40e6:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040e8: cmp    r0,#0xff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40e8:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0xff, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0xff])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r0, 0xff])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040ea: it     ge
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40ea:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[86580:1], in=[NG, OV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040ec: movs   r0,#0xff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40ec:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[d80:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[d80:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[40ee:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0xff])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040ee: strb   r0,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40ee:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040f0: b      0x40cc
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40f0:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[40cc:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16608,
		block_size=18,
		insn_addrs="[16608, 16610, 16612, 16614, 16616, 16618, 16620, 16622, 16624]"
	];
	16608 -> { 16588 };


	16626 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040f2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040f2: b.w    0x43c0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40f2:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[43c0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16626,
		block_size=4,
		insn_addrs="[16626]"
	];
	16626 -> { 17344 };


	16630 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040f6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040f6: b.w    0x43a4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40f6:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[43a4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16630,
		block_size=4,
		insn_addrs="[16630]"
	];
	16630 -> { 17316 };


	16634 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040fa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040fa: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40fa:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16634,
		block_size=2,
		insn_addrs="[16634]"
	];



	16636 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000040fc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000040fc: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40fc:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000040fe: movs   r4,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[40fe:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16636,
		block_size=4,
		insn_addrs="[16636, 16638]"
	];
	16636 -> { 16640 };


	16640 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004100</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004100: mrs    r3,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4100:4]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4104:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r3, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004104: msr    basepri_max,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4104:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4108:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4108:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r4])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4108:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004108: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4108:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000410c: bl     0x3c5a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[410c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x4110, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3c5a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16640,
		block_size=16,
		insn_addrs="[16640, 16644, 16648, 16652]"
	];
	16640 -> { 15450, 16656 };


	16656 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004110</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004110: b      0x4100
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4110:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[4100:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16656,
		block_size=2,
		insn_addrs="[16656]"
	];
	16656 -> { 16640 };


	16658 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004112</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004112: mrs    r0,ipsr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4112:4]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9ea00:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9ea80:1], in=[unique[9ea00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[0x4, unique[9ea80:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9eb80:4], in=[0x132])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9ec00:4], in=[unique[9eb80:4], 0x1f])<br/>
			&nbsp;&nbsp;INT_OR(out=r0, in=[r0, unique[9ec00:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004116: subs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4116:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004118: it     ne
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4118:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[85b80:1], in=[ZR, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000411a: movs   r0,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[411a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[380:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[411c:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000411c: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[411c:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16658,
		block_size=12,
		insn_addrs="[16658, 16662, 16664, 16666, 16668]"
	];



	16670 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000411e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000411e: b.w    0x2eb0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[411e:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2eb0:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16670,
		block_size=4,
		insn_addrs="[16670]"
	];
	16670 -> { 11952 };


	16674 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004122</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004122: ldrd   r3,r2,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4122:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92400:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[99880:4], in=[unique[92400:4], 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[99880:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004126: str    r3,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4126:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004128: str    r2,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4128:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000412a: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[412a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000412c: strd   r3,r3,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[412c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004130: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4130:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16674,
		block_size=16,
		insn_addrs="[16674, 16678, 16680, 16682, 16684, 16688]"
	];



	16690 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004132</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004132: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4132:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004134: bl     0x4122
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4134:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x4138, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4122:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16690,
		block_size=6,
		insn_addrs="[16690, 16692]"
	];
	16690 -> { 16674, 16696 };


	16696 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004138</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004138: ldrb   r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4138:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000413a: bic    r3,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[413a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=unique[95680:4], in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[95680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000413e: strb   r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[413e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004140: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4140:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004142: str    r3,[r0,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4142:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004144: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4144:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16696,
		block_size=14,
		insn_addrs="[16696, 16698, 16702, 16704, 16706, 16708]"
	];



	16710 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004146</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004146: push   {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4146:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004148: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4148:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000414a: mov    r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[414a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000414c: bl     0x2c4c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[414c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x4150, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2c4c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16710,
		block_size=10,
		insn_addrs="[16710, 16712, 16714, 16716]"
	];
	16710 -> { 11340, 16720 };


	16720 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004150</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004150: ldrb   r3,[r4,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4150:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004152: orr    r3,r3,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4152:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x2])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004156: strb   r3,[r4,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4156:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004158: cbz    r5,0x4194
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4158:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4194:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16720,
		block_size=10,
		insn_addrs="[16720, 16722, 16726, 16728]"
	];
	16720 -> { 16788, 16730 };


	16730 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000415a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000415a: str    r5,[r4,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[415a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r4, 0x8])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000415c: ldr    r3,[r5,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[415c:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000415e: cmp    r5,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[415e:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r5, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004160: bne    0x4176
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4160:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4176:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16730,
		block_size=8,
		insn_addrs="[16730, 16732, 16734, 16736]"
	];
	16730 -> { 16758, 16738 };


	16738 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004162</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004162: ldr    r3,[r5,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4162:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004164: strd   r5,r3,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4164:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r5])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004168: str    r4,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4168:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000416a: str    r4,[r5,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[416a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000416c: b      0x4194
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[416c:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[4194:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16738,
		block_size=12,
		insn_addrs="[16738, 16740, 16744, 16746, 16748]"
	];
	16738 -> { 16788 };


	16750 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000416e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000416e: ldr    r2,[r5,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[416e:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r5, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004170: cmp    r2,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4170:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004172: beq    0x4162
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4172:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4162:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16750,
		block_size=6,
		insn_addrs="[16750, 16752, 16754]"
	];
	16750 -> { 16738, 16756 };


	16756 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004174</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004174: ldr    r3,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4174:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16756,
		block_size=2,
		insn_addrs="[16756]"
	];
	16756 -> { 16758 };


	16758 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004176</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004176: cmp    r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4176:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004178: beq    0x4162
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4178:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4162:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16758,
		block_size=4,
		insn_addrs="[16758, 16760]"
	];
	16758 -> { 16738, 16762 };


	16762 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000417a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000417a: ldrsb.w r2,[r4,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[417a:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r4, 0xe])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9ad00:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r2, in=[unique[9ad00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000417e: ldrsb.w r1,[r3,#0xe]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[417e:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91a00:4], in=[r3, 0xe])<br/>
			&nbsp;&nbsp;LOAD(out=unique[9ad00:1], in=[0x600000f0c300, unique[91a00:4]])<br/>
			&nbsp;&nbsp;INT_SEXT(out=r1, in=[unique[9ad00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004182: cmp    r2,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4182:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r1, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r2, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004184: beq    0x416e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4184:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[416e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16762,
		block_size=12,
		insn_addrs="[16762, 16766, 16770, 16772]"
	];
	16762 -> { 16750, 16774 };


	16774 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004186</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004186: cmp    r1,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4186:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r1, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004188: ble    0x416e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4188:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[84800:1], in=[NG, OV])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84900:1], in=[ZR, unique[84800:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[416e:4], unique[84900:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16774,
		block_size=4,
		insn_addrs="[16774, 16776]"
	];
	16774 -> { 16750, 16778 };


	16778 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000418a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000418a: ldr    r2,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[418a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r2, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000418c: strd   r3,r2,[r4,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[418c:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92400:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=unique[c3a00:4], in=[unique[92400:4]])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[c3a00:4], in=[unique[c3a00:4], 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[c3a00:4], r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004190: str    r4,[r2,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4190:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004192: str    r4,[r3,#0x4]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4192:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r3, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92600:4], r4])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16778,
		block_size=10,
		insn_addrs="[16778, 16780, 16784, 16786]"
	];
	16778 -> { 16788 };


	16788 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004194</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004194: pop    {r3,r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4194:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16788,
		block_size=2,
		insn_addrs="[16788]"
	];



	16790 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004196</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004196: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4196:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004198: mrs    r4,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4198:4]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[419c:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r4, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000419c: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[419c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000419e: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[419e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41a2:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41a2:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41a2:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041a2: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41a2:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041a6: bl     0x2c7c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41a6:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x41aa, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2c7c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16790,
		block_size=20,
		insn_addrs="[16790, 16792, 16796, 16798, 16802, 16806]"
	];
	16790 -> { 11388, 16810 };


	16810 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000041aa</b></td></tr>
			<tr><td align="left" balign="left">
			0x000041aa: msr    basepri,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41aa:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41ae:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041ae: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41ae:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041b2: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41b2:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16810,
		block_size=10,
		insn_addrs="[16810, 16814, 16818]"
	];



	16820 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000041b4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000041b4: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41b4:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041b6: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41b6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041b8: adds   r0,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41b8:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, 0x18])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, 0x18])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x18])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041ba: bl     0x42ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41ba:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x41be, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[42ac:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16820,
		block_size=10,
		insn_addrs="[16820, 16822, 16824, 16826]"
	];
	16820 -> { 17068, 16830 };


	16830 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000041be</b></td></tr>
			<tr><td align="left" balign="left">
			0x000041be: mrs    r1,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41be:4]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41c2:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r1, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041c2: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41c2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041c4: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41c4:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41c8:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41c8:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41c8:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041c8: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41c8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041cc: ldrb   r2,[r4,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41cc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041ce: ands   r2,r2,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41ce:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x10])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r2, in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041d2: beq    0x41de
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41d2:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41de:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16830,
		block_size=22,
		insn_addrs="[16830, 16834, 16836, 16840, 16844, 16846, 16850]"
	];
	16830 -> { 16862, 16852 };


	16852 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000041d4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000041d4: msr    basepri,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41d4:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41d8:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041d8: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41d8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041dc: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41dc:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16852,
		block_size=10,
		insn_addrs="[16852, 16856, 16860]"
	];



	16862 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000041de</b></td></tr>
			<tr><td align="left" balign="left">
			0x000041de: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41de:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041e0: pop.w  {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41e0:4]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=lr, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041e4: b.w    0x2ce4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41e4:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2ce4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16862,
		block_size=10,
		insn_addrs="[16862, 16864, 16868]"
	];
	16862 -> { 11492 };


	16872 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000041e8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000041e8: push   {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41e8:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041ea: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41ea:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041ec: mrs    r5,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41ec:4]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41f0:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r5, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041f0: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41f0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041f2: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41f2:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41f6:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41f6:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[41f6:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041f6: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41f6:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041fa: ldrb   r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41fa:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000041fc: tst    r3,#0x28
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[41fc:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x28])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[ca580:4], in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=ZR, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=NG, in=[unique[ca580:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[shift_carry])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004200: bne    0x421a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4200:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[421a:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16872,
		block_size=26,
		insn_addrs="[16872, 16874, 16876, 16880, 16882, 16886, 16890, 16892, 16896]"
	];
	16872 -> { 16922, 16898 };


	16898 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004202</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004202: ldr    r3,[r0,#0x8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4202:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x8])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004204: cbz    r3,0x420a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4204:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[420a:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16898,
		block_size=4,
		insn_addrs="[16898, 16900]"
	];
	16898 -> { 16906, 16902 };


	16902 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004206</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004206: bl     0x4132
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4206:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x420a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4132:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16902,
		block_size=4,
		insn_addrs="[16902]"
	];
	16902 -> { 16690, 16906 };


	16906 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000420a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000420a: ldrb   r3,[r4,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[420a:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000420c: cbnz   r1,0x4224
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[420c:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[96200:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4224:4], unique[96200:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16906,
		block_size=4,
		insn_addrs="[16906, 16908]"
	];
	16906 -> { 16932, 16910 };


	16910 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000420e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000420e: and    r3,r3,#0xfb
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[420e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xfb])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16910,
		block_size=4,
		insn_addrs="[16910]"
	];
	16910 -> { 16914 };


	16914 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004212</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004212: strb   r3,[r4,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4212:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r4, 0xd])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c2d80:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[92800:4], unique[c2d80:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004214: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4214:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004216: bl     0x2c7c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4216:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x421a, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[2c7c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16914,
		block_size=8,
		insn_addrs="[16914, 16916, 16918]"
	];
	16914 -> { 11388, 16922 };


	16922 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000421a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000421a: msr    basepri,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[421a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[421e:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000421e: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[421e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004222: pop    {r3,r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4222:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16922,
		block_size=10,
		insn_addrs="[16922, 16926, 16930]"
	];



	16932 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004224</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004224: and    r3,r3,#0xeb
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4224:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xeb])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004228: b      0x4212
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4228:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[4212:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16932,
		block_size=6,
		insn_addrs="[16932, 16936]"
	];
	16932 -> { 16914 };


	16938 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000422a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000422a: movs   r1,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[422a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000422c: subs   r0,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[422c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x18, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, 0x18])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r0, 0x18])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000422e: b.w    0x41e8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[422e:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[41e8:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16938,
		block_size=8,
		insn_addrs="[16938, 16940, 16942]"
	];
	16938 -> { 16872 };


	16946 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004232</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004232: push   {r3,r4,r5,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4232:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004234: mrs    r5,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4234:4]])<br/>
			&nbsp;&nbsp;COPY(out=r5, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4238:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r5, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004238: movs   r3,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4238:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000423a: msr    basepri_max,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[423a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[423e:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[423e:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r3])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[423e:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000423e: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[423e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004242: ldr    r4,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4242:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004244: cmp    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4244:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r4, r0])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r0, r4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r0, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004246: beq    0x4264
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4246:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4264:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16946,
		block_size=22,
		insn_addrs="[16946, 16948, 16952, 16954, 16958, 16962, 16964, 16966]"
	];
	16946 -> { 16996, 16968 };


	16968 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004248</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004248: cbz    r4,0x4258
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4248:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4258:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16968,
		block_size=2,
		insn_addrs="[16968]"
	];
	16968 -> { 16984, 16970 };


	16970 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000424a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000424a: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[424a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000424c: bl     0x4132
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[424c:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x4250, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[4132:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16970,
		block_size=6,
		insn_addrs="[16970, 16972]"
	];
	16970 -> { 16690, 16976 };


	16976 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004250</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004250: add.w  r0,r4,#0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4250:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x18])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r4, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004254: bl     0x42ac
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4254:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x4258, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[42ac:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16976,
		block_size=8,
		insn_addrs="[16976, 16980]"
	];
	16976 -> { 17068, 16984 };


	16984 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004258</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004258: msr    basepri,r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4258:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[425c:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r5])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000425c: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[425c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004260: mov    r0,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4260:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004262: pop    {r3,r4,r5,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4262:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16984,
		block_size=12,
		insn_addrs="[16984, 16988, 16992, 16994]"
	];



	16996 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004264</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004264: movs   r4,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4264:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004266: b      0x4258
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4266:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[4258:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=16996,
		block_size=4,
		insn_addrs="[16996, 16998]"
	];
	16996 -> { 16984 };


	17000 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004268</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004268: mrs    r1,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4268:4]])<br/>
			&nbsp;&nbsp;COPY(out=r1, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[426c:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r1, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000426c: movs   r2,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[426c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000426e: msr    basepri_max,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[426e:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4272:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4272:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r2])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4272:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004272: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4272:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004276: ldrb   r2,[r0,#0xc]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4276:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xc])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r2, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004278: lsls   r2,r2,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4278:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1f, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r2, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1f, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r2, in=[r2, 0x1f])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000427a: bpl    0x4296
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[427a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4296:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17000,
		block_size=20,
		insn_addrs="[17000, 17004, 17006, 17010, 17014, 17016, 17018]"
	];
	17000 -> { 17046, 17020 };


	17020 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000427c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000427c: msr    basepri,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[427c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4280:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004280: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4280:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004284: movs   r3,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4284:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004286: msr    basepri,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4286:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[428a:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000428a: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[428a:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000428e: movs   r3,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[428e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004290: mov    r0,r3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4290:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r3])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004292: svc    0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4292:2]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0xf, 0x2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004294: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4294:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17020,
		block_size=26,
		insn_addrs="[17020, 17024, 17028, 17030, 17034, 17038, 17040, 17042, 17044]"
	];



	17046 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004296</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004296: ldrb   r3,[r0,#0xd]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4296:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r0, 0xd])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r3, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004298: lsls   r3,r3,#0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4298:2]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c080:4], in=[0x1c, 0x1])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[9c100:4], in=[r3, unique[9c080:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c200:4], in=[unique[9c100:4], 0x80000000])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c280:1], in=[0x1c, 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c300:1], in=[unique[9c280:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c380:1], in=[0x1c, 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9c400:1], in=[unique[9c200:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9c480:1], in=[unique[9c380:1], unique[9c400:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9c300:1], unique[9c480:1]])<br/>
			&nbsp;&nbsp;INT_LEFT(out=r3, in=[r3, 0x1c])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000429a: bpl    0x42a6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[429a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83e80:1], in=[NG, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[42a6:4], unique[83e80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17046,
		block_size=6,
		insn_addrs="[17046, 17048, 17050]"
	];
	17046 -> { 17062, 17052 };


	17052 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000429c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000429c: msr    basepri,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[429c:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[42a0:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042a0: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42a0:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042a4: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42a4:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17052,
		block_size=10,
		insn_addrs="[17052, 17056, 17060]"
	];



	17062 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000042a6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000042a6: movs   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42a6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042a8: b.w    0x2ce4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42a8:4]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[2ce4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17062,
		block_size=6,
		insn_addrs="[17062, 17064]"
	];
	17062 -> { 11492 };


	17068 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000042ac</b></td></tr>
			<tr><td align="left" balign="left">
			0x000042ac: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42ac:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042ae: mrs    r4,basepri
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42ae:4]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[0x0])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[9f080:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[9f100:1], in=[unique[9f080:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[42b2:4], unique[9f100:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=r4, in=[0x131])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042b2: movs   r2,#0x20
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42b2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[0x20])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042b4: msr    basepri_max,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42b4:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0380:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0400:1], in=[unique[a0380:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[42b8:4], unique[a0400:1]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[a0480:1], in=[r2, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[42b8:4], unique[a0480:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0580:4], in=[0x131])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[a0600:1], in=[unique[a0580:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=unique[a0680:1], in=[unique[a0580:4], r2])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[a0700:1], in=[unique[a0600:1], unique[a0680:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[42b8:4], unique[a0700:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042b8: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42b8:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042bc: ldr    r3,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42bc:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042be: cbz    r3,0x42d0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42be:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[96300:1], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[42d0:4], unique[96300:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17068,
		block_size=20,
		insn_addrs="[17068, 17070, 17074, 17076, 17080, 17084, 17086]"
	];
	17068 -> { 17104, 17088 };


	17088 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000042c0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000042c0: bl     0x322c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42c0:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x42c4, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[322c:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17088,
		block_size=4,
		insn_addrs="[17088]"
	];
	17088 -> { 12844, 17092 };


	17092 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000042c4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000042c4: movs   r0,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42c4:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17092,
		block_size=2,
		insn_addrs="[17092]"
	];
	17092 -> { 17094 };


	17094 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000042c6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000042c6: msr    basepri,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42c6:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(out=unique[a0200:1], in=[0x26])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a0280:1], in=[unique[a0200:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[42ca:4], unique[a0280:1]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x137, r4])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042ca: isb    #0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42ca:4]])<br/>
			&nbsp;&nbsp;CALLOTHER(in=[0x32, 0xf])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042ce: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42ce:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17094,
		block_size=10,
		insn_addrs="[17094, 17098, 17102]"
	];



	17104 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000042d0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000042d0: mvn    r0,#0x15
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42d0:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x15])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_NEGATE(out=r0, in=[unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042d4: b      0x42c6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42d4:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[42c6:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17104,
		block_size=6,
		insn_addrs="[17104, 17108]"
	];
	17104 -> { 17094 };


	17110 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000042d6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000042d6: push   {r3,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42d6:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r3])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042d8: bl     0x3468
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42d8:4]])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x42dc, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=ISAModeSwitch, in=[0x1])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;CALL(in=[ram[3468:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17110,
		block_size=6,
		insn_addrs="[17110, 17112]"
	];
	17110 -> { 13416, 17116 };


	17116 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000042dc</b></td></tr>
			<tr><td align="left" balign="left">
			0x000042dc: pop    {r3,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42dc:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r3, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17116,
		block_size=2,
		insn_addrs="[17116]"
	];



	17118 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000042de</b></td></tr>
			<tr><td align="left" balign="left">
			0x000042de: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42de:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042e0: mov    r2,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42e0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r2, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042e2: add    r1,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42e2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r1, r0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17118,
		block_size=6,
		insn_addrs="[17118, 17120, 17122]"
	];
	17118 -> { 17124 };


	17124 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000042e4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000042e4: cmp    r2,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42e4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r1, r2])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r2, r1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r2, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042e6: mov    r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42e6:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r2])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042e8: beq    0x42f2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42e8:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[42f2:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17124,
		block_size=6,
		insn_addrs="[17124, 17126, 17128]"
	];
	17124 -> { 17138, 17130 };


	17130 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000042ea</b></td></tr>
			<tr><td align="left" balign="left">
			0x000042ea: ldrb   r4,[r3,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42ea:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92800:4], in=[r3, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=unique[97900:1], in=[0x600000f0c300, unique[92800:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r4, in=[unique[97900:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042ec: adds   r2,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42ec:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042ee: cmp    r4,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42ee:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x0, r4])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042f0: bne    0x42e4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42f0:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[42e4:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17130,
		block_size=8,
		insn_addrs="[17130, 17132, 17134, 17136]"
	];
	17130 -> { 17124, 17138 };


	17138 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000042f2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000042f2: subs   r0,r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42f2:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r0, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SUB(out=r0, in=[r3, r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042f4: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42f4:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17138,
		block_size=4,
		insn_addrs="[17138, 17140]"
	];



	17142 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000042f6</b></td></tr>
			<tr><td align="left" balign="left">
			0x000042f6: push   {r4,r5,r6,r7,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42f6:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r7])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r6])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r5])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042f8: rsb.w  r7,r3,#0x37
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42f8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x37])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[unique[87700:4], r3])<br/>
			&nbsp;&nbsp;INT_SUB(out=r7, in=[unique[87700:4], r3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r7, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042fc: mov    r4,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42fc:2]])<br/>
			&nbsp;&nbsp;COPY(out=r4, in=[r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000042fe: uxtb   r7, r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[42fe:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r7, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r7, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004300: and    r3,r3,#0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4300:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x1f])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r3, in=[r3, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004304: mov    r0,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4304:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r2])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17142,
		block_size=16,
		insn_addrs="[17142, 17144, 17148, 17150, 17152, 17156]"
	];
	17142 -> { 17158 };


	17158 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004306</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004306: cmp    r3,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4306:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x8, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x8])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004308: uxtb   r6, r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4308:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r6, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000430a: beq    0x4374
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[430a:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4374:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17158,
		block_size=6,
		insn_addrs="[17158, 17160, 17162]"
	];
	17158 -> { 17268, 17164 };


	17164 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000430c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000430c: cmp    r3,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[430c:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x10, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, 0x10])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r3, 0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000430e: beq    0x438e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[430e:2]])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[83980:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[438e:4], unique[83980:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17164,
		block_size=4,
		insn_addrs="[17164, 17166]"
	];
	17164 -> { 17294, 17168 };


	17168 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004310</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004310: lsrs   r5,r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4310:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x1])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r4, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r5, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004312: lsrs   r4,r4,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4312:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r4, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r4, in=[r4, 0x2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004314: orr.w  r4,r4,r1, lsl #0x1e
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4314:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x1e])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r1, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r1, 0x1e])<br/>
			&nbsp;&nbsp;INT_OR(out=r4, in=[r4, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004318: orr.w  r5,r5,r1, lsl #0x1f
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4318:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x1f])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r1, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r1, 0x1f])<br/>
			&nbsp;&nbsp;INT_OR(out=r5, in=[r5, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000431c: adds   r5,r5,r4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[431c:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, r4])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, r4])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, r4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000431e: lsr.w  r2,r1,#0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[431e:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87d00:4], in=[0x2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[87d00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r1, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[87d00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[87d00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r2, in=[r1, unique[87d00:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004322: adc.w  r2,r2,r1, lsr #0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4322:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[88480:4], in=[0x1, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88500:4], in=[r1, unique[88480:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88600:4], in=[unique[88500:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88600:4], 0x0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88780:4], in=[r1, 0x1])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r2, unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r2, unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r2, unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93780:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93880:4], in=[unique[88780:4], unique[93780:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, unique[93880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004326: lsrs   r1,r5,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4326:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r5, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r5, 0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004328: orr.w  r1,r1,r2, lsl #0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4328:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x1c])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r2, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r2, 0x1c])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000432c: adds   r5,r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[432c:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, r1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000432e: adc.w  r2,r2,r2, lsr #0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[432e:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[88480:4], in=[0x4, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88500:4], in=[r2, unique[88480:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88600:4], in=[unique[88500:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88600:4], 0x0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88780:4], in=[r2, 0x4])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r2, unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r2, unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r2, unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93780:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93880:4], in=[unique[88780:4], unique[93780:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, unique[93880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004332: lsrs   r1,r5,#0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4332:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x8])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r5, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r5, 0x8])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004334: orr.w  r1,r1,r2, lsl #0x18
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4334:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x18])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r2, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r2, 0x18])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004338: adds   r5,r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4338:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, r1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000433a: adc.w  r2,r2,r2, lsr #0x8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[433a:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[88480:4], in=[0x8, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88500:4], in=[r2, unique[88480:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88600:4], in=[unique[88500:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88600:4], 0x0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88780:4], in=[r2, 0x8])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r2, unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r2, unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r2, unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93780:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93880:4], in=[unique[88780:4], unique[93780:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, unique[93880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000433e: lsrs   r1,r5,#0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[433e:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x10])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r5, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r5, 0x10])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004340: orr.w  r1,r1,r2, lsl #0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4340:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x10])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r2, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r2, 0x10])<br/>
			&nbsp;&nbsp;INT_OR(out=r1, in=[r1, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004344: adds   r5,r5,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4344:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, r1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, r1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004346: adc.w  r2,r2,r2, lsr #0x10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4346:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[88480:4], in=[0x10, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88500:4], in=[r2, unique[88480:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88600:4], in=[unique[88500:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88600:4], 0x0])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[88780:4], in=[r2, 0x10])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r2, unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r2, unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r2, unique[88780:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93780:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93880:4], in=[unique[88780:4], unique[93780:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, unique[93880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000434a: adds   r5,r5,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[434a:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, r2])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, r2])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000434c: adc    r2,r2,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[434c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93600:4], in=[r2, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93680:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[unique[93600:4], unique[93680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004350: lsrs   r4,r5,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4350:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r5, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r4, in=[r5, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004352: orr.w  r4,r4,r2, lsl #0x1d
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4352:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x1d])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r2, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r2, 0x1d])<br/>
			&nbsp;&nbsp;INT_OR(out=r4, in=[r4, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004356: lsrs   r1,r2,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4356:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r2, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r2, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004358: add.w  r2,r4,r4, lsl #0x2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4358:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x2])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r4, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r4, 0x2])<br/>
			&nbsp;&nbsp;COPY(out=unique[93b80:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r4, unique[93b80:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000435c: sub.w  r5,r6,r2, lsl #0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[435c:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r2, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r2, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=unique[c5100:4], in=[unique[88200:4]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[c5100:4], r6])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r6, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r5, in=[r6, unique[c5100:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004360: uxtb   r5, r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4360:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004362: cmp    r5,#0x9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4362:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x9, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x9])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r5, 0x9])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004364: bls    0x4380
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4364:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[84280:1], in=[CY])<br/>
			&nbsp;&nbsp;BOOL_OR(out=unique[84380:1], in=[unique[84280:1], ZR])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4380:4], unique[84380:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17168,
		block_size=86,
		insn_addrs="[17168, 17170, 17172, 17176, 17180, 17182, 17186, 17190, 17192, 17196, 17198, 17202, 17204, 17208, 17210, 17214, 17216, 17220, 17222, 17226, 17228, 17232, 17234, 17238, 17240, 17244, 17248, 17250, 17252]"
	];
	17168 -> { 17280, 17254 };


	17254 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004366</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004366: adds   r4,#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4366:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r4, in=[r4, 0x1])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004368: sub.w  r5,r5,#0xa
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4368:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xa])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[unique[87700:4], r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=r5, in=[r5, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000436c: adc    r1,r1,#0x0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[436c:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x0])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[81280:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[81380:4], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81400:1], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=unique[81480:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[81400:1], unique[81480:1]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81580:1], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=unique[81600:1], in=[unique[81380:4], unique[81280:4]])<br/>
			&nbsp;&nbsp;BOOL_XOR(out=tmpOV, in=[unique[81580:1], unique[81600:1]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[93600:4], in=[r1, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=unique[93680:4], in=[CY])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[unique[93600:4], unique[93680:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004370: uxtb   r5, r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4370:2]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004372: b      0x439a
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4372:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[439a:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17254,
		block_size=14,
		insn_addrs="[17254, 17256, 17260, 17264, 17266]"
	];
	17254 -> { 17306 };


	17268 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004374</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004374: lsrs   r4,r4,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4374:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r4, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r4, in=[r4, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004376: orr.w  r4,r4,r1, lsl #0x1d
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4376:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x1d])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r1, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r1, 0x1d])<br/>
			&nbsp;&nbsp;INT_OR(out=r4, in=[r4, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000437a: and    r5,r6,#0x7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[437a:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0x7])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000437e: lsrs   r1,r1,#0x3
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[437e:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x3])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r1, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r1, 0x3])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17268,
		block_size=12,
		insn_addrs="[17268, 17270, 17274, 17278]"
	];
	17268 -> { 17280 };


	17280 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004380</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004380: adds   r5,#0x30
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4380:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, 0x30])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, 0x30])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, 0x30])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004382: orrs.w r2,r4,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4382:4]])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_OR(out=r2, in=[r4, r1])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r2, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004386: strb.w r5,[r0],#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4386:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r0])<br/>
			&nbsp;&nbsp;INT_ADD(out=r0, in=[r0, 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3500:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91b80:4], unique[c3500:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000438a: bne    0x4306
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[438a:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[4306:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17280,
		block_size=12,
		insn_addrs="[17280, 17282, 17286, 17290]"
	];
	17280 -> { 17158, 17292 };


	17292 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000438c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000438c: pop    {r4,r5,r6,r7,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[438c:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r5, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r6, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=r7, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17292,
		block_size=2,
		insn_addrs="[17292]"
	];



	17294 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000438e</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000438e: lsrs   r4,r4,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[438e:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r4, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r4, in=[r4, 0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004390: orr.w  r4,r4,r1, lsl #0x1c
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4390:4]])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[87f00:4], in=[0x20, 0x1c])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[87f80:4], in=[r1, unique[87f00:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[88080:4], in=[unique[87f80:4], 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=shift_carry, in=[unique[88080:4], 0x0])<br/>
			&nbsp;&nbsp;INT_LEFT(out=unique[88200:4], in=[r1, 0x1c])<br/>
			&nbsp;&nbsp;INT_OR(out=r4, in=[r4, unique[88200:4]])<br/>
			&nbsp;&nbsp;COPY(out=tmpCY, in=[shift_carry])<br/>
			&nbsp;&nbsp;COPY(out=tmpOV, in=[OV])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r4, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r4, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004394: and    r5,r6,#0xf
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4394:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87700:4], in=[0xf])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_AND(out=r5, in=[r6, unique[87700:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004398: lsrs   r1,r1,#0x4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4398:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x4])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r1, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r1, 0x4])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17294,
		block_size=12,
		insn_addrs="[17294, 17296, 17300, 17304]"
	];
	17294 -> { 17306 };


	17306 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000439a</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000439a: cmp    r5,#0x9
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[439a:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[0x9, r5])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r5, 0x9])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96c80:4], in=[r5, 0x9])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96c80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000439c: itt    hi
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[439c:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[86200:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[86300:1], in=[CY, unique[86200:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000439e: adds   r5,r5,r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[439e:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a00:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[b00:1], in=[CY, unique[a00:1]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1300:1], in=[unique[b00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[43a0:4], unique[1300:1]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r5, r7])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r5, r7])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r5, r7])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000043a0: uxtb   r5, r5
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43a0:2]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[a00:1], in=[ZR])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[b00:1], in=[CY, unique[a00:1]])<br/>
			&nbsp;&nbsp;BOOL_NEGATE(out=unique[1380:1], in=[unique[b00:1]])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[43a2:4], unique[1380:1]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[d7e00:1], in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r5, in=[unique[d7e00:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000043a2: b      0x4380
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43a2:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[4380:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17306,
		block_size=10,
		insn_addrs="[17306, 17308, 17310, 17312, 17314]"
	];
	17306 -> { 17280 };


	17316 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000043a4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000043a4: add    r2,r1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43a4:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, r1])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000043a6: cmp    r1,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43a6:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r1, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000043a8: add.w  r3,r0,#0xffffffff
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43a8:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[87880:4], in=[0xffffffff])<br/>
			&nbsp;&nbsp;COPY(out=shift_carry, in=[CY])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r0, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r0, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r0, unique[87880:4]])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r3, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r3, 0x0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000043ac: bne    0x43b0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43ac:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[43b0:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17316,
		block_size=10,
		insn_addrs="[17316, 17318, 17320, 17324]"
	];
	17316 -> { 17328, 17326 };


	17326 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000043ae</b></td></tr>
			<tr><td align="left" balign="left">
			0x000043ae: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43ae:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17326,
		block_size=2,
		insn_addrs="[17326]"
	];



	17328 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000043b0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000043b0: push   {r4,lr}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43b0:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, lr])<br/>
			&nbsp;&nbsp;INT_SUB(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, mult_addr, r4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17328,
		block_size=2,
		insn_addrs="[17328]"
	];
	17328 -> { 17330 };


	17330 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000043b2</b></td></tr>
			<tr><td align="left" balign="left">
			0x000043b2: ldrb.w r4,[r1],#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43b2:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r1])<br/>
			&nbsp;&nbsp;INT_ADD(out=r1, in=[r1, 0x1])<br/>
			&nbsp;&nbsp;LOAD(out=unique[99000:1], in=[0x600000f0c300, unique[91b80:4]])<br/>
			&nbsp;&nbsp;INT_ZEXT(out=r4, in=[unique[99000:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000043b6: strb.w r4,[r3,#0x1]!
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43b6:4]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[91f00:4], in=[r3, 0x1])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[unique[91f00:4]])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3500:1], in=[r4, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91f00:4], unique[c3500:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000043ba: cmp    r1,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43ba:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r1])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r1, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r1, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000043bc: bne    0x43b2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43bc:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[43b2:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17330,
		block_size=12,
		insn_addrs="[17330, 17334, 17338, 17340]"
	];
	17330 -> { 17330, 17342 };


	17342 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000043be</b></td></tr>
			<tr><td align="left" balign="left">
			0x000043be: pop    {r4,pc}
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43be:2]])<br/>
			&nbsp;&nbsp;COPY(out=mult_addr, in=[sp])<br/>
			&nbsp;&nbsp;LOAD(out=r4, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;LOAD(out=pc, in=[0x600000f0c300, mult_addr])<br/>
			&nbsp;&nbsp;INT_ADD(out=mult_addr, in=[mult_addr, 0x4])<br/>
			&nbsp;&nbsp;COPY(out=sp, in=[mult_addr])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[pc, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[pc, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17342,
		block_size=2,
		insn_addrs="[17342]"
	];



	17344 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000043c0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000043c0: add    r2,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43c0:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=r2, in=[r2, r0])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000043c2: mov    r3,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43c2:2]])<br/>
			&nbsp;&nbsp;COPY(out=r3, in=[r0])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17344,
		block_size=4,
		insn_addrs="[17344, 17346]"
	];
	17344 -> { 17348 };


	17348 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000043c4</b></td></tr>
			<tr><td align="left" balign="left">
			0x000043c4: cmp    r3,r2
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43c4:2]])<br/>
			&nbsp;&nbsp;INT_LESSEQUAL(out=tmpCY, in=[r2, r3])<br/>
			&nbsp;&nbsp;INT_SBORROW(out=tmpOV, in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[96f80:4], in=[r3, r2])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[unique[96f80:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000043c6: bne    0x43ca
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43c6:2]])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[83a80:1], in=[ZR, 0x0])<br/>
			&nbsp;&nbsp;CBRANCH(in=[ram[43ca:4], unique[83a80:1]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17348,
		block_size=4,
		insn_addrs="[17348, 17350]"
	];
	17348 -> { 17354, 17352 };


	17352 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000043c8</b></td></tr>
			<tr><td align="left" balign="left">
			0x000043c8: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43c8:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17352,
		block_size=2,
		insn_addrs="[17352]"
	];



	17354 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000043ca</b></td></tr>
			<tr><td align="left" balign="left">
			0x000043ca: strb.w r1,[r3],#0x1
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43ca:4]])<br/>
			&nbsp;&nbsp;COPY(out=unique[91b80:4], in=[r3])<br/>
			&nbsp;&nbsp;INT_ADD(out=r3, in=[r3, 0x1])<br/>
			&nbsp;&nbsp;SUBPIECE(out=unique[c3500:1], in=[r1, 0x0])<br/>
			&nbsp;&nbsp;STORE(in=[0x600000f0c300, unique[91b80:4], unique[c3500:1]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000043ce: b      0x43c4
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43ce:2]])<br/>
			&nbsp;&nbsp;BRANCH(in=[ram[43c4:4]])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17354,
		block_size=6,
		insn_addrs="[17354, 17358]"
	];
	17354 -> { 17348 };


	17360 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x000043d0</b></td></tr>
			<tr><td align="left" balign="left">
			0x000043d0: ldr    r0,[0x43d8]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43d0:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[ram[43d8:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000043d2: ldr    r0,[r0,#0x0]
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43d2:2]])<br/>
			&nbsp;&nbsp;INT_ADD(out=unique[92600:4], in=[r0, 0x0])<br/>
			&nbsp;&nbsp;LOAD(out=r0, in=[0x600000f0c300, unique[92600:4]])
			</td></tr>
			<tr><td align="left" balign="left">
			0x000043d4: bx     lr
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[43d4:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[lr, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[lr, 0xfffffffe])<br/>
			&nbsp;&nbsp;RETURN(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17360,
		block_size=6,
		insn_addrs="[17360, 17362, 17364]"
	];



	17428 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004414</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004414: adds   r5,r3,r6
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4414:2]])<br/>
			&nbsp;&nbsp;INT_CARRY(out=tmpCY, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SCARRY(out=tmpOV, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_ADD(out=r5, in=[r3, r6])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r5, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])<br/>
			&nbsp;&nbsp;COPY(out=OV, in=[tmpOV])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004416: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4416:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004418: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4418:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000441a: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[441a:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17428,
		block_size=8,
		insn_addrs="[17428, 17430, 17432, 17434]"
	];
	17428 -> { 17436 };


	17436 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000441c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000441c: lsrs   r1,r3,#0x13
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[441c:2]])<br/>
			&nbsp;&nbsp;COPY(out=unique[9cd00:4], in=[0x13])<br/>
			&nbsp;&nbsp;INT_SUB(out=unique[9c780:4], in=[unique[9cd00:4], 0x1])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=unique[9c800:4], in=[r3, unique[9c780:4]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[9c900:4], in=[unique[9c800:4], 0x1])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=unique[9c980:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9ca00:1], in=[unique[9c980:1], CY])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9ca80:1], in=[unique[9cd00:4], 0x0])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=unique[9cb00:1], in=[unique[9c900:4], 0x0])<br/>
			&nbsp;&nbsp;BOOL_AND(out=unique[9cb80:1], in=[unique[9ca80:1], unique[9cb00:1]])<br/>
			&nbsp;&nbsp;BOOL_OR(out=tmpCY, in=[unique[9ca00:1], unique[9cb80:1]])<br/>
			&nbsp;&nbsp;INT_RIGHT(out=r1, in=[r3, 0x13])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r1, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=CY, in=[tmpCY])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000441e: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[441e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004420: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4420:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004422: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4422:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17436,
		block_size=8,
		insn_addrs="[17436, 17438, 17440, 17442]"
	];
	17436 -> { 17444 };


	17444 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004424</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004424: bx     r10
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4424:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r10, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r10, 0xfffffffe])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17444,
		block_size=2,
		insn_addrs="[17444]"
	];



	17504 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004460</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004460: blx    r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4460:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r0, 0xfffffffe])<br/>
			&nbsp;&nbsp;INT_OR(out=lr, in=[0x4462, 0x1])<br/>
			&nbsp;&nbsp;CALLIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17504,
		block_size=2,
		insn_addrs="[17504]"
	];
	17504 -> { 17506 };


	17506 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004462</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004462: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4462:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004464: mov    r12,r8
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4464:2]])<br/>
			&nbsp;&nbsp;COPY(out=r12, in=[r8])
			</td></tr>
			<tr><td align="left" balign="left">
			0x00004466: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4466:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17506,
		block_size=6,
		insn_addrs="[17506, 17508, 17510]"
	];
	17506 -> { 17512 };


	17512 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004468</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004468: bxns   r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4468:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r0, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r0, 0xfffffffe])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17512,
		block_size=2,
		insn_addrs="[17512]"
	];



	17948 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x0000461c</b></td></tr>
			<tr><td align="left" balign="left">
			0x0000461c: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[461c:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
			<tr><td align="left" balign="left">
			0x0000461e: movs   r0,r0
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[461e:2]])<br/>
			&nbsp;&nbsp;COPY(out=r0, in=[r0])<br/>
			&nbsp;&nbsp;INT_SLESS(out=tmpNG, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;INT_EQUAL(out=tmpZR, in=[r0, 0x0])<br/>
			&nbsp;&nbsp;COPY(out=ZR, in=[tmpZR])<br/>
			&nbsp;&nbsp;COPY(out=NG, in=[tmpNG])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17948,
		block_size=4,
		insn_addrs="[17948, 17950]"
	];
	17948 -> { 17952 };


	17952 [
		label=<<font face="monospace" point-size="6">
		<table align="left" cellborder="0" cellpadding="1">
		<tr><td><b>0x00004620</b></td></tr>
			<tr><td align="left" balign="left">
			0x00004620: bx     r7
			</td></tr>
			<tr><td align="left" balign="left">
			&nbsp;&nbsp;IMARK(in=[ram[4620:2]])<br/>
			&nbsp;&nbsp;INT_AND(out=unique[0:4], in=[r7, 0x1])<br/>
			&nbsp;&nbsp;INT_NOTEQUAL(out=ISAModeSwitch, in=[unique[0:4], 0x0])<br/>
			&nbsp;&nbsp;COPY(out=TB, in=[ISAModeSwitch])<br/>
			&nbsp;&nbsp;INT_AND(out=pc, in=[r7, 0xfffffffe])<br/>
			&nbsp;&nbsp;BRANCHIND(in=[pc])
			</td></tr>
		</table>
		</font>>,
		shape=none,
		address=17952,
		block_size=2,
		insn_addrs="[17952]"
	];


}
